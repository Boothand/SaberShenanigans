export DeathmatchScoreboardMessage
code
proc DeathmatchScoreboardMessage 2484 68
file "../g_cmds.c"
line 20
;1:// Copyright (C) 1999-2000 Id Software, Inc.
;2://
;3:#include "g_local.h"
;4:
;5:#include "../../ui/menudef.h"			// for the voice chats
;6:
;7://rww - for getting bot commands...
;8:int AcceptBotCommand(char *cmd, gentity_t *pl);
;9://end rww
;10:
;11:void BG_CycleInven(playerState_t *ps, int direction);
;12:void BG_CycleForce(playerState_t *ps, int direction);
;13:
;14:/*
;15:==================
;16:DeathmatchScoreboardMessage
;17:
;18:==================
;19:*/
;20:void DeathmatchScoreboardMessage( gentity_t *ent ) {
line 29
;21:	char		entry[1024];
;22:	char		string[1400];
;23:	int			stringlength;
;24:	int			i, j;
;25:	gclient_t	*cl;
;26:	int			numSorted, scoreFlags, accuracy, perfect;
;27:
;28:	// send the latest information on all clients
;29:	string[0] = 0;
ADDRLP4 1052
CNSTI1 0
ASGNI1
line 30
;30:	stringlength = 0;
ADDRLP4 1032
CNSTI4 0
ASGNI4
line 31
;31:	scoreFlags = 0;
ADDRLP4 2452
CNSTI4 0
ASGNI4
line 33
;32:
;33:	numSorted = level.numConnectedClients;
ADDRLP4 1048
ADDRGP4 level+72
INDIRI4
ASGNI4
line 35
;34:	
;35:	if (numSorted > MAX_CLIENT_SCORE_SEND)
ADDRLP4 1048
INDIRI4
CNSTI4 20
LEI4 $80
line 36
;36:	{
line 37
;37:		numSorted = MAX_CLIENT_SCORE_SEND;
ADDRLP4 1048
CNSTI4 20
ASGNI4
line 38
;38:	}
LABELV $80
line 40
;39:
;40:	for (i=0 ; i < numSorted ; i++) {
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRGP4 $85
JUMPV
LABELV $82
line 43
;41:		int		ping;
;42:
;43:		cl = &level.clients[level.sortedClients[i]];
ADDRLP4 0
CNSTI4 1756
ADDRLP4 4
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+84
ADDP4
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
line 45
;44:
;45:		if ( cl->pers.connected == CON_CONNECTING ) {
ADDRLP4 0
INDIRP4
CNSTI4 1368
ADDP4
INDIRI4
CNSTI4 1
NEI4 $87
line 46
;46:			ping = -1;
ADDRLP4 2456
CNSTI4 -1
ASGNI4
line 47
;47:		} else {
ADDRGP4 $88
JUMPV
LABELV $87
line 48
;48:			ping = cl->ps.ping < 999 ? cl->ps.ping : 999;
ADDRLP4 0
INDIRP4
CNSTI4 484
ADDP4
INDIRI4
CNSTI4 999
GEI4 $90
ADDRLP4 2460
ADDRLP4 0
INDIRP4
CNSTI4 484
ADDP4
INDIRI4
ASGNI4
ADDRGP4 $91
JUMPV
LABELV $90
ADDRLP4 2460
CNSTI4 999
ASGNI4
LABELV $91
ADDRLP4 2456
ADDRLP4 2460
INDIRI4
ASGNI4
line 49
;49:		}
LABELV $88
line 51
;50:
;51:		if( cl->accuracy_shots ) {
ADDRLP4 0
INDIRP4
CNSTI4 1652
ADDP4
INDIRI4
CNSTI4 0
EQI4 $92
line 52
;52:			accuracy = cl->accuracy_hits * 100 / cl->accuracy_shots;
ADDRLP4 1040
CNSTI4 100
ADDRLP4 0
INDIRP4
CNSTI4 1656
ADDP4
INDIRI4
MULI4
ADDRLP4 0
INDIRP4
CNSTI4 1652
ADDP4
INDIRI4
DIVI4
ASGNI4
line 53
;53:		}
ADDRGP4 $93
JUMPV
LABELV $92
line 54
;54:		else {
line 55
;55:			accuracy = 0;
ADDRLP4 1040
CNSTI4 0
ASGNI4
line 56
;56:		}
LABELV $93
line 57
;57:		perfect = ( cl->ps.persistant[PERS_RANK] == 0 && cl->ps.persistant[PERS_KILLED] == 0 ) ? 1 : 0;
ADDRLP4 2468
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 288
ADDP4
INDIRI4
ADDRLP4 2468
INDIRI4
NEI4 $95
ADDRLP4 0
INDIRP4
CNSTI4 312
ADDP4
INDIRI4
ADDRLP4 2468
INDIRI4
NEI4 $95
ADDRLP4 2460
CNSTI4 1
ASGNI4
ADDRGP4 $96
JUMPV
LABELV $95
ADDRLP4 2460
CNSTI4 0
ASGNI4
LABELV $96
ADDRLP4 1044
ADDRLP4 2460
INDIRI4
ASGNI4
line 59
;58:
;59:		Com_sprintf (entry, sizeof(entry),
ADDRLP4 8
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $97
ARGP4
ADDRLP4 2472
ADDRLP4 4
INDIRI4
CNSTI4 2
LSHI4
ASGNI4
ADDRLP4 2472
INDIRI4
ADDRGP4 level+84
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 280
ADDP4
INDIRI4
ARGI4
ADDRLP4 2456
INDIRI4
ARGI4
ADDRGP4 level+32
INDIRI4
ADDRLP4 0
INDIRP4
CNSTI4 1456
ADDP4
INDIRI4
SUBI4
CNSTI4 60000
DIVI4
ARGI4
ADDRLP4 2452
INDIRI4
ARGI4
CNSTI4 828
ADDRLP4 2472
INDIRI4
ADDRGP4 level+84
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities+272
ADDP4
INDIRI4
ARGI4
ADDRLP4 1040
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 316
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 320
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 332
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 324
ADDP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 328
ADDP4
INDIRI4
ARGI4
ADDRLP4 1044
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
CNSTI4 336
ADDP4
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 70
;60:			" %i %i %i %i %i %i %i %i %i %i %i %i %i %i", level.sortedClients[i],
;61:			cl->ps.persistant[PERS_SCORE], ping, (level.time - cl->pers.enterTime)/60000,
;62:			scoreFlags, g_entities[level.sortedClients[i]].s.powerups, accuracy, 
;63:			cl->ps.persistant[PERS_IMPRESSIVE_COUNT],
;64:			cl->ps.persistant[PERS_EXCELLENT_COUNT],
;65:			cl->ps.persistant[PERS_GAUNTLET_FRAG_COUNT], 
;66:			cl->ps.persistant[PERS_DEFEND_COUNT], 
;67:			cl->ps.persistant[PERS_ASSIST_COUNT], 
;68:			perfect,
;69:			cl->ps.persistant[PERS_CAPTURES]);
;70:		j = strlen(entry);
ADDRLP4 8
ARGP4
ADDRLP4 2480
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 1036
ADDRLP4 2480
INDIRI4
ASGNI4
line 71
;71:		if (stringlength + j > 1022)
ADDRLP4 1032
INDIRI4
ADDRLP4 1036
INDIRI4
ADDI4
CNSTI4 1022
LEI4 $102
line 72
;72:			break;
ADDRGP4 $84
JUMPV
LABELV $102
line 73
;73:		strcpy (string + stringlength, entry);
ADDRLP4 1032
INDIRI4
ADDRLP4 1052
ADDP4
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 strcpy
CALLP4
pop
line 74
;74:		stringlength += j;
ADDRLP4 1032
ADDRLP4 1032
INDIRI4
ADDRLP4 1036
INDIRI4
ADDI4
ASGNI4
line 75
;75:	}
LABELV $83
line 40
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $85
ADDRLP4 4
INDIRI4
ADDRLP4 1048
INDIRI4
LTI4 $82
LABELV $84
line 78
;76:
;77:	//still want to know the total # of clients
;78:	i = level.numConnectedClients;
ADDRLP4 4
ADDRGP4 level+72
INDIRI4
ASGNI4
line 80
;79:
;80:	trap_SendServerCommand( ent-g_entities, va("scores %i %i %i%s", i, 
ADDRGP4 $105
ARGP4
ADDRLP4 4
INDIRI4
ARGI4
ADDRGP4 level+44+4
INDIRI4
ARGI4
ADDRGP4 level+44+8
INDIRI4
ARGI4
ADDRLP4 1052
ARGP4
ADDRLP4 2456
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2456
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 83
;81:		level.teamScores[TEAM_RED], level.teamScores[TEAM_BLUE],
;82:		string ) );
;83:}
LABELV $78
endproc DeathmatchScoreboardMessage 2484 68
export Cmd_Score_f
proc Cmd_Score_f 0 4
line 93
;84:
;85:
;86:/*
;87:==================
;88:Cmd_Score_f
;89:
;90:Request current scoreboard information
;91:==================
;92:*/
;93:void Cmd_Score_f( gentity_t *ent ) {
line 94
;94:	DeathmatchScoreboardMessage( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 DeathmatchScoreboardMessage
CALLV
pop
line 95
;95:}
LABELV $110
endproc Cmd_Score_f 0 4
export CheatsOk
proc CheatsOk 8 8
line 104
;96:
;97:
;98:
;99:/*
;100:==================
;101:CheatsOk
;102:==================
;103:*/
;104:qboolean	CheatsOk( gentity_t *ent ) {
line 105
;105:	if ( !g_cheats.integer ) {
ADDRGP4 g_cheats+12
INDIRI4
CNSTI4 0
NEI4 $112
line 106
;106:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOCHEATS")));
ADDRGP4 $116
ARGP4
ADDRGP4 $117
ARGP4
ADDRLP4 0
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 107
;107:		return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $111
JUMPV
LABELV $112
line 109
;108:	}
;109:	if ( ent->health <= 0 ) {
ADDRFP4 0
INDIRP4
CNSTI4 676
ADDP4
INDIRI4
CNSTI4 0
GTI4 $118
line 110
;110:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "MUSTBEALIVE")));
ADDRGP4 $116
ARGP4
ADDRGP4 $120
ARGP4
ADDRLP4 0
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 111
;111:		return qfalse;
CNSTI4 0
RETI4
ADDRGP4 $111
JUMPV
LABELV $118
line 113
;112:	}
;113:	return qtrue;
CNSTI4 1
RETI4
LABELV $111
endproc CheatsOk 8 8
bss
align 1
LABELV $122
skip 1024
export ConcatArgs
code
proc ConcatArgs 1048 12
line 122
;114:}
;115:
;116:
;117:/*
;118:==================
;119:ConcatArgs
;120:==================
;121:*/
;122:char	*ConcatArgs( int start ) {
line 128
;123:	int		i, c, tlen;
;124:	static char	line[MAX_STRING_CHARS];
;125:	int		len;
;126:	char	arg[MAX_STRING_CHARS];
;127:
;128:	len = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
line 129
;129:	c = trap_Argc();
ADDRLP4 1040
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1036
ADDRLP4 1040
INDIRI4
ASGNI4
line 130
;130:	for ( i = start ; i < c ; i++ ) {
ADDRLP4 4
ADDRFP4 0
INDIRI4
ASGNI4
ADDRGP4 $126
JUMPV
LABELV $123
line 131
;131:		trap_Argv( i, arg, sizeof( arg ) );
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 12
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 132
;132:		tlen = strlen( arg );
ADDRLP4 12
ARGP4
ADDRLP4 1044
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 8
ADDRLP4 1044
INDIRI4
ASGNI4
line 133
;133:		if ( len + tlen >= MAX_STRING_CHARS - 1 ) {
ADDRLP4 0
INDIRI4
ADDRLP4 8
INDIRI4
ADDI4
CNSTI4 1023
LTI4 $127
line 134
;134:			break;
ADDRGP4 $125
JUMPV
LABELV $127
line 136
;135:		}
;136:		memcpy( line + len, arg, tlen );
ADDRLP4 0
INDIRI4
ADDRGP4 $122
ADDP4
ARGP4
ADDRLP4 12
ARGP4
ADDRLP4 8
INDIRI4
ARGI4
ADDRGP4 memcpy
CALLP4
pop
line 137
;137:		len += tlen;
ADDRLP4 0
ADDRLP4 0
INDIRI4
ADDRLP4 8
INDIRI4
ADDI4
ASGNI4
line 138
;138:		if ( i != c - 1 ) {
ADDRLP4 4
INDIRI4
ADDRLP4 1036
INDIRI4
CNSTI4 1
SUBI4
EQI4 $129
line 139
;139:			line[len] = ' ';
ADDRLP4 0
INDIRI4
ADDRGP4 $122
ADDP4
CNSTI1 32
ASGNI1
line 140
;140:			len++;
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 141
;141:		}
LABELV $129
line 142
;142:	}
LABELV $124
line 130
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $126
ADDRLP4 4
INDIRI4
ADDRLP4 1036
INDIRI4
LTI4 $123
LABELV $125
line 144
;143:
;144:	line[len] = 0;
ADDRLP4 0
INDIRI4
ADDRGP4 $122
ADDP4
CNSTI1 0
ASGNI1
line 146
;145:
;146:	return line;
ADDRGP4 $122
RETP4
LABELV $121
endproc ConcatArgs 1048 12
export SanitizeString
proc SanitizeString 16 4
line 156
;147:}
;148:
;149:/*
;150:==================
;151:SanitizeString
;152:
;153:Remove case and control characters
;154:==================
;155:*/
;156:void SanitizeString( char *in, char *out ) {
ADDRGP4 $133
JUMPV
LABELV $132
line 157
;157:	while ( *in ) {
line 158
;158:		if ( *in == 27 ) {
ADDRFP4 0
INDIRP4
INDIRI1
CVII4 1
CNSTI4 27
NEI4 $135
line 159
;159:			in += 2;		// skip color code
ADDRFP4 0
ADDRFP4 0
INDIRP4
CNSTI4 2
ADDP4
ASGNP4
line 160
;160:			continue;
ADDRGP4 $133
JUMPV
LABELV $135
line 162
;161:		}
;162:		if ( *in < 32 ) {
ADDRFP4 0
INDIRP4
INDIRI1
CVII4 1
CNSTI4 32
GEI4 $137
line 163
;163:			in++;
ADDRFP4 0
ADDRFP4 0
INDIRP4
CNSTI4 1
ADDP4
ASGNP4
line 164
;164:			continue;
ADDRGP4 $133
JUMPV
LABELV $137
line 166
;165:		}
;166:		*out++ = tolower( *in++ );
ADDRLP4 0
ADDRFP4 4
INDIRP4
ASGNP4
ADDRLP4 8
CNSTI4 1
ASGNI4
ADDRFP4 4
ADDRLP4 0
INDIRP4
ADDRLP4 8
INDIRI4
ADDP4
ASGNP4
ADDRLP4 4
ADDRFP4 0
INDIRP4
ASGNP4
ADDRFP4 0
ADDRLP4 4
INDIRP4
ADDRLP4 8
INDIRI4
ADDP4
ASGNP4
ADDRLP4 4
INDIRP4
INDIRI1
CVII4 1
ARGI4
ADDRLP4 12
ADDRGP4 tolower
CALLI4
ASGNI4
ADDRLP4 0
INDIRP4
ADDRLP4 12
INDIRI4
CVII1 4
ASGNI1
line 167
;167:	}
LABELV $133
line 157
ADDRFP4 0
INDIRP4
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $132
line 169
;168:
;169:	*out = 0;
ADDRFP4 4
INDIRP4
CNSTI1 0
ASGNI1
line 170
;170:}
LABELV $131
endproc SanitizeString 16 4
export ClientNumberFromString
proc ClientNumberFromString 2072 8
line 180
;171:
;172:/*
;173:==================
;174:ClientNumberFromString
;175:
;176:Returns a player number for either a number or name string
;177:Returns -1 if invalid
;178:==================
;179:*/
;180:int ClientNumberFromString( gentity_t *to, char *s ) {
line 187
;181:	gclient_t	*cl;
;182:	int			idnum;
;183:	char		s2[MAX_STRING_CHARS];
;184:	char		n2[MAX_STRING_CHARS];
;185:
;186:	// numeric values are just slot numbers
;187:	if (s[0] >= '0' && s[0] <= '9') {
ADDRLP4 2056
ADDRFP4 4
INDIRP4
INDIRI1
CVII4 1
ASGNI4
ADDRLP4 2056
INDIRI4
CNSTI4 48
LTI4 $140
ADDRLP4 2056
INDIRI4
CNSTI4 57
GTI4 $140
line 188
;188:		idnum = atoi( s );
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 2060
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 4
ADDRLP4 2060
INDIRI4
ASGNI4
line 189
;189:		if ( idnum < 0 || idnum >= level.maxclients ) {
ADDRLP4 4
INDIRI4
CNSTI4 0
LTI4 $145
ADDRLP4 4
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $142
LABELV $145
line 190
;190:			trap_SendServerCommand( to-g_entities, va("print \"Bad client slot: %i\n\"", idnum));
ADDRGP4 $146
ARGP4
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 2068
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2068
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 191
;191:			return -1;
CNSTI4 -1
RETI4
ADDRGP4 $139
JUMPV
LABELV $142
line 194
;192:		}
;193:
;194:		cl = &level.clients[idnum];
ADDRLP4 0
CNSTI4 1756
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
line 195
;195:		if ( cl->pers.connected != CON_CONNECTED ) {
ADDRLP4 0
INDIRP4
CNSTI4 1368
ADDP4
INDIRI4
CNSTI4 2
EQI4 $147
line 196
;196:			trap_SendServerCommand( to-g_entities, va("print \"Client %i is not active\n\"", idnum));
ADDRGP4 $149
ARGP4
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 2068
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2068
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 197
;197:			return -1;
CNSTI4 -1
RETI4
ADDRGP4 $139
JUMPV
LABELV $147
line 199
;198:		}
;199:		return idnum;
ADDRLP4 4
INDIRI4
RETI4
ADDRGP4 $139
JUMPV
LABELV $140
line 203
;200:	}
;201:
;202:	// check for a name match
;203:	SanitizeString( s, s2 );
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 1032
ARGP4
ADDRGP4 SanitizeString
CALLV
pop
line 204
;204:	for ( idnum=0,cl=level.clients ; idnum < level.maxclients ; idnum++,cl++ ) {
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRLP4 0
ADDRGP4 level
INDIRP4
ASGNP4
ADDRGP4 $153
JUMPV
LABELV $150
line 205
;205:		if ( cl->pers.connected != CON_CONNECTED ) {
ADDRLP4 0
INDIRP4
CNSTI4 1368
ADDP4
INDIRI4
CNSTI4 2
EQI4 $155
line 206
;206:			continue;
ADDRGP4 $151
JUMPV
LABELV $155
line 208
;207:		}
;208:		SanitizeString( cl->pers.netname, n2 );
ADDRLP4 0
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 SanitizeString
CALLV
pop
line 209
;209:		if ( !strcmp( n2, s2 ) ) {
ADDRLP4 8
ARGP4
ADDRLP4 1032
ARGP4
ADDRLP4 2060
ADDRGP4 strcmp
CALLI4
ASGNI4
ADDRLP4 2060
INDIRI4
CNSTI4 0
NEI4 $157
line 210
;210:			return idnum;
ADDRLP4 4
INDIRI4
RETI4
ADDRGP4 $139
JUMPV
LABELV $157
line 212
;211:		}
;212:	}
LABELV $151
line 204
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
ADDRLP4 0
INDIRP4
CNSTI4 1756
ADDP4
ASGNP4
LABELV $153
ADDRLP4 4
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $150
line 214
;213:
;214:	trap_SendServerCommand( to-g_entities, va("print \"User %s is not on the server\n\"", s));
ADDRGP4 $159
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 2060
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2060
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 215
;215:	return -1;
CNSTI4 -1
RETI4
LABELV $139
endproc ClientNumberFromString 2072 8
export Cmd_Give_f
proc Cmd_Give_f 3200 12
line 226
;216:}
;217:
;218:/*
;219:==================
;220:Cmd_Give_f
;221:
;222:Give items to a client
;223:==================
;224:*/
;225:void Cmd_Give_f (gentity_t *ent)
;226:{
line 235
;227:	char		name[MAX_TOKEN_CHARS];
;228:	gitem_t		*it;
;229:	int			i;
;230:	qboolean	give_all;
;231:	gentity_t		*it_ent;
;232:	trace_t		trace;
;233:	char		arg[MAX_TOKEN_CHARS];
;234:
;235:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 3144
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 3144
INDIRI4
CNSTI4 0
NEI4 $161
line 236
;236:		return;
ADDRGP4 $160
JUMPV
LABELV $161
line 239
;237:	}
;238:
;239:	trap_Argv( 1, name, sizeof( name ) );
CNSTI4 1
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 241
;240:
;241:	if (Q_stricmp(name, "all") == 0)
ADDRLP4 4
ARGP4
ADDRGP4 $165
ARGP4
ADDRLP4 3148
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3148
INDIRI4
CNSTI4 0
NEI4 $163
line 242
;242:		give_all = qtrue;
ADDRLP4 1028
CNSTI4 1
ASGNI4
ADDRGP4 $164
JUMPV
LABELV $163
line 244
;243:	else
;244:		give_all = qfalse;
ADDRLP4 1028
CNSTI4 0
ASGNI4
LABELV $164
line 246
;245:
;246:	if (give_all)
ADDRLP4 1028
INDIRI4
CNSTI4 0
EQI4 $166
line 247
;247:	{
line 248
;248:		i = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $169
JUMPV
LABELV $168
line 250
;249:		while (i < HI_NUM_HOLDABLE)
;250:		{
line 251
;251:			ent->client->ps.stats[STAT_HOLDABLE_ITEMS] |= (1 << i);
ADDRLP4 3152
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 224
ADDP4
ASGNP4
ADDRLP4 3152
INDIRP4
ADDRLP4 3152
INDIRP4
INDIRI4
CNSTI4 1
ADDRLP4 0
INDIRI4
LSHI4
BORI4
ASGNI4
line 252
;252:			i++;
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 253
;253:		}
LABELV $169
line 249
ADDRLP4 0
INDIRI4
CNSTI4 7
LTI4 $168
line 254
;254:		i = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
line 255
;255:	}
LABELV $166
line 257
;256:
;257:	if (give_all || Q_stricmp( name, "health") == 0)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $174
ADDRLP4 4
ARGP4
ADDRGP4 $173
ARGP4
ADDRLP4 3152
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3152
INDIRI4
CNSTI4 0
NEI4 $171
LABELV $174
line 258
;258:	{
line 259
;259:		if (trap_Argc() == 3) {
ADDRLP4 3156
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 3156
INDIRI4
CNSTI4 3
NEI4 $175
line 260
;260:			trap_Argv( 2, arg, sizeof( arg ) );
CNSTI4 2
ARGI4
ADDRLP4 1036
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 261
;261:			ent->health = atoi(arg);
ADDRLP4 1036
ARGP4
ADDRLP4 3160
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRFP4 0
INDIRP4
CNSTI4 676
ADDP4
ADDRLP4 3160
INDIRI4
ASGNI4
line 262
;262:			if (ent->health > ent->client->ps.stats[STAT_MAX_HEALTH]) {
ADDRLP4 3164
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 3164
INDIRP4
CNSTI4 676
ADDP4
INDIRI4
ADDRLP4 3164
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
LEI4 $176
line 263
;263:				ent->health = ent->client->ps.stats[STAT_MAX_HEALTH];
ADDRLP4 3168
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 3168
INDIRP4
CNSTI4 676
ADDP4
ADDRLP4 3168
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
ASGNI4
line 264
;264:			}
line 265
;265:		}
ADDRGP4 $176
JUMPV
LABELV $175
line 266
;266:		else {
line 267
;267:			ent->health = ent->client->ps.stats[STAT_MAX_HEALTH];
ADDRLP4 3160
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 3160
INDIRP4
CNSTI4 676
ADDP4
ADDRLP4 3160
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
ASGNI4
line 268
;268:		}
LABELV $176
line 269
;269:		if (!give_all)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $179
line 270
;270:			return;
ADDRGP4 $160
JUMPV
LABELV $179
line 271
;271:	}
LABELV $171
line 273
;272:
;273:	if (give_all || Q_stricmp(name, "weapons") == 0)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $184
ADDRLP4 4
ARGP4
ADDRGP4 $183
ARGP4
ADDRLP4 3156
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3156
INDIRI4
CNSTI4 0
NEI4 $181
LABELV $184
line 274
;274:	{
line 275
;275:		ent->client->ps.stats[STAT_WEAPONS] = (1 << (WP_DET_PACK+1))  - ( 1 << WP_NONE );
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 232
ADDP4
CNSTI4 16383
ASGNI4
line 276
;276:		if (!give_all)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $185
line 277
;277:			return;
ADDRGP4 $160
JUMPV
LABELV $185
line 278
;278:	}
LABELV $181
line 280
;279:	
;280:	if ( !give_all && Q_stricmp(name, "weaponnum") == 0 )
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $187
ADDRLP4 4
ARGP4
ADDRGP4 $189
ARGP4
ADDRLP4 3160
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3160
INDIRI4
CNSTI4 0
NEI4 $187
line 281
;281:	{
line 282
;282:		trap_Argv( 2, arg, sizeof( arg ) );
CNSTI4 2
ARGI4
ADDRLP4 1036
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 283
;283:		ent->client->ps.stats[STAT_WEAPONS] |= (1 << atoi(arg));
ADDRLP4 1036
ARGP4
ADDRLP4 3164
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 3168
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 232
ADDP4
ASGNP4
ADDRLP4 3168
INDIRP4
ADDRLP4 3168
INDIRP4
INDIRI4
CNSTI4 1
ADDRLP4 3164
INDIRI4
LSHI4
BORI4
ASGNI4
line 284
;284:		return;
ADDRGP4 $160
JUMPV
LABELV $187
line 287
;285:	}
;286:
;287:	if (give_all || Q_stricmp(name, "ammo") == 0)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $193
ADDRLP4 4
ARGP4
ADDRGP4 $192
ARGP4
ADDRLP4 3164
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3164
INDIRI4
CNSTI4 0
NEI4 $190
LABELV $193
line 288
;288:	{
line 289
;289:		int num = 999;
ADDRLP4 3168
CNSTI4 999
ASGNI4
line 290
;290:		if (trap_Argc() == 3) {
ADDRLP4 3172
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 3172
INDIRI4
CNSTI4 3
NEI4 $194
line 291
;291:			trap_Argv( 2, arg, sizeof( arg ) );
CNSTI4 2
ARGI4
ADDRLP4 1036
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 292
;292:			num = atoi(arg);
ADDRLP4 1036
ARGP4
ADDRLP4 3176
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 3168
ADDRLP4 3176
INDIRI4
ASGNI4
line 293
;293:		}
LABELV $194
line 294
;294:		for ( i = 0 ; i < MAX_WEAPONS ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
LABELV $196
line 295
;295:			ent->client->ps.ammo[i] = num;
ADDRLP4 3176
CNSTI4 408
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRFP4 0
INDIRP4
ADDRLP4 3176
INDIRI4
ADDP4
INDIRP4
ADDRLP4 3176
INDIRI4
ADDP4
ADDP4
ADDRLP4 3168
INDIRI4
ASGNI4
line 296
;296:		}
LABELV $197
line 294
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 16
LTI4 $196
line 297
;297:		if (!give_all)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $200
line 298
;298:			return;
ADDRGP4 $160
JUMPV
LABELV $200
line 299
;299:	}
LABELV $190
line 301
;300:
;301:	if (give_all || Q_stricmp(name, "armor") == 0)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $205
ADDRLP4 4
ARGP4
ADDRGP4 $204
ARGP4
ADDRLP4 3168
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3168
INDIRI4
CNSTI4 0
NEI4 $202
LABELV $205
line 302
;302:	{
line 303
;303:		if (trap_Argc() == 3) {
ADDRLP4 3172
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 3172
INDIRI4
CNSTI4 3
NEI4 $206
line 304
;304:			trap_Argv( 2, arg, sizeof( arg ) );
CNSTI4 2
ARGI4
ADDRLP4 1036
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 305
;305:			ent->client->ps.stats[STAT_ARMOR] = atoi(arg);
ADDRLP4 1036
ARGP4
ADDRLP4 3176
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 236
ADDP4
ADDRLP4 3176
INDIRI4
ASGNI4
line 306
;306:		} else {
ADDRGP4 $207
JUMPV
LABELV $206
line 307
;307:			ent->client->ps.stats[STAT_ARMOR] = ent->client->ps.stats[STAT_MAX_HEALTH];
ADDRLP4 3176
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 3176
INDIRP4
CNSTI4 236
ADDP4
ADDRLP4 3176
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
ASGNI4
line 308
;308:		}
LABELV $207
line 310
;309:
;310:		if (!give_all)
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $208
line 311
;311:			return;
ADDRGP4 $160
JUMPV
LABELV $208
line 312
;312:	}
LABELV $202
line 314
;313:
;314:	if (Q_stricmp(name, "excellent") == 0) {
ADDRLP4 4
ARGP4
ADDRGP4 $212
ARGP4
ADDRLP4 3172
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3172
INDIRI4
CNSTI4 0
NEI4 $210
line 315
;315:		ent->client->ps.persistant[PERS_EXCELLENT_COUNT]++;
ADDRLP4 3176
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 320
ADDP4
ASGNP4
ADDRLP4 3176
INDIRP4
ADDRLP4 3176
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 316
;316:		return;
ADDRGP4 $160
JUMPV
LABELV $210
line 318
;317:	}
;318:	if (Q_stricmp(name, "impressive") == 0) {
ADDRLP4 4
ARGP4
ADDRGP4 $215
ARGP4
ADDRLP4 3176
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3176
INDIRI4
CNSTI4 0
NEI4 $213
line 319
;319:		ent->client->ps.persistant[PERS_IMPRESSIVE_COUNT]++;
ADDRLP4 3180
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 316
ADDP4
ASGNP4
ADDRLP4 3180
INDIRP4
ADDRLP4 3180
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 320
;320:		return;
ADDRGP4 $160
JUMPV
LABELV $213
line 322
;321:	}
;322:	if (Q_stricmp(name, "gauntletaward") == 0) {
ADDRLP4 4
ARGP4
ADDRGP4 $218
ARGP4
ADDRLP4 3180
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3180
INDIRI4
CNSTI4 0
NEI4 $216
line 323
;323:		ent->client->ps.persistant[PERS_GAUNTLET_FRAG_COUNT]++;
ADDRLP4 3184
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 332
ADDP4
ASGNP4
ADDRLP4 3184
INDIRP4
ADDRLP4 3184
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 324
;324:		return;
ADDRGP4 $160
JUMPV
LABELV $216
line 326
;325:	}
;326:	if (Q_stricmp(name, "defend") == 0) {
ADDRLP4 4
ARGP4
ADDRGP4 $221
ARGP4
ADDRLP4 3184
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3184
INDIRI4
CNSTI4 0
NEI4 $219
line 327
;327:		ent->client->ps.persistant[PERS_DEFEND_COUNT]++;
ADDRLP4 3188
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 324
ADDP4
ASGNP4
ADDRLP4 3188
INDIRP4
ADDRLP4 3188
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 328
;328:		return;
ADDRGP4 $160
JUMPV
LABELV $219
line 330
;329:	}
;330:	if (Q_stricmp(name, "assist") == 0) {
ADDRLP4 4
ARGP4
ADDRGP4 $224
ARGP4
ADDRLP4 3188
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 3188
INDIRI4
CNSTI4 0
NEI4 $222
line 331
;331:		ent->client->ps.persistant[PERS_ASSIST_COUNT]++;
ADDRLP4 3192
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 328
ADDP4
ASGNP4
ADDRLP4 3192
INDIRP4
ADDRLP4 3192
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 332
;332:		return;
ADDRGP4 $160
JUMPV
LABELV $222
line 336
;333:	}
;334:
;335:	// spawn a specific item right on the player
;336:	if ( !give_all ) {
ADDRLP4 1028
INDIRI4
CNSTI4 0
NEI4 $225
line 337
;337:		it = BG_FindItem (name);
ADDRLP4 4
ARGP4
ADDRLP4 3192
ADDRGP4 BG_FindItem
CALLP4
ASGNP4
ADDRLP4 2060
ADDRLP4 3192
INDIRP4
ASGNP4
line 338
;338:		if (!it) {
ADDRLP4 2060
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $227
line 339
;339:			return;
ADDRGP4 $160
JUMPV
LABELV $227
line 342
;340:		}
;341:
;342:		it_ent = G_Spawn();
ADDRLP4 3196
ADDRGP4 G_Spawn
CALLP4
ASGNP4
ADDRLP4 1032
ADDRLP4 3196
INDIRP4
ASGNP4
line 343
;343:		VectorCopy( ent->r.currentOrigin, it_ent->s.origin );
ADDRLP4 1032
INDIRP4
CNSTI4 92
ADDP4
ADDRFP4 0
INDIRP4
CNSTI4 368
ADDP4
INDIRB
ASGNB 12
line 344
;344:		it_ent->classname = it->classname;
ADDRLP4 1032
INDIRP4
CNSTI4 416
ADDP4
ADDRLP4 2060
INDIRP4
INDIRP4
ASGNP4
line 345
;345:		G_SpawnItem (it_ent, it);
ADDRLP4 1032
INDIRP4
ARGP4
ADDRLP4 2060
INDIRP4
ARGP4
ADDRGP4 G_SpawnItem
CALLV
pop
line 346
;346:		FinishSpawningItem(it_ent );
ADDRLP4 1032
INDIRP4
ARGP4
ADDRGP4 FinishSpawningItem
CALLV
pop
line 347
;347:		memset( &trace, 0, sizeof( trace ) );
ADDRLP4 2064
ARGP4
CNSTI4 0
ARGI4
CNSTI4 1080
ARGI4
ADDRGP4 memset
CALLP4
pop
line 348
;348:		Touch_Item (it_ent, ent, &trace);
ADDRLP4 1032
INDIRP4
ARGP4
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 2064
ARGP4
ADDRGP4 Touch_Item
CALLV
pop
line 349
;349:		if (it_ent->inuse) {
ADDRLP4 1032
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
CNSTI4 0
EQI4 $229
line 350
;350:			G_FreeEntity( it_ent );
ADDRLP4 1032
INDIRP4
ARGP4
ADDRGP4 G_FreeEntity
CALLV
pop
line 351
;351:		}
LABELV $229
line 352
;352:	}
LABELV $225
line 353
;353:}
LABELV $160
endproc Cmd_Give_f 3200 12
export Cmd_God_f
proc Cmd_God_f 16 8
line 366
;354:
;355:
;356:/*
;357:==================
;358:Cmd_God_f
;359:
;360:Sets client to godmode
;361:
;362:argv(0) god
;363:==================
;364:*/
;365:void Cmd_God_f (gentity_t *ent)
;366:{
line 369
;367:	char	*msg;
;368:
;369:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 0
NEI4 $232
line 370
;370:		return;
ADDRGP4 $231
JUMPV
LABELV $232
line 373
;371:	}
;372:
;373:	ent->flags ^= FL_GODMODE;
ADDRLP4 8
ADDRFP4 0
INDIRP4
CNSTI4 472
ADDP4
ASGNP4
ADDRLP4 8
INDIRP4
ADDRLP4 8
INDIRP4
INDIRI4
CNSTI4 16
BXORI4
ASGNI4
line 374
;374:	if (!(ent->flags & FL_GODMODE) )
ADDRFP4 0
INDIRP4
CNSTI4 472
ADDP4
INDIRI4
CNSTI4 16
BANDI4
CNSTI4 0
NEI4 $234
line 375
;375:		msg = "godmode OFF\n";
ADDRLP4 0
ADDRGP4 $236
ASGNP4
ADDRGP4 $235
JUMPV
LABELV $234
line 377
;376:	else
;377:		msg = "godmode ON\n";
ADDRLP4 0
ADDRGP4 $237
ASGNP4
LABELV $235
line 379
;378:
;379:	trap_SendServerCommand( ent-g_entities, va("print \"%s\"", msg));
ADDRGP4 $238
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 12
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 12
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 380
;380:}
LABELV $231
endproc Cmd_God_f 16 8
export Cmd_Notarget_f
proc Cmd_Notarget_f 16 8
line 392
;381:
;382:
;383:/*
;384:==================
;385:Cmd_Notarget_f
;386:
;387:Sets client to notarget
;388:
;389:argv(0) notarget
;390:==================
;391:*/
;392:void Cmd_Notarget_f( gentity_t *ent ) {
line 395
;393:	char	*msg;
;394:
;395:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 0
NEI4 $240
line 396
;396:		return;
ADDRGP4 $239
JUMPV
LABELV $240
line 399
;397:	}
;398:
;399:	ent->flags ^= FL_NOTARGET;
ADDRLP4 8
ADDRFP4 0
INDIRP4
CNSTI4 472
ADDP4
ASGNP4
ADDRLP4 8
INDIRP4
ADDRLP4 8
INDIRP4
INDIRI4
CNSTI4 32
BXORI4
ASGNI4
line 400
;400:	if (!(ent->flags & FL_NOTARGET) )
ADDRFP4 0
INDIRP4
CNSTI4 472
ADDP4
INDIRI4
CNSTI4 32
BANDI4
CNSTI4 0
NEI4 $242
line 401
;401:		msg = "notarget OFF\n";
ADDRLP4 0
ADDRGP4 $244
ASGNP4
ADDRGP4 $243
JUMPV
LABELV $242
line 403
;402:	else
;403:		msg = "notarget ON\n";
ADDRLP4 0
ADDRGP4 $245
ASGNP4
LABELV $243
line 405
;404:
;405:	trap_SendServerCommand( ent-g_entities, va("print \"%s\"", msg));
ADDRGP4 $238
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 12
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 12
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 406
;406:}
LABELV $239
endproc Cmd_Notarget_f 16 8
export Cmd_Noclip_f
proc Cmd_Noclip_f 20 8
line 416
;407:
;408:
;409:/*
;410:==================
;411:Cmd_Noclip_f
;412:
;413:argv(0) noclip
;414:==================
;415:*/
;416:void Cmd_Noclip_f( gentity_t *ent ) {
line 419
;417:	char	*msg;
;418:
;419:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 0
NEI4 $247
line 420
;420:		return;
ADDRGP4 $246
JUMPV
LABELV $247
line 423
;421:	}
;422:
;423:	if ( ent->client->noclip ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1576
ADDP4
INDIRI4
CNSTI4 0
EQI4 $249
line 424
;424:		msg = "noclip OFF\n";
ADDRLP4 0
ADDRGP4 $251
ASGNP4
line 425
;425:	} else {
ADDRGP4 $250
JUMPV
LABELV $249
line 426
;426:		msg = "noclip ON\n";
ADDRLP4 0
ADDRGP4 $252
ASGNP4
line 427
;427:	}
LABELV $250
line 428
;428:	ent->client->noclip = !ent->client->noclip;
ADDRLP4 12
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1576
ADDP4
ASGNP4
ADDRLP4 12
INDIRP4
INDIRI4
CNSTI4 0
NEI4 $254
ADDRLP4 8
CNSTI4 1
ASGNI4
ADDRGP4 $255
JUMPV
LABELV $254
ADDRLP4 8
CNSTI4 0
ASGNI4
LABELV $255
ADDRLP4 12
INDIRP4
ADDRLP4 8
INDIRI4
ASGNI4
line 430
;429:
;430:	trap_SendServerCommand( ent-g_entities, va("print \"%s\"", msg));
ADDRGP4 $238
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 16
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 16
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 431
;431:}
LABELV $246
endproc Cmd_Noclip_f 20 8
export Cmd_LevelShot_f
proc Cmd_LevelShot_f 4 8
line 444
;432:
;433:
;434:/*
;435:==================
;436:Cmd_LevelShot_f
;437:
;438:This is just to help generate the level pictures
;439:for the menus.  It goes to the intermission immediately
;440:and sends over a command to the client to resize the view,
;441:hide the scoreboard, and take a special screenshot
;442:==================
;443:*/
;444:void Cmd_LevelShot_f( gentity_t *ent ) {
line 445
;445:	if ( !CheatsOk( ent ) ) {
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 0
NEI4 $257
line 446
;446:		return;
ADDRGP4 $256
JUMPV
LABELV $257
line 450
;447:	}
;448:
;449:	// doesn't work in single player
;450:	if ( g_gametype.integer != 0 ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 0
EQI4 $259
line 451
;451:		trap_SendServerCommand( ent-g_entities, 
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRGP4 $262
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 453
;452:			"print \"Must be in g_gametype 0 for levelshot\n\"" );
;453:		return;
ADDRGP4 $256
JUMPV
LABELV $259
line 456
;454:	}
;455:
;456:	BeginIntermission();
ADDRGP4 BeginIntermission
CALLV
pop
line 457
;457:	trap_SendServerCommand( ent-g_entities, "clientLevelShot" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRGP4 $263
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 458
;458:}
LABELV $256
endproc Cmd_LevelShot_f 4 8
export Cmd_TeamTask_f
proc Cmd_TeamTask_f 2068 12
line 471
;459:
;460:
;461:/*
;462:==================
;463:Cmd_LevelShot_f
;464:
;465:This is just to help generate the level pictures
;466:for the menus.  It goes to the intermission immediately
;467:and sends over a command to the client to resize the view,
;468:hide the scoreboard, and take a special screenshot
;469:==================
;470:*/
;471:void Cmd_TeamTask_f( gentity_t *ent ) {
line 475
;472:	char userinfo[MAX_INFO_STRING];
;473:	char		arg[MAX_TOKEN_CHARS];
;474:	int task;
;475:	int client = ent->client - level.clients;
ADDRLP4 1024
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
ADDRGP4 level
INDIRP4
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 1756
DIVI4
ASGNI4
line 477
;476:
;477:	if ( trap_Argc() != 2 ) {
ADDRLP4 2056
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 2056
INDIRI4
CNSTI4 2
EQI4 $265
line 478
;478:		return;
ADDRGP4 $264
JUMPV
LABELV $265
line 480
;479:	}
;480:	trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 1028
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 481
;481:	task = atoi( arg );
ADDRLP4 1028
ARGP4
ADDRLP4 2060
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 2052
ADDRLP4 2060
INDIRI4
ASGNI4
line 483
;482:
;483:	trap_GetUserinfo(client, userinfo, sizeof(userinfo));
ADDRLP4 1024
INDIRI4
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_GetUserinfo
CALLV
pop
line 484
;484:	Info_SetValueForKey(userinfo, "teamtask", va("%d", task));
ADDRGP4 $268
ARGP4
ADDRLP4 2052
INDIRI4
ARGI4
ADDRLP4 2064
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 0
ARGP4
ADDRGP4 $267
ARGP4
ADDRLP4 2064
INDIRP4
ARGP4
ADDRGP4 Info_SetValueForKey
CALLV
pop
line 485
;485:	trap_SetUserinfo(client, userinfo);
ADDRLP4 1024
INDIRI4
ARGI4
ADDRLP4 0
ARGP4
ADDRGP4 trap_SetUserinfo
CALLV
pop
line 486
;486:	ClientUserinfoChanged(client);
ADDRLP4 1024
INDIRI4
ARGI4
ADDRGP4 ClientUserinfoChanged
CALLV
pop
line 487
;487:}
LABELV $264
endproc Cmd_TeamTask_f 2068 12
export Cmd_Kill_f
proc Cmd_Kill_f 16 20
line 496
;488:
;489:
;490:
;491:/*
;492:=================
;493:Cmd_Kill_f
;494:=================
;495:*/
;496:void Cmd_Kill_f( gentity_t *ent ) {
line 497
;497:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 3
NEI4 $270
line 498
;498:		return;
ADDRGP4 $269
JUMPV
LABELV $270
line 500
;499:	}
;500:	if (ent->health <= 0) {
ADDRFP4 0
INDIRP4
CNSTI4 676
ADDP4
INDIRI4
CNSTI4 0
GTI4 $272
line 501
;501:		return;
ADDRGP4 $269
JUMPV
LABELV $272
line 504
;502:	}
;503:
;504:	if (g_gametype.integer == GT_TOURNAMENT && level.numPlayingClients > 1 && !level.warmupTime)
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $274
ADDRGP4 level+80
INDIRI4
CNSTI4 1
LEI4 $274
ADDRGP4 level+16
INDIRI4
CNSTI4 0
NEI4 $274
line 505
;505:	{
line 506
;506:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "ATTEMPTDUELKILL")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $279
ARGP4
ADDRLP4 0
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 507
;507:		return;
ADDRGP4 $269
JUMPV
LABELV $274
line 510
;508:	}
;509:
;510:	ent->flags &= ~FL_GODMODE;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 472
ADDP4
ASGNP4
ADDRLP4 0
INDIRP4
ADDRLP4 0
INDIRP4
INDIRI4
CNSTI4 -17
BANDI4
ASGNI4
line 511
;511:	ent->client->ps.stats[STAT_HEALTH] = ent->health = -999;
ADDRLP4 4
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 8
CNSTI4 -999
ASGNI4
ADDRLP4 4
INDIRP4
CNSTI4 676
ADDP4
ADDRLP4 8
INDIRI4
ASGNI4
ADDRLP4 4
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 216
ADDP4
ADDRLP4 8
INDIRI4
ASGNI4
line 512
;512:	player_die (ent, ent, ent, 100000, MOD_SUICIDE);
ADDRLP4 12
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 12
INDIRP4
ARGP4
ADDRLP4 12
INDIRP4
ARGP4
ADDRLP4 12
INDIRP4
ARGP4
CNSTI4 100000
ARGI4
CNSTI4 35
ARGI4
ADDRGP4 player_die
CALLV
pop
line 513
;513:}
LABELV $269
endproc Cmd_Kill_f 16 20
export Cmd_Info_Boot
proc Cmd_Info_Boot 24 24
line 516
;514:
;515:void Cmd_Info_Boot(gentity_t *ent)
;516:{
line 517
;517:	char *s1 = "\n\n               ^1********* ^7Saber Shenanigans.^1********* \n\n";
ADDRLP4 0
ADDRGP4 $281
ASGNP4
line 518
;518:	char *s2 = "\n^7In this mod you must manually parry attacks. It can be bound like this:\n^3bind mouse2 +button14\n\n";
ADDRLP4 4
ADDRGP4 $282
ASGNP4
line 519
;519:	char *s3 = "\n^7Use movement directions to parry up, sides and lower sides (a total of 5 directions).\n";
ADDRLP4 8
ADDRGP4 $283
ASGNP4
line 520
;520:	char *s4 = "\n^7For the full experience, ^3DOWNLOAD THE CLIENTSIDE! ^7If you haven't already, type:\n^3sv_allowDownload 1^7. Then ^3/reconnect^7.\n";
ADDRLP4 12
ADDRGP4 $284
ASGNP4
line 521
;521:	char *s5 = "\n\n^7To view all commands, type ^3/commands^7. To view all features, type ^3/features^7.\n";
ADDRLP4 16
ADDRGP4 $285
ASGNP4
line 523
;522:
;523:	trap_SendServerCommand(ent - g_entities, va("print \"%s%s%s%s%s\"", s1, s2, s3, s4, s5));
ADDRGP4 $286
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 8
INDIRP4
ARGP4
ADDRLP4 12
INDIRP4
ARGP4
ADDRLP4 16
INDIRP4
ARGP4
ADDRLP4 20
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 20
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 524
;524:}
LABELV $280
endproc Cmd_Info_Boot 24 24
export Cmd_ToggleMouseMovementBlock_Boot
proc Cmd_ToggleMouseMovementBlock_Boot 12 0
line 527
;525:
;526:Cmd_ToggleMouseMovementBlock_Boot(gentity_t *ent)
;527:{
line 528
;528:	bootSession_t *boot = &bootSession[ent - g_entities];
ADDRLP4 0
CNSTI4 56
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
MULI4
ADDRGP4 bootSession
ADDP4
ASGNP4
line 530
;529:
;530:	boot->usesMouseMovementBlock = !boot->usesMouseMovementBlock;
ADDRLP4 8
ADDRLP4 0
INDIRP4
CNSTI4 16
ADDP4
ASGNP4
ADDRLP4 8
INDIRP4
INDIRI4
CNSTI4 0
NEI4 $289
ADDRLP4 4
CNSTI4 1
ASGNI4
ADDRGP4 $290
JUMPV
LABELV $289
ADDRLP4 4
CNSTI4 0
ASGNI4
LABELV $290
ADDRLP4 8
INDIRP4
ADDRLP4 4
INDIRI4
ASGNI4
line 531
;531:}
CNSTI4 0
RETI4
LABELV $287
endproc Cmd_ToggleMouseMovementBlock_Boot 12 0
export G_GetDuelWinner
proc G_GetDuelWinner 16 0
line 534
;532:
;533:gentity_t *G_GetDuelWinner(gclient_t *client)
;534:{
line 538
;535:	gclient_t *wCl;
;536:	int i;
;537:
;538:	for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRGP4 $295
JUMPV
LABELV $292
line 539
;539:		wCl = &level.clients[i];
ADDRLP4 0
CNSTI4 1756
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
ASGNP4
line 541
;540:		
;541:		if (wCl && wCl != client && /*wCl->ps.clientNum != client->ps.clientNum &&*/
ADDRLP4 12
ADDRLP4 0
INDIRP4
CVPU4 4
ASGNU4
ADDRLP4 12
INDIRU4
CNSTU4 0
EQU4 $297
ADDRLP4 12
INDIRU4
ADDRFP4 0
INDIRP4
CVPU4 4
EQU4 $297
ADDRLP4 0
INDIRP4
CNSTI4 1368
ADDP4
INDIRI4
CNSTI4 2
NEI4 $297
ADDRLP4 0
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 3
EQI4 $297
line 543
;542:			wCl->pers.connected == CON_CONNECTED && wCl->sess.sessionTeam != TEAM_SPECTATOR)
;543:		{
line 544
;544:			return &g_entities[wCl->ps.clientNum];
CNSTI4 828
ADDRLP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
RETP4
ADDRGP4 $291
JUMPV
LABELV $297
line 546
;545:		}
;546:	}
LABELV $293
line 538
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $295
ADDRLP4 4
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $292
line 548
;547:
;548:	return NULL;
CNSTP4 0
RETP4
LABELV $291
endproc G_GetDuelWinner 16 0
export BroadcastTeamChange
proc BroadcastTeamChange 12 16
line 559
;549:}
;550:
;551:/*
;552:=================
;553:BroadCastTeamChange
;554:
;555:Let everyone know about a team change
;556:=================
;557:*/
;558:void BroadcastTeamChange( gclient_t *client, int oldTeam )
;559:{
line 560
;560:	client->ps.fd.forceDoInit = 1; //every time we change teams make sure our force powers are set right
ADDRFP4 0
INDIRP4
CNSTI4 1172
ADDP4
CNSTI4 1
ASGNI4
line 562
;561:
;562:	if ( client->sess.sessionTeam == TEAM_RED ) {
ADDRFP4 0
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 1
NEI4 $300
line 563
;563:		trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " %s\n\"",
ADDRGP4 $116
ARGP4
ADDRGP4 $303
ARGP4
ADDRLP4 0
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $302
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 565
;564:			client->pers.netname, G_GetStripEdString("SVINGAME", "JOINEDTHEREDTEAM")) );
;565:	} else if ( client->sess.sessionTeam == TEAM_BLUE ) {
ADDRGP4 $301
JUMPV
LABELV $300
ADDRFP4 0
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 2
NEI4 $304
line 566
;566:		trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " %s\n\"",
ADDRGP4 $116
ARGP4
ADDRGP4 $306
ARGP4
ADDRLP4 0
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $302
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 568
;567:		client->pers.netname, G_GetStripEdString("SVINGAME", "JOINEDTHEBLUETEAM")));
;568:	} else if ( client->sess.sessionTeam == TEAM_SPECTATOR && oldTeam != TEAM_SPECTATOR ) {
ADDRGP4 $305
JUMPV
LABELV $304
ADDRLP4 0
CNSTI4 3
ASGNI4
ADDRFP4 0
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
ADDRLP4 0
INDIRI4
NEI4 $307
ADDRFP4 4
INDIRI4
ADDRLP4 0
INDIRI4
EQI4 $307
line 569
;569:		trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " %s\n\"",
ADDRGP4 $116
ARGP4
ADDRGP4 $309
ARGP4
ADDRLP4 4
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $302
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 8
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 571
;570:		client->pers.netname, G_GetStripEdString("SVINGAME", "JOINEDTHESPECTATORS")));
;571:	} else if ( client->sess.sessionTeam == TEAM_FREE ) {
ADDRGP4 $308
JUMPV
LABELV $307
ADDRFP4 0
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 0
NEI4 $310
line 572
;572:		if (g_gametype.integer == GT_TOURNAMENT)
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $312
line 573
;573:		{
line 589
;574:			/*
;575:			gentity_t *currentWinner = G_GetDuelWinner(client);
;576:
;577:			if (currentWinner && currentWinner->client)
;578:			{
;579:				trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " %s %s\n\"",
;580:				currentWinner->client->pers.netname, G_GetStripEdString("SVINGAME", "VERSUS"), client->pers.netname));
;581:			}
;582:			else
;583:			{
;584:				trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " %s\n\"",
;585:				client->pers.netname, G_GetStripEdString("SVINGAME", "JOINEDTHEBATTLE")));
;586:			}
;587:			*/
;588:			//NOTE: Just doing a vs. once it counts two players up
;589:		}
ADDRGP4 $313
JUMPV
LABELV $312
line 591
;590:		else
;591:		{
line 592
;592:			trap_SendServerCommand( -1, va("cp \"%s" S_COLOR_WHITE " %s\n\"",
ADDRGP4 $116
ARGP4
ADDRGP4 $315
ARGP4
ADDRLP4 4
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $302
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 8
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 594
;593:			client->pers.netname, G_GetStripEdString("SVINGAME", "JOINEDTHEBATTLE")));
;594:		}
LABELV $313
line 595
;595:	}
LABELV $310
LABELV $308
LABELV $305
LABELV $301
line 597
;596:
;597:	G_LogPrintf ( "setteam:  %i %s %s\n",
ADDRFP4 4
INDIRI4
ARGI4
ADDRLP4 4
ADDRGP4 TeamName
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
ARGI4
ADDRLP4 8
ADDRGP4 TeamName
CALLP4
ASGNP4
ADDRGP4 $316
ARGP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 level
INDIRP4
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 1756
DIVI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 601
;598:				  client - &level.clients[0],
;599:				  TeamName ( oldTeam ),
;600:				  TeamName ( client->sess.sessionTeam ) );
;601:}
LABELV $299
endproc BroadcastTeamChange 12 16
export SetTeam
proc SetTeam 104 20
line 608
;602:
;603:/*
;604:=================
;605:SetTeam
;606:=================
;607:*/
;608:void SetTeam( gentity_t *ent, char *s ) {
line 619
;609:	int					team, oldTeam;
;610:	gclient_t			*client;
;611:	int					clientNum;
;612:	spectatorState_t	specState;
;613:	int					specClient;
;614:	int					teamLeader;
;615:
;616:	//
;617:	// see what change is requested
;618:	//
;619:	client = ent->client;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
line 621
;620:
;621:	clientNum = client - level.clients;
ADDRLP4 12
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRGP4 level
INDIRP4
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 1756
DIVI4
ASGNI4
line 622
;622:	specClient = 0;
ADDRLP4 20
CNSTI4 0
ASGNI4
line 623
;623:	specState = SPECTATOR_NOT;
ADDRLP4 16
CNSTI4 0
ASGNI4
line 624
;624:	if ( !Q_stricmp( s, "scoreboard" ) || !Q_stricmp( s, "score" )  ) {
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $320
ARGP4
ADDRLP4 28
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 28
INDIRI4
CNSTI4 0
EQI4 $322
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $321
ARGP4
ADDRLP4 32
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 32
INDIRI4
CNSTI4 0
NEI4 $318
LABELV $322
line 625
;625:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 626
;626:		specState = SPECTATOR_SCOREBOARD;
ADDRLP4 16
CNSTI4 3
ASGNI4
line 627
;627:	} else if ( !Q_stricmp( s, "follow1" ) ) {
ADDRGP4 $319
JUMPV
LABELV $318
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $325
ARGP4
ADDRLP4 36
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 36
INDIRI4
CNSTI4 0
NEI4 $323
line 628
;628:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 629
;629:		specState = SPECTATOR_FOLLOW;
ADDRLP4 16
CNSTI4 2
ASGNI4
line 630
;630:		specClient = -1;
ADDRLP4 20
CNSTI4 -1
ASGNI4
line 631
;631:	} else if ( !Q_stricmp( s, "follow2" ) ) {
ADDRGP4 $324
JUMPV
LABELV $323
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $328
ARGP4
ADDRLP4 40
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 40
INDIRI4
CNSTI4 0
NEI4 $326
line 632
;632:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 633
;633:		specState = SPECTATOR_FOLLOW;
ADDRLP4 16
CNSTI4 2
ASGNI4
line 634
;634:		specClient = -2;
ADDRLP4 20
CNSTI4 -2
ASGNI4
line 635
;635:	} else if ( !Q_stricmp( s, "spectator" ) || !Q_stricmp( s, "s" ) ) {
ADDRGP4 $327
JUMPV
LABELV $326
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $331
ARGP4
ADDRLP4 44
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 44
INDIRI4
CNSTI4 0
EQI4 $333
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $332
ARGP4
ADDRLP4 48
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 48
INDIRI4
CNSTI4 0
NEI4 $329
LABELV $333
line 636
;636:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 637
;637:		specState = SPECTATOR_FREE;
ADDRLP4 16
CNSTI4 1
ASGNI4
line 638
;638:	} else if ( g_gametype.integer >= GT_TEAM ) {
ADDRGP4 $330
JUMPV
LABELV $329
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
LTI4 $334
line 640
;639:		// if running a team game, assign player to one of the teams
;640:		specState = SPECTATOR_NOT;
ADDRLP4 16
CNSTI4 0
ASGNI4
line 641
;641:		if ( !Q_stricmp( s, "red" ) || !Q_stricmp( s, "r" ) ) {
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $339
ARGP4
ADDRLP4 52
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 52
INDIRI4
CNSTI4 0
EQI4 $341
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $340
ARGP4
ADDRLP4 56
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 56
INDIRI4
CNSTI4 0
NEI4 $337
LABELV $341
line 642
;642:			team = TEAM_RED;
ADDRLP4 4
CNSTI4 1
ASGNI4
line 643
;643:		} else if ( !Q_stricmp( s, "blue" ) || !Q_stricmp( s, "b" ) ) {
ADDRGP4 $338
JUMPV
LABELV $337
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $344
ARGP4
ADDRLP4 60
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 60
INDIRI4
CNSTI4 0
EQI4 $346
ADDRFP4 4
INDIRP4
ARGP4
ADDRGP4 $345
ARGP4
ADDRLP4 64
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 64
INDIRI4
CNSTI4 0
NEI4 $342
LABELV $346
line 644
;644:			team = TEAM_BLUE;
ADDRLP4 4
CNSTI4 2
ASGNI4
line 645
;645:		} else {
ADDRGP4 $343
JUMPV
LABELV $342
line 663
;646:			// pick the team with the least number of players
;647:			//For now, don't do this. The legalize function will set powers properly now.
;648:			/*
;649:			if (g_forceBasedTeams.integer)
;650:			{
;651:				if (ent->client->ps.fd.forceSide == FORCE_LIGHTSIDE)
;652:				{
;653:					team = TEAM_BLUE;
;654:				}
;655:				else
;656:				{
;657:					team = TEAM_RED;
;658:				}
;659:			}
;660:			else
;661:			{
;662:			*/
;663:				team = PickTeam( clientNum );
ADDRLP4 12
INDIRI4
ARGI4
ADDRLP4 68
ADDRGP4 PickTeam
CALLI4
ASGNI4
ADDRLP4 4
ADDRLP4 68
INDIRI4
ASGNI4
line 665
;664:			//}
;665:		}
LABELV $343
LABELV $338
line 667
;666:
;667:		if ( g_teamForceBalance.integer  ) {
ADDRGP4 g_teamForceBalance+12
INDIRI4
CNSTI4 0
EQI4 $335
line 670
;668:			int		counts[TEAM_NUM_TEAMS];
;669:
;670:			counts[TEAM_BLUE] = TeamCount( ent->client->ps.clientNum, TEAM_BLUE );
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
CNSTI4 2
ARGI4
ADDRLP4 84
ADDRGP4 TeamCount
CALLI4
ASGNI4
ADDRLP4 68+8
ADDRLP4 84
INDIRI4
ASGNI4
line 671
;671:			counts[TEAM_RED] = TeamCount( ent->client->ps.clientNum, TEAM_RED );
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRLP4 88
ADDRGP4 TeamCount
CALLI4
ASGNI4
ADDRLP4 68+4
ADDRLP4 88
INDIRI4
ASGNI4
line 674
;672:
;673:			// We allow a spread of two
;674:			if ( team == TEAM_RED && counts[TEAM_RED] - counts[TEAM_BLUE] > 1 ) {
ADDRLP4 92
CNSTI4 1
ASGNI4
ADDRLP4 4
INDIRI4
ADDRLP4 92
INDIRI4
NEI4 $352
ADDRLP4 68+4
INDIRI4
ADDRLP4 68+8
INDIRI4
SUBI4
ADDRLP4 92
INDIRI4
LEI4 $352
line 684
;675:				//For now, don't do this. The legalize function will set powers properly now.
;676:				/*
;677:				if (g_forceBasedTeams.integer && ent->client->ps.fd.forceSide == FORCE_DARKSIDE)
;678:				{
;679:					trap_SendServerCommand( ent->client->ps.clientNum, 
;680:						va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "TOOMANYRED_SWITCH")) );
;681:				}
;682:				else
;683:				*/
;684:				{
line 685
;685:					trap_SendServerCommand( ent->client->ps.clientNum, 
ADDRGP4 $116
ARGP4
ADDRGP4 $356
ARGP4
ADDRLP4 96
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 96
INDIRP4
ARGP4
ADDRLP4 100
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
ADDRLP4 100
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 687
;686:						va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "TOOMANYRED")) );
;687:				}
line 688
;688:				return; // ignore the request
ADDRGP4 $317
JUMPV
LABELV $352
line 690
;689:			}
;690:			if ( team == TEAM_BLUE && counts[TEAM_BLUE] - counts[TEAM_RED] > 1 ) {
ADDRLP4 4
INDIRI4
CNSTI4 2
NEI4 $335
ADDRLP4 68+8
INDIRI4
ADDRLP4 68+4
INDIRI4
SUBI4
CNSTI4 1
LEI4 $335
line 700
;691:				//For now, don't do this. The legalize function will set powers properly now.
;692:				/*
;693:				if (g_forceBasedTeams.integer && ent->client->ps.fd.forceSide == FORCE_LIGHTSIDE)
;694:				{
;695:					trap_SendServerCommand( ent->client->ps.clientNum, 
;696:						va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "TOOMANYBLUE_SWITCH")) );
;697:				}
;698:				else
;699:				*/
;700:				{
line 701
;701:					trap_SendServerCommand( ent->client->ps.clientNum, 
ADDRGP4 $116
ARGP4
ADDRGP4 $361
ARGP4
ADDRLP4 96
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 96
INDIRP4
ARGP4
ADDRLP4 100
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
ADDRLP4 100
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 703
;702:						va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "TOOMANYBLUE")) );
;703:				}
line 704
;704:				return; // ignore the request
ADDRGP4 $317
JUMPV
line 708
;705:			}
;706:
;707:			// It's ok, the team we are switching to has less or same number of players
;708:		}
line 727
;709:
;710:		//For now, don't do this. The legalize function will set powers properly now.
;711:		/*
;712:		if (g_forceBasedTeams.integer)
;713:		{
;714:			if (team == TEAM_BLUE && ent->client->ps.fd.forceSide != FORCE_LIGHTSIDE)
;715:			{
;716:				trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "MUSTBELIGHT")) );
;717:				return;
;718:			}
;719:			if (team == TEAM_RED && ent->client->ps.fd.forceSide != FORCE_DARKSIDE)
;720:			{
;721:				trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "MUSTBEDARK")) );
;722:				return;
;723:			}
;724:		}
;725:		*/
;726:
;727:	} else {
LABELV $334
line 729
;728:		// force them to spectators if there aren't any spots free
;729:		team = TEAM_FREE;
ADDRLP4 4
CNSTI4 0
ASGNI4
line 730
;730:	}
LABELV $335
LABELV $330
LABELV $327
LABELV $324
LABELV $319
line 733
;731:
;732:	// override decision if limiting the players
;733:	if ( (g_gametype.integer == GT_TOURNAMENT)
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $362
ADDRGP4 level+76
INDIRI4
CNSTI4 2
LTI4 $362
line 734
;734:		&& level.numNonSpectatorClients >= 2 ) {
line 735
;735:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 736
;736:	} else if ( g_maxGameClients.integer > 0 && 
ADDRGP4 $363
JUMPV
LABELV $362
ADDRGP4 g_maxGameClients+12
INDIRI4
CNSTI4 0
LEI4 $366
ADDRGP4 level+76
INDIRI4
ADDRGP4 g_maxGameClients+12
INDIRI4
LTI4 $366
line 737
;737:		level.numNonSpectatorClients >= g_maxGameClients.integer ) {
line 738
;738:		team = TEAM_SPECTATOR;
ADDRLP4 4
CNSTI4 3
ASGNI4
line 739
;739:	}
LABELV $366
LABELV $363
line 744
;740:
;741:	//
;742:	// decide if we will allow the change
;743:	//
;744:	oldTeam = client->sess.sessionTeam;
ADDRLP4 8
ADDRLP4 0
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
ASGNI4
line 745
;745:	if ( team == oldTeam && team != TEAM_SPECTATOR ) {
ADDRLP4 4
INDIRI4
ADDRLP4 8
INDIRI4
NEI4 $371
ADDRLP4 4
INDIRI4
CNSTI4 3
EQI4 $371
line 746
;746:		return;
ADDRGP4 $317
JUMPV
LABELV $371
line 754
;747:	}
;748:
;749:	//
;750:	// execute the team change
;751:	//
;752:
;753:	// if the player was dead leave the body
;754:	if ( client->ps.stats[STAT_HEALTH] <= 0 ) {
ADDRLP4 0
INDIRP4
CNSTI4 216
ADDP4
INDIRI4
CNSTI4 0
GTI4 $373
line 755
;755:		CopyToBodyQue(ent);
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 CopyToBodyQue
CALLV
pop
line 756
;756:	}
LABELV $373
line 759
;757:
;758:	// he starts at 'base'
;759:	client->pers.teamState.state = TEAM_BEGIN;
ADDRLP4 0
INDIRP4
CNSTI4 1460
ADDP4
CNSTI4 0
ASGNI4
line 760
;760:	if ( oldTeam != TEAM_SPECTATOR ) {
ADDRLP4 8
INDIRI4
CNSTI4 3
EQI4 $375
line 762
;761:		// Kill him (makes sure he loses flags, etc)
;762:		ent->flags &= ~FL_GODMODE;
ADDRLP4 56
ADDRFP4 0
INDIRP4
CNSTI4 472
ADDP4
ASGNP4
ADDRLP4 56
INDIRP4
ADDRLP4 56
INDIRP4
INDIRI4
CNSTI4 -17
BANDI4
ASGNI4
line 763
;763:		ent->client->ps.stats[STAT_HEALTH] = ent->health = 0;
ADDRLP4 60
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 64
CNSTI4 0
ASGNI4
ADDRLP4 60
INDIRP4
CNSTI4 676
ADDP4
ADDRLP4 64
INDIRI4
ASGNI4
ADDRLP4 60
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 216
ADDP4
ADDRLP4 64
INDIRI4
ASGNI4
line 764
;764:		player_die (ent, ent, ent, 100000, MOD_SUICIDE);
ADDRLP4 68
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 68
INDIRP4
ARGP4
ADDRLP4 68
INDIRP4
ARGP4
ADDRLP4 68
INDIRP4
ARGP4
CNSTI4 100000
ARGI4
CNSTI4 35
ARGI4
ADDRGP4 player_die
CALLV
pop
line 766
;765:
;766:	}
LABELV $375
line 768
;767:	// they go to the end of the line for tournements
;768:	if ( team == TEAM_SPECTATOR ) {
ADDRLP4 4
INDIRI4
CNSTI4 3
NEI4 $377
line 769
;769:		client->sess.spectatorTime = level.time;
ADDRLP4 0
INDIRP4
CNSTI4 1524
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 770
;770:	}
LABELV $377
line 772
;771:
;772:	client->sess.sessionTeam = team;
ADDRLP4 0
INDIRP4
CNSTI4 1520
ADDP4
ADDRLP4 4
INDIRI4
ASGNI4
line 773
;773:	client->sess.spectatorState = specState;
ADDRLP4 0
INDIRP4
CNSTI4 1528
ADDP4
ADDRLP4 16
INDIRI4
ASGNI4
line 774
;774:	client->sess.spectatorClient = specClient;
ADDRLP4 0
INDIRP4
CNSTI4 1532
ADDP4
ADDRLP4 20
INDIRI4
ASGNI4
line 776
;775:
;776:	client->sess.teamLeader = qfalse;
ADDRLP4 0
INDIRP4
CNSTI4 1560
ADDP4
CNSTI4 0
ASGNI4
line 777
;777:	if ( team == TEAM_RED || team == TEAM_BLUE ) {
ADDRLP4 4
INDIRI4
CNSTI4 1
EQI4 $382
ADDRLP4 4
INDIRI4
CNSTI4 2
NEI4 $380
LABELV $382
line 778
;778:		teamLeader = TeamLeader( team );
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 60
ADDRGP4 TeamLeader
CALLI4
ASGNI4
ADDRLP4 24
ADDRLP4 60
INDIRI4
ASGNI4
line 780
;779:		// if there is no team leader or the team leader is a bot and this client is not a bot
;780:		if ( teamLeader == -1 || ( !(g_entities[clientNum].r.svFlags & SVF_BOT) && (g_entities[teamLeader].r.svFlags & SVF_BOT) ) ) {
ADDRLP4 64
ADDRLP4 24
INDIRI4
ASGNI4
ADDRLP4 64
INDIRI4
CNSTI4 -1
EQI4 $389
ADDRLP4 68
CNSTI4 828
ASGNI4
ADDRLP4 72
CNSTI4 8
ASGNI4
ADDRLP4 76
CNSTI4 0
ASGNI4
ADDRLP4 68
INDIRI4
ADDRLP4 12
INDIRI4
MULI4
ADDRGP4 g_entities+296+8
ADDP4
INDIRI4
ADDRLP4 72
INDIRI4
BANDI4
ADDRLP4 76
INDIRI4
NEI4 $383
ADDRLP4 68
INDIRI4
ADDRLP4 64
INDIRI4
MULI4
ADDRGP4 g_entities+296+8
ADDP4
INDIRI4
ADDRLP4 72
INDIRI4
BANDI4
ADDRLP4 76
INDIRI4
EQI4 $383
LABELV $389
line 781
;781:			SetLeader( team, clientNum );
ADDRLP4 4
INDIRI4
ARGI4
ADDRLP4 12
INDIRI4
ARGI4
ADDRGP4 SetLeader
CALLV
pop
line 782
;782:		}
LABELV $383
line 783
;783:	}
LABELV $380
line 785
;784:	// make sure there is a team leader on the team the player came from
;785:	if ( oldTeam == TEAM_RED || oldTeam == TEAM_BLUE ) {
ADDRLP4 8
INDIRI4
CNSTI4 1
EQI4 $392
ADDRLP4 8
INDIRI4
CNSTI4 2
NEI4 $390
LABELV $392
line 786
;786:		CheckTeamLeader( oldTeam );
ADDRLP4 8
INDIRI4
ARGI4
ADDRGP4 CheckTeamLeader
CALLV
pop
line 787
;787:	}
LABELV $390
line 789
;788:
;789:	BroadcastTeamChange( client, oldTeam );
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 8
INDIRI4
ARGI4
ADDRGP4 BroadcastTeamChange
CALLV
pop
line 792
;790:
;791:	// get and distribute relevent paramters
;792:	ClientUserinfoChanged( clientNum );
ADDRLP4 12
INDIRI4
ARGI4
ADDRGP4 ClientUserinfoChanged
CALLV
pop
line 794
;793:
;794:	ClientBegin( clientNum, qfalse );
ADDRLP4 12
INDIRI4
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 ClientBegin
CALLV
pop
line 795
;795:}
LABELV $317
endproc SetTeam 104 20
export StopFollowing
proc StopFollowing 12 0
line 805
;796:
;797:/*
;798:=================
;799:StopFollowing
;800:
;801:If the client being followed leaves the game, or you just want to drop
;802:to free floating spectator mode
;803:=================
;804:*/
;805:void StopFollowing( gentity_t *ent ) {
line 806
;806:	ent->client->ps.persistant[ PERS_TEAM ] = TEAM_SPECTATOR;	
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 292
ADDP4
CNSTI4 3
ASGNI4
line 807
;807:	ent->client->sess.sessionTeam = TEAM_SPECTATOR;	
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
CNSTI4 3
ASGNI4
line 808
;808:	ent->client->sess.spectatorState = SPECTATOR_FREE;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1528
ADDP4
CNSTI4 1
ASGNI4
line 809
;809:	ent->client->ps.pm_flags &= ~PMF_FOLLOW;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 12
ADDP4
ASGNP4
ADDRLP4 0
INDIRP4
ADDRLP4 0
INDIRP4
INDIRI4
CNSTI4 -4097
BANDI4
ASGNI4
line 810
;810:	ent->r.svFlags &= ~SVF_BOT;
ADDRLP4 4
ADDRFP4 0
INDIRP4
CNSTI4 304
ADDP4
ASGNP4
ADDRLP4 4
INDIRP4
ADDRLP4 4
INDIRP4
INDIRI4
CNSTI4 -9
BANDI4
ASGNI4
line 811
;811:	ent->client->ps.clientNum = ent - g_entities;
ADDRLP4 8
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 8
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 144
ADDP4
ADDRLP4 8
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ASGNI4
line 812
;812:	ent->client->ps.weapon = WP_NONE;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 148
ADDP4
CNSTI4 0
ASGNI4
line 813
;813:}
LABELV $393
endproc StopFollowing 12 0
export Cmd_Team_f
proc Cmd_Team_f 1068 12
line 820
;814:
;815:/*
;816:=================
;817:Cmd_Team_f
;818:=================
;819:*/
;820:void Cmd_Team_f( gentity_t *ent ) {
line 824
;821:	int			oldTeam;
;822:	char		s[MAX_TOKEN_CHARS];
;823:
;824:	if ( trap_Argc() != 2 ) {
ADDRLP4 1028
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1028
INDIRI4
CNSTI4 2
EQI4 $395
line 825
;825:		oldTeam = ent->client->sess.sessionTeam;
ADDRLP4 1024
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
ASGNI4
line 826
;826:		switch ( oldTeam ) {
ADDRLP4 1032
ADDRLP4 1024
INDIRI4
ASGNI4
ADDRLP4 1032
INDIRI4
CNSTI4 0
LTI4 $394
ADDRLP4 1032
INDIRI4
CNSTI4 3
GTI4 $394
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 $410
ADDP4
INDIRP4
JUMPV
lit
align 4
LABELV $410
address $404
address $401
address $399
address $407
code
LABELV $399
line 828
;827:		case TEAM_BLUE:
;828:			trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "PRINTBLUETEAM")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $400
ARGP4
ADDRLP4 1036
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1036
INDIRP4
ARGP4
ADDRLP4 1040
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1040
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 829
;829:			break;
ADDRGP4 $394
JUMPV
LABELV $401
line 831
;830:		case TEAM_RED:
;831:			trap_SendServerCommand( ent-g_entities, va("print \"Red team\n\"", G_GetStripEdString("SVINGAME", "PRINTREDTEAM")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $403
ARGP4
ADDRLP4 1044
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $402
ARGP4
ADDRLP4 1044
INDIRP4
ARGP4
ADDRLP4 1048
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1048
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 832
;832:			break;
ADDRGP4 $394
JUMPV
LABELV $404
line 834
;833:		case TEAM_FREE:
;834:			trap_SendServerCommand( ent-g_entities, va("print \"Free team\n\"", G_GetStripEdString("SVINGAME", "PRINTFREETEAM")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $406
ARGP4
ADDRLP4 1052
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $405
ARGP4
ADDRLP4 1052
INDIRP4
ARGP4
ADDRLP4 1056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 835
;835:			break;
ADDRGP4 $394
JUMPV
LABELV $407
line 837
;836:		case TEAM_SPECTATOR:
;837:			trap_SendServerCommand( ent-g_entities, va("print \"Spectator team\n\"", G_GetStripEdString("SVINGAME", "PRINTSPECTEAM")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $409
ARGP4
ADDRLP4 1060
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $408
ARGP4
ADDRLP4 1060
INDIRP4
ARGP4
ADDRLP4 1064
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1064
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 838
;838:			break;
line 840
;839:		}
;840:		return;
ADDRGP4 $394
JUMPV
LABELV $395
line 843
;841:	}
;842:
;843:	if ( ent->client->switchTeamTime > level.time ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1704
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LEI4 $411
line 844
;844:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOSWITCH")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $414
ARGP4
ADDRLP4 1032
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1032
INDIRP4
ARGP4
ADDRLP4 1036
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1036
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 845
;845:		return;
ADDRGP4 $394
JUMPV
LABELV $411
line 849
;846:	}
;847:
;848:	// if they are playing a tournement game, count as a loss
;849:	if ( (g_gametype.integer == GT_TOURNAMENT )
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $415
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 0
NEI4 $415
line 850
;850:		&& ent->client->sess.sessionTeam == TEAM_FREE ) {
line 851
;851:		ent->client->sess.losses++;
ADDRLP4 1032
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1540
ADDP4
ASGNP4
ADDRLP4 1032
INDIRP4
ADDRLP4 1032
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 852
;852:	}
LABELV $415
line 854
;853:
;854:	trap_Argv( 1, s, sizeof( s ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 856
;855:
;856:	SetTeam( ent, s );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
ARGP4
ADDRGP4 SetTeam
CALLV
pop
line 858
;857:
;858:	ent->client->switchTeamTime = level.time + 5000;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1704
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 5000
ADDI4
ASGNI4
line 859
;859:}
LABELV $394
endproc Cmd_Team_f 1068 12
export Cmd_ForceChanged_f
proc Cmd_ForceChanged_f 2064 12
line 867
;860:
;861:/*
;862:=================
;863:Cmd_Team_f
;864:=================
;865:*/
;866:void Cmd_ForceChanged_f( gentity_t *ent )
;867:{
line 871
;868:	char fpChStr[1024];
;869:	const char *buf;
;870://	Cmd_Kill_f(ent);
;871:	if (ent->client->sess.sessionTeam == TEAM_SPECTATOR)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 3
NEI4 $420
line 872
;872:	{ //if it's a spec, just make the changes now
line 875
;873:		//trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "FORCEAPPLIED")) );
;874:		//No longer print it, as the UI calls this a lot.
;875:		WP_InitForcePowers( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 WP_InitForcePowers
CALLV
pop
line 876
;876:		goto argCheck;
ADDRGP4 $422
JUMPV
LABELV $420
line 879
;877:	}
;878:
;879:	buf = G_GetStripEdString("SVINGAME", "FORCEPOWERCHANGED");
ADDRGP4 $116
ARGP4
ADDRGP4 $423
ARGP4
ADDRLP4 1028
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRLP4 1024
ADDRLP4 1028
INDIRP4
ASGNP4
line 881
;880:
;881:	strcpy(fpChStr, buf);
ADDRLP4 0
ARGP4
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 strcpy
CALLP4
pop
line 883
;882:
;883:	trap_SendServerCommand( ent-g_entities, va("print \"%s%s\n\"", S_COLOR_GREEN, fpChStr) );
ADDRGP4 $424
ARGP4
ADDRGP4 $425
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1032
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1032
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 885
;884:
;885:	ent->client->ps.fd.forceDoInit = 1;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1172
ADDP4
CNSTI4 1
ASGNI4
LABELV $422
line 887
;886:argCheck:
;887:	if (trap_Argc() > 1)
ADDRLP4 1036
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 1
LEI4 $426
line 888
;888:	{
line 891
;889:		char	arg[MAX_TOKEN_CHARS];
;890:
;891:		trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 1040
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 893
;892:
;893:		if (arg && arg[0])
ADDRLP4 1040
CVPU4 4
CNSTU4 0
EQU4 $428
ADDRLP4 1040
INDIRI1
CVII4 1
CNSTI4 0
EQI4 $428
line 894
;894:		{ //if there's an arg, assume it's a combo team command from the UI.
line 895
;895:			Cmd_Team_f(ent);
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 Cmd_Team_f
CALLV
pop
line 896
;896:		}
LABELV $428
line 897
;897:	}
LABELV $426
line 898
;898:}
LABELV $419
endproc Cmd_ForceChanged_f 2064 12
export Cmd_Follow_f
proc Cmd_Follow_f 1040 12
line 905
;899:
;900:/*
;901:=================
;902:Cmd_Follow_f
;903:=================
;904:*/
;905:void Cmd_Follow_f( gentity_t *ent ) {
line 909
;906:	int		i;
;907:	char	arg[MAX_TOKEN_CHARS];
;908:
;909:	if ( trap_Argc() != 2 ) {
ADDRLP4 1028
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1028
INDIRI4
CNSTI4 2
EQI4 $431
line 910
;910:		if ( ent->client->sess.spectatorState == SPECTATOR_FOLLOW ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1528
ADDP4
INDIRI4
CNSTI4 2
NEI4 $430
line 911
;911:			StopFollowing( ent );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 StopFollowing
CALLV
pop
line 912
;912:		}
line 913
;913:		return;
ADDRGP4 $430
JUMPV
LABELV $431
line 916
;914:	}
;915:
;916:	trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 917
;917:	i = ClientNumberFromString( ent, arg );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 1032
ADDRGP4 ClientNumberFromString
CALLI4
ASGNI4
ADDRLP4 0
ADDRLP4 1032
INDIRI4
ASGNI4
line 918
;918:	if ( i == -1 ) {
ADDRLP4 0
INDIRI4
CNSTI4 -1
NEI4 $435
line 919
;919:		return;
ADDRGP4 $430
JUMPV
LABELV $435
line 923
;920:	}
;921:
;922:	// can't follow self
;923:	if ( &level.clients[ i ] == ent->client ) {
CNSTI4 1756
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CVPU4 4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
NEU4 $437
line 924
;924:		return;
ADDRGP4 $430
JUMPV
LABELV $437
line 928
;925:	}
;926:
;927:	// can't follow another spectator
;928:	if ( level.clients[ i ].sess.sessionTeam == TEAM_SPECTATOR ) {
CNSTI4 1756
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 3
NEI4 $439
line 929
;929:		return;
ADDRGP4 $430
JUMPV
LABELV $439
line 933
;930:	}
;931:
;932:	// if they are playing a tournement game, count as a loss
;933:	if ( (g_gametype.integer == GT_TOURNAMENT )
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $441
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 0
NEI4 $441
line 934
;934:		&& ent->client->sess.sessionTeam == TEAM_FREE ) {
line 935
;935:		ent->client->sess.losses++;
ADDRLP4 1036
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1540
ADDP4
ASGNP4
ADDRLP4 1036
INDIRP4
ADDRLP4 1036
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 936
;936:	}
LABELV $441
line 939
;937:
;938:	// first set them to spectator
;939:	if ( ent->client->sess.sessionTeam != TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 3
EQI4 $444
line 940
;940:		SetTeam( ent, "spectator" );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 $331
ARGP4
ADDRGP4 SetTeam
CALLV
pop
line 941
;941:	}
LABELV $444
line 943
;942:
;943:	ent->client->sess.spectatorState = SPECTATOR_FOLLOW;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1528
ADDP4
CNSTI4 2
ASGNI4
line 944
;944:	ent->client->sess.spectatorClient = i;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1532
ADDP4
ADDRLP4 0
INDIRI4
ASGNI4
line 945
;945:}
LABELV $430
endproc Cmd_Follow_f 1040 12
export Cmd_FollowCycle_f
proc Cmd_FollowCycle_f 12 8
line 952
;946:
;947:/*
;948:=================
;949:Cmd_FollowCycle_f
;950:=================
;951:*/
;952:void Cmd_FollowCycle_f( gentity_t *ent, int dir ) {
line 957
;953:	int		clientnum;
;954:	int		original;
;955:
;956:	// if they are playing a tournement game, count as a loss
;957:	if ( (g_gametype.integer == GT_TOURNAMENT )
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $447
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 0
NEI4 $447
line 958
;958:		&& ent->client->sess.sessionTeam == TEAM_FREE ) {
line 959
;959:		ent->client->sess.losses++;
ADDRLP4 8
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1540
ADDP4
ASGNP4
ADDRLP4 8
INDIRP4
ADDRLP4 8
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 960
;960:	}
LABELV $447
line 962
;961:	// first set them to spectator
;962:	if ( ent->client->sess.spectatorState == SPECTATOR_NOT ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1528
ADDP4
INDIRI4
CNSTI4 0
NEI4 $450
line 963
;963:		SetTeam( ent, "spectator" );
ADDRFP4 0
INDIRP4
ARGP4
ADDRGP4 $331
ARGP4
ADDRGP4 SetTeam
CALLV
pop
line 964
;964:	}
LABELV $450
line 966
;965:
;966:	if ( dir != 1 && dir != -1 ) {
ADDRLP4 8
ADDRFP4 4
INDIRI4
ASGNI4
ADDRLP4 8
INDIRI4
CNSTI4 1
EQI4 $452
ADDRLP4 8
INDIRI4
CNSTI4 -1
EQI4 $452
line 967
;967:		G_Error( "Cmd_FollowCycle_f: bad dir %i", dir );
ADDRGP4 $454
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRGP4 G_Error
CALLV
pop
line 968
;968:	}
LABELV $452
line 970
;969:
;970:	clientnum = ent->client->sess.spectatorClient;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1532
ADDP4
INDIRI4
ASGNI4
line 971
;971:	original = clientnum;
ADDRLP4 4
ADDRLP4 0
INDIRI4
ASGNI4
LABELV $455
line 972
;972:	do {
line 973
;973:		clientnum += dir;
ADDRLP4 0
ADDRLP4 0
INDIRI4
ADDRFP4 4
INDIRI4
ADDI4
ASGNI4
line 974
;974:		if ( clientnum >= level.maxclients ) {
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $458
line 975
;975:			clientnum = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
line 976
;976:		}
LABELV $458
line 977
;977:		if ( clientnum < 0 ) {
ADDRLP4 0
INDIRI4
CNSTI4 0
GEI4 $461
line 978
;978:			clientnum = level.maxclients - 1;
ADDRLP4 0
ADDRGP4 level+24
INDIRI4
CNSTI4 1
SUBI4
ASGNI4
line 979
;979:		}
LABELV $461
line 982
;980:
;981:		// can only follow connected clients
;982:		if ( level.clients[ clientnum ].pers.connected != CON_CONNECTED ) {
CNSTI4 1756
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1368
ADDP4
INDIRI4
CNSTI4 2
EQI4 $464
line 983
;983:			continue;
ADDRGP4 $456
JUMPV
LABELV $464
line 987
;984:		}
;985:
;986:		// can't follow another spectator
;987:		if ( level.clients[ clientnum ].sess.sessionTeam == TEAM_SPECTATOR ) {
CNSTI4 1756
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 3
NEI4 $466
line 988
;988:			continue;
ADDRGP4 $456
JUMPV
LABELV $466
line 992
;989:		}
;990:
;991:		// this is good, we can use it
;992:		ent->client->sess.spectatorClient = clientnum;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1532
ADDP4
ADDRLP4 0
INDIRI4
ASGNI4
line 993
;993:		ent->client->sess.spectatorState = SPECTATOR_FOLLOW;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1528
ADDP4
CNSTI4 2
ASGNI4
line 994
;994:		return;
ADDRGP4 $446
JUMPV
LABELV $456
line 995
;995:	} while ( clientnum != original );
ADDRLP4 0
INDIRI4
ADDRLP4 4
INDIRI4
NEI4 $455
line 998
;996:
;997:	// leave it where it was
;998:}
LABELV $446
endproc Cmd_FollowCycle_f 12 8
proc G_SayTo 24 24
line 1007
;999:
;1000:
;1001:/*
;1002:==================
;1003:G_Say
;1004:==================
;1005:*/
;1006:
;1007:static void G_SayTo( gentity_t *ent, gentity_t *other, int mode, int color, const char *name, const char *message ) {
line 1008
;1008:	if (!other) {
ADDRFP4 4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $469
line 1009
;1009:		return;
ADDRGP4 $468
JUMPV
LABELV $469
line 1011
;1010:	}
;1011:	if (!other->inuse) {
ADDRFP4 4
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
CNSTI4 0
NEI4 $471
line 1012
;1012:		return;
ADDRGP4 $468
JUMPV
LABELV $471
line 1014
;1013:	}
;1014:	if (!other->client) {
ADDRFP4 4
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $473
line 1015
;1015:		return;
ADDRGP4 $468
JUMPV
LABELV $473
line 1017
;1016:	}
;1017:	if ( other->client->pers.connected != CON_CONNECTED ) {
ADDRFP4 4
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1368
ADDP4
INDIRI4
CNSTI4 2
EQI4 $475
line 1018
;1018:		return;
ADDRGP4 $468
JUMPV
LABELV $475
line 1020
;1019:	}
;1020:	if ( mode == SAY_TEAM  && !OnSameTeam(ent, other) ) {
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $477
ADDRFP4 0
INDIRP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 0
ADDRGP4 OnSameTeam
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 0
NEI4 $477
line 1021
;1021:		return;
ADDRGP4 $468
JUMPV
LABELV $477
line 1024
;1022:	}
;1023:	// no chatting to players in tournements
;1024:	if ( (g_gametype.integer == GT_TOURNAMENT )
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $479
ADDRLP4 4
CNSTI4 408
ASGNI4
ADDRLP4 8
CNSTI4 1520
ASGNI4
ADDRLP4 12
CNSTI4 0
ASGNI4
ADDRFP4 4
INDIRP4
ADDRLP4 4
INDIRI4
ADDP4
INDIRP4
ADDRLP4 8
INDIRI4
ADDP4
INDIRI4
ADDRLP4 12
INDIRI4
NEI4 $479
ADDRFP4 0
INDIRP4
ADDRLP4 4
INDIRI4
ADDP4
INDIRP4
ADDRLP4 8
INDIRI4
ADDP4
INDIRI4
ADDRLP4 12
INDIRI4
EQI4 $479
line 1026
;1025:		&& other->client->sess.sessionTeam == TEAM_FREE
;1026:		&& ent->client->sess.sessionTeam != TEAM_FREE ) {
line 1027
;1027:		return;
ADDRGP4 $468
JUMPV
LABELV $479
line 1030
;1028:	}
;1029:
;1030:	trap_SendServerCommand( other-g_entities, va("%s \"%s%c%c%s\"", 
ADDRGP4 $482
ARGP4
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $486
ADDRLP4 16
ADDRGP4 $483
ASGNP4
ADDRGP4 $487
JUMPV
LABELV $486
ADDRLP4 16
ADDRGP4 $484
ASGNP4
LABELV $487
ADDRLP4 16
INDIRP4
ARGP4
ADDRFP4 16
INDIRP4
ARGP4
CNSTI4 94
ARGI4
ADDRFP4 12
INDIRI4
ARGI4
ADDRFP4 20
INDIRP4
ARGP4
ADDRLP4 20
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 4
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 20
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1033
;1031:		mode == SAY_TEAM ? "tchat" : "chat",
;1032:		name, Q_COLOR_ESCAPE, color, message));
;1033:}
LABELV $468
endproc G_SayTo 24 24
export G_Say
proc G_Say 320 28
line 1037
;1034:
;1035:#define EC		"\x19"
;1036:
;1037:void G_Say( gentity_t *ent, gentity_t *target, int mode, const char *chatText ) {
line 1046
;1038:	int			j;
;1039:	gentity_t	*other;
;1040:	int			color;
;1041:	char		name[64];
;1042:	// don't let text be too long for malicious reasons
;1043:	char		text[MAX_SAY_TEXT];
;1044:	char		location[64];
;1045:
;1046:	if ( g_gametype.integer < GT_TEAM && mode == SAY_TEAM ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
GEI4 $489
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $489
line 1047
;1047:		mode = SAY_ALL;
ADDRFP4 8
CNSTI4 0
ASGNI4
line 1048
;1048:	}
LABELV $489
line 1050
;1049:
;1050:	switch ( mode ) {
ADDRLP4 292
ADDRFP4 8
INDIRI4
ASGNI4
ADDRLP4 292
INDIRI4
CNSTI4 0
EQI4 $494
ADDRLP4 292
INDIRI4
CNSTI4 1
EQI4 $497
ADDRLP4 292
INDIRI4
CNSTI4 2
EQI4 $503
ADDRGP4 $492
JUMPV
LABELV $492
LABELV $494
line 1053
;1051:	default:
;1052:	case SAY_ALL:
;1053:		G_LogPrintf( "say: %s: %s\n", ent->client->pers.netname, chatText );
ADDRGP4 $495
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
ADDRFP4 12
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 1054
;1054:		Com_sprintf (name, sizeof(name), "%s%c%c"EC": ", ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE );
ADDRLP4 158
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $496
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 1055
;1055:		color = COLOR_GREEN;
ADDRLP4 224
CNSTI4 50
ASGNI4
line 1056
;1056:		break;
ADDRGP4 $493
JUMPV
LABELV $497
line 1058
;1057:	case SAY_TEAM:
;1058:		G_LogPrintf( "sayteam: %s: %s\n", ent->client->pers.netname, chatText );
ADDRGP4 $498
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
ADDRFP4 12
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 1059
;1059:		if (Team_GetLocationMsg(ent, location, sizeof(location)))
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 228
ARGP4
CNSTI4 64
ARGI4
ADDRLP4 296
ADDRGP4 Team_GetLocationMsg
CALLI4
ASGNI4
ADDRLP4 296
INDIRI4
CNSTI4 0
EQI4 $499
line 1060
;1060:			Com_sprintf (name, sizeof(name), EC"(%s%c%c"EC") (%s)"EC": ", 
ADDRLP4 158
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $501
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRLP4 228
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
ADDRGP4 $500
JUMPV
LABELV $499
line 1063
;1061:				ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE, location);
;1062:		else
;1063:			Com_sprintf (name, sizeof(name), EC"(%s%c%c"EC")"EC": ", 
ADDRLP4 158
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $502
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
LABELV $500
line 1065
;1064:				ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE );
;1065:		color = COLOR_CYAN;
ADDRLP4 224
CNSTI4 53
ASGNI4
line 1066
;1066:		break;
ADDRGP4 $493
JUMPV
LABELV $503
line 1068
;1067:	case SAY_TELL:
;1068:		if (target && g_gametype.integer >= GT_TEAM &&
ADDRLP4 300
ADDRFP4 4
INDIRP4
ASGNP4
ADDRLP4 300
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $504
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
LTI4 $504
ADDRLP4 304
CNSTI4 408
ASGNI4
ADDRLP4 308
CNSTI4 1520
ASGNI4
ADDRLP4 312
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 300
INDIRP4
ADDRLP4 304
INDIRI4
ADDP4
INDIRP4
ADDRLP4 308
INDIRI4
ADDP4
INDIRI4
ADDRLP4 312
INDIRP4
ADDRLP4 304
INDIRI4
ADDP4
INDIRP4
ADDRLP4 308
INDIRI4
ADDP4
INDIRI4
NEI4 $504
ADDRLP4 312
INDIRP4
ARGP4
ADDRLP4 228
ARGP4
CNSTI4 64
ARGI4
ADDRLP4 316
ADDRGP4 Team_GetLocationMsg
CALLI4
ASGNI4
ADDRLP4 316
INDIRI4
CNSTI4 0
EQI4 $504
line 1071
;1069:			target->client->sess.sessionTeam == ent->client->sess.sessionTeam &&
;1070:			Team_GetLocationMsg(ent, location, sizeof(location)))
;1071:			Com_sprintf (name, sizeof(name), EC"[%s%c%c"EC"] (%s)"EC": ", ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE, location );
ADDRLP4 158
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $507
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRLP4 228
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
ADDRGP4 $505
JUMPV
LABELV $504
line 1073
;1072:		else
;1073:			Com_sprintf (name, sizeof(name), EC"[%s%c%c"EC"]"EC": ", ent->client->pers.netname, Q_COLOR_ESCAPE, COLOR_WHITE );
ADDRLP4 158
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 $508
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
CNSTI4 94
ARGI4
CNSTI4 55
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
LABELV $505
line 1074
;1074:		color = COLOR_MAGENTA;
ADDRLP4 224
CNSTI4 54
ASGNI4
line 1075
;1075:		break;
LABELV $493
line 1078
;1076:	}
;1077:
;1078:	Q_strncpyz( text, chatText, sizeof(text) );
ADDRLP4 8
ARGP4
ADDRFP4 12
INDIRP4
ARGP4
CNSTI4 150
ARGI4
ADDRGP4 Q_strncpyz
CALLV
pop
line 1080
;1079:
;1080:	if ( target ) {
ADDRFP4 4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $509
line 1081
;1081:		G_SayTo( ent, target, mode, color, name, text );
ADDRFP4 0
INDIRP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRFP4 8
INDIRI4
ARGI4
ADDRLP4 224
INDIRI4
ARGI4
ADDRLP4 158
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 G_SayTo
CALLV
pop
line 1082
;1082:		return;
ADDRGP4 $488
JUMPV
LABELV $509
line 1086
;1083:	}
;1084:
;1085:	// echo the text to the console
;1086:	if ( g_dedicated.integer ) {
ADDRGP4 g_dedicated+12
INDIRI4
CNSTI4 0
EQI4 $511
line 1087
;1087:		G_Printf( "%s%s\n", name, text);
ADDRGP4 $514
ARGP4
ADDRLP4 158
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 G_Printf
CALLV
pop
line 1088
;1088:	}
LABELV $511
line 1091
;1089:
;1090:	// send it to all the apropriate clients
;1091:	for (j = 0; j < level.maxclients; j++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $518
JUMPV
LABELV $515
line 1092
;1092:		other = &g_entities[j];
ADDRLP4 4
CNSTI4 828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1093
;1093:		G_SayTo( ent, other, mode, color, name, text );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRFP4 8
INDIRI4
ARGI4
ADDRLP4 224
INDIRI4
ARGI4
ADDRLP4 158
ARGP4
ADDRLP4 8
ARGP4
ADDRGP4 G_SayTo
CALLV
pop
line 1094
;1094:	}
LABELV $516
line 1091
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $518
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $515
line 1095
;1095:}
LABELV $488
endproc G_Say 320 28
proc Cmd_Say_f 12 16
line 1103
;1096:
;1097:
;1098:/*
;1099:==================
;1100:Cmd_Say_f
;1101:==================
;1102:*/
;1103:static void Cmd_Say_f( gentity_t *ent, int mode, qboolean arg0 ) {
line 1106
;1104:	char		*p;
;1105:
;1106:	if ( trap_Argc () < 2 && !arg0 ) {
ADDRLP4 4
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 2
GEI4 $521
ADDRFP4 8
INDIRI4
CNSTI4 0
NEI4 $521
line 1107
;1107:		return;
ADDRGP4 $520
JUMPV
LABELV $521
line 1110
;1108:	}
;1109:
;1110:	if (arg0)
ADDRFP4 8
INDIRI4
CNSTI4 0
EQI4 $523
line 1111
;1111:	{
line 1112
;1112:		p = ConcatArgs( 0 );
CNSTI4 0
ARGI4
ADDRLP4 8
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 8
INDIRP4
ASGNP4
line 1113
;1113:	}
ADDRGP4 $524
JUMPV
LABELV $523
line 1115
;1114:	else
;1115:	{
line 1116
;1116:		p = ConcatArgs( 1 );
CNSTI4 1
ARGI4
ADDRLP4 8
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 8
INDIRP4
ASGNP4
line 1117
;1117:	}
LABELV $524
line 1119
;1118:
;1119:	G_Say( ent, NULL, mode, p );
ADDRFP4 0
INDIRP4
ARGP4
CNSTP4 0
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1120
;1120:}
LABELV $520
endproc Cmd_Say_f 12 16
proc Cmd_Tell_f 1076 16
line 1127
;1121:
;1122:/*
;1123:==================
;1124:Cmd_Tell_f
;1125:==================
;1126:*/
;1127:static void Cmd_Tell_f( gentity_t *ent ) {
line 1133
;1128:	int			targetNum;
;1129:	gentity_t	*target;
;1130:	char		*p;
;1131:	char		arg[MAX_TOKEN_CHARS];
;1132:
;1133:	if ( trap_Argc () < 2 ) {
ADDRLP4 1036
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 2
GEI4 $526
line 1134
;1134:		return;
ADDRGP4 $525
JUMPV
LABELV $526
line 1137
;1135:	}
;1136:
;1137:	trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 12
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1138
;1138:	targetNum = atoi( arg );
ADDRLP4 12
ARGP4
ADDRLP4 1040
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 4
ADDRLP4 1040
INDIRI4
ASGNI4
line 1139
;1139:	if ( targetNum < 0 || targetNum >= level.maxclients ) {
ADDRLP4 4
INDIRI4
CNSTI4 0
LTI4 $531
ADDRLP4 4
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $528
LABELV $531
line 1140
;1140:		return;
ADDRGP4 $525
JUMPV
LABELV $528
line 1143
;1141:	}
;1142:
;1143:	target = &g_entities[targetNum];
ADDRLP4 0
CNSTI4 828
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1144
;1144:	if ( !target || !target->inuse || !target->client ) {
ADDRLP4 1052
CNSTU4 0
ASGNU4
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRLP4 1052
INDIRU4
EQU4 $535
ADDRLP4 0
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
CNSTI4 0
EQI4 $535
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
ADDRLP4 1052
INDIRU4
NEU4 $532
LABELV $535
line 1145
;1145:		return;
ADDRGP4 $525
JUMPV
LABELV $532
line 1148
;1146:	}
;1147:
;1148:	p = ConcatArgs( 2 );
CNSTI4 2
ARGI4
ADDRLP4 1056
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 8
ADDRLP4 1056
INDIRP4
ASGNP4
line 1150
;1149:
;1150:	G_LogPrintf( "tell: %s to %s: %s\n", ent->client->pers.netname, target->client->pers.netname, p );
ADDRGP4 $536
ARGP4
ADDRLP4 1060
CNSTI4 408
ASGNI4
ADDRLP4 1064
CNSTI4 1416
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1064
INDIRI4
ADDP4
ARGP4
ADDRLP4 0
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1064
INDIRI4
ADDP4
ARGP4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 1151
;1151:	G_Say( ent, target, SAY_TELL, p );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1154
;1152:	// don't tell to the player self if it was already directed to this player
;1153:	// also don't send the chat back to a bot
;1154:	if ( ent != target && !(ent->r.svFlags & SVF_BOT)) {
ADDRLP4 1068
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1068
INDIRP4
CVPU4 4
ADDRLP4 0
INDIRP4
CVPU4 4
EQU4 $537
ADDRLP4 1068
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $537
line 1155
;1155:		G_Say( ent, ent, SAY_TELL, p );
ADDRLP4 1072
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1072
INDIRP4
ARGP4
ADDRLP4 1072
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1156
;1156:	}
LABELV $537
line 1157
;1157:}
LABELV $525
endproc Cmd_Tell_f 1076 16
proc G_VoiceTo 16 24
line 1160
;1158:
;1159:
;1160:static void G_VoiceTo( gentity_t *ent, gentity_t *other, int mode, const char *id, qboolean voiceonly ) {
line 1164
;1161:	int color;
;1162:	char *cmd;
;1163:
;1164:	if (!other) {
ADDRFP4 4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $540
line 1165
;1165:		return;
ADDRGP4 $539
JUMPV
LABELV $540
line 1167
;1166:	}
;1167:	if (!other->inuse) {
ADDRFP4 4
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
CNSTI4 0
NEI4 $542
line 1168
;1168:		return;
ADDRGP4 $539
JUMPV
LABELV $542
line 1170
;1169:	}
;1170:	if (!other->client) {
ADDRFP4 4
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $544
line 1171
;1171:		return;
ADDRGP4 $539
JUMPV
LABELV $544
line 1173
;1172:	}
;1173:	if ( mode == SAY_TEAM && !OnSameTeam(ent, other) ) {
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $546
ADDRFP4 0
INDIRP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRLP4 8
ADDRGP4 OnSameTeam
CALLI4
ASGNI4
ADDRLP4 8
INDIRI4
CNSTI4 0
NEI4 $546
line 1174
;1174:		return;
ADDRGP4 $539
JUMPV
LABELV $546
line 1177
;1175:	}
;1176:	// no chatting to players in tournements
;1177:	if ( (g_gametype.integer == GT_TOURNAMENT )) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $548
line 1178
;1178:		return;
ADDRGP4 $539
JUMPV
LABELV $548
line 1181
;1179:	}
;1180:
;1181:	if (mode == SAY_TEAM) {
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $551
line 1182
;1182:		color = COLOR_CYAN;
ADDRLP4 0
CNSTI4 53
ASGNI4
line 1183
;1183:		cmd = "vtchat";
ADDRLP4 4
ADDRGP4 $553
ASGNP4
line 1184
;1184:	}
ADDRGP4 $552
JUMPV
LABELV $551
line 1185
;1185:	else if (mode == SAY_TELL) {
ADDRFP4 8
INDIRI4
CNSTI4 2
NEI4 $554
line 1186
;1186:		color = COLOR_MAGENTA;
ADDRLP4 0
CNSTI4 54
ASGNI4
line 1187
;1187:		cmd = "vtell";
ADDRLP4 4
ADDRGP4 $556
ASGNP4
line 1188
;1188:	}
ADDRGP4 $555
JUMPV
LABELV $554
line 1189
;1189:	else {
line 1190
;1190:		color = COLOR_GREEN;
ADDRLP4 0
CNSTI4 50
ASGNI4
line 1191
;1191:		cmd = "vchat";
ADDRLP4 4
ADDRGP4 $557
ASGNP4
line 1192
;1192:	}
LABELV $555
LABELV $552
line 1194
;1193:
;1194:	trap_SendServerCommand( other-g_entities, va("%s %d %d %d %s", cmd, voiceonly, ent->s.number, color, id));
ADDRGP4 $558
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRFP4 16
INDIRI4
ARGI4
ADDRFP4 0
INDIRP4
INDIRI4
ARGI4
ADDRLP4 0
INDIRI4
ARGI4
ADDRFP4 12
INDIRP4
ARGP4
ADDRLP4 12
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 4
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 12
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1195
;1195:}
LABELV $539
endproc G_VoiceTo 16 24
export G_Voice
proc G_Voice 8 20
line 1197
;1196:
;1197:void G_Voice( gentity_t *ent, gentity_t *target, int mode, const char *id, qboolean voiceonly ) {
line 1201
;1198:	int			j;
;1199:	gentity_t	*other;
;1200:
;1201:	if ( g_gametype.integer < GT_TEAM && mode == SAY_TEAM ) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
GEI4 $560
ADDRFP4 8
INDIRI4
CNSTI4 1
NEI4 $560
line 1202
;1202:		mode = SAY_ALL;
ADDRFP4 8
CNSTI4 0
ASGNI4
line 1203
;1203:	}
LABELV $560
line 1205
;1204:
;1205:	if ( target ) {
ADDRFP4 4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $563
line 1206
;1206:		G_VoiceTo( ent, target, mode, id, voiceonly );
ADDRFP4 0
INDIRP4
ARGP4
ADDRFP4 4
INDIRP4
ARGP4
ADDRFP4 8
INDIRI4
ARGI4
ADDRFP4 12
INDIRP4
ARGP4
ADDRFP4 16
INDIRI4
ARGI4
ADDRGP4 G_VoiceTo
CALLV
pop
line 1207
;1207:		return;
ADDRGP4 $559
JUMPV
LABELV $563
line 1211
;1208:	}
;1209:
;1210:	// echo the text to the console
;1211:	if ( g_dedicated.integer ) {
ADDRGP4 g_dedicated+12
INDIRI4
CNSTI4 0
EQI4 $565
line 1212
;1212:		G_Printf( "voice: %s %s\n", ent->client->pers.netname, id);
ADDRGP4 $568
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
ADDRFP4 12
INDIRP4
ARGP4
ADDRGP4 G_Printf
CALLV
pop
line 1213
;1213:	}
LABELV $565
line 1216
;1214:
;1215:	// send it to all the apropriate clients
;1216:	for (j = 0; j < level.maxclients; j++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $572
JUMPV
LABELV $569
line 1217
;1217:		other = &g_entities[j];
ADDRLP4 4
CNSTI4 828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1218
;1218:		G_VoiceTo( ent, other, mode, id, voiceonly );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 4
INDIRP4
ARGP4
ADDRFP4 8
INDIRI4
ARGI4
ADDRFP4 12
INDIRP4
ARGP4
ADDRFP4 16
INDIRI4
ARGI4
ADDRGP4 G_VoiceTo
CALLV
pop
line 1219
;1219:	}
LABELV $570
line 1216
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $572
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $569
line 1220
;1220:}
LABELV $559
endproc G_Voice 8 20
proc Cmd_Voice_f 12 20
line 1227
;1221:
;1222:/*
;1223:==================
;1224:Cmd_Voice_f
;1225:==================
;1226:*/
;1227:static void Cmd_Voice_f( gentity_t *ent, int mode, qboolean arg0, qboolean voiceonly ) {
line 1230
;1228:	char		*p;
;1229:
;1230:	if ( trap_Argc () < 2 && !arg0 ) {
ADDRLP4 4
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 2
GEI4 $575
ADDRFP4 8
INDIRI4
CNSTI4 0
NEI4 $575
line 1231
;1231:		return;
ADDRGP4 $574
JUMPV
LABELV $575
line 1234
;1232:	}
;1233:
;1234:	if (arg0)
ADDRFP4 8
INDIRI4
CNSTI4 0
EQI4 $577
line 1235
;1235:	{
line 1236
;1236:		p = ConcatArgs( 0 );
CNSTI4 0
ARGI4
ADDRLP4 8
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 8
INDIRP4
ASGNP4
line 1237
;1237:	}
ADDRGP4 $578
JUMPV
LABELV $577
line 1239
;1238:	else
;1239:	{
line 1240
;1240:		p = ConcatArgs( 1 );
CNSTI4 1
ARGI4
ADDRLP4 8
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 0
ADDRLP4 8
INDIRP4
ASGNP4
line 1241
;1241:	}
LABELV $578
line 1243
;1242:
;1243:	G_Voice( ent, NULL, mode, p, voiceonly );
ADDRFP4 0
INDIRP4
ARGP4
CNSTP4 0
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRLP4 0
INDIRP4
ARGP4
ADDRFP4 12
INDIRI4
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1244
;1244:}
LABELV $574
endproc Cmd_Voice_f 12 20
proc Cmd_VoiceTell_f 1076 20
line 1251
;1245:
;1246:/*
;1247:==================
;1248:Cmd_VoiceTell_f
;1249:==================
;1250:*/
;1251:static void Cmd_VoiceTell_f( gentity_t *ent, qboolean voiceonly ) {
line 1257
;1252:	int			targetNum;
;1253:	gentity_t	*target;
;1254:	char		*id;
;1255:	char		arg[MAX_TOKEN_CHARS];
;1256:
;1257:	if ( trap_Argc () < 2 ) {
ADDRLP4 1036
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 2
GEI4 $580
line 1258
;1258:		return;
ADDRGP4 $579
JUMPV
LABELV $580
line 1261
;1259:	}
;1260:
;1261:	trap_Argv( 1, arg, sizeof( arg ) );
CNSTI4 1
ARGI4
ADDRLP4 12
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1262
;1262:	targetNum = atoi( arg );
ADDRLP4 12
ARGP4
ADDRLP4 1040
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 4
ADDRLP4 1040
INDIRI4
ASGNI4
line 1263
;1263:	if ( targetNum < 0 || targetNum >= level.maxclients ) {
ADDRLP4 4
INDIRI4
CNSTI4 0
LTI4 $585
ADDRLP4 4
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $582
LABELV $585
line 1264
;1264:		return;
ADDRGP4 $579
JUMPV
LABELV $582
line 1267
;1265:	}
;1266:
;1267:	target = &g_entities[targetNum];
ADDRLP4 0
CNSTI4 828
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1268
;1268:	if ( !target || !target->inuse || !target->client ) {
ADDRLP4 1052
CNSTU4 0
ASGNU4
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRLP4 1052
INDIRU4
EQU4 $589
ADDRLP4 0
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
CNSTI4 0
EQI4 $589
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
ADDRLP4 1052
INDIRU4
NEU4 $586
LABELV $589
line 1269
;1269:		return;
ADDRGP4 $579
JUMPV
LABELV $586
line 1272
;1270:	}
;1271:
;1272:	id = ConcatArgs( 2 );
CNSTI4 2
ARGI4
ADDRLP4 1056
ADDRGP4 ConcatArgs
CALLP4
ASGNP4
ADDRLP4 8
ADDRLP4 1056
INDIRP4
ASGNP4
line 1274
;1273:
;1274:	G_LogPrintf( "vtell: %s to %s: %s\n", ent->client->pers.netname, target->client->pers.netname, id );
ADDRGP4 $590
ARGP4
ADDRLP4 1060
CNSTI4 408
ASGNI4
ADDRLP4 1064
CNSTI4 1416
ASGNI4
ADDRFP4 0
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1064
INDIRI4
ADDP4
ARGP4
ADDRLP4 0
INDIRP4
ADDRLP4 1060
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1064
INDIRI4
ADDP4
ARGP4
ADDRLP4 8
INDIRP4
ARGP4
ADDRGP4 G_LogPrintf
CALLV
pop
line 1275
;1275:	G_Voice( ent, target, SAY_TELL, id, voiceonly );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1278
;1276:	// don't tell to the player self if it was already directed to this player
;1277:	// also don't send the chat back to a bot
;1278:	if ( ent != target && !(ent->r.svFlags & SVF_BOT)) {
ADDRLP4 1068
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1068
INDIRP4
CVPU4 4
ADDRLP4 0
INDIRP4
CVPU4 4
EQU4 $591
ADDRLP4 1068
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $591
line 1279
;1279:		G_Voice( ent, ent, SAY_TELL, id, voiceonly );
ADDRLP4 1072
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1072
INDIRP4
ARGP4
ADDRLP4 1072
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRLP4 8
INDIRP4
ARGP4
ADDRFP4 4
INDIRI4
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1280
;1280:	}
LABELV $591
line 1281
;1281:}
LABELV $579
endproc Cmd_VoiceTell_f 1076 20
proc Cmd_VoiceTaunt_f 56 20
line 1289
;1282:
;1283:
;1284:/*
;1285:==================
;1286:Cmd_VoiceTaunt_f
;1287:==================
;1288:*/
;1289:static void Cmd_VoiceTaunt_f( gentity_t *ent ) {
line 1293
;1290:	gentity_t *who;
;1291:	int i;
;1292:
;1293:	if (!ent->client) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $594
line 1294
;1294:		return;
ADDRGP4 $593
JUMPV
LABELV $594
line 1298
;1295:	}
;1296:
;1297:	// insult someone who just killed you
;1298:	if (ent->enemy && ent->enemy->client && ent->enemy->client->lastkilled_client == ent->s.number) {
ADDRLP4 8
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 12
ADDRLP4 8
INDIRP4
CNSTI4 728
ADDP4
INDIRP4
ASGNP4
ADDRLP4 16
CNSTU4 0
ASGNU4
ADDRLP4 12
INDIRP4
CVPU4 4
ADDRLP4 16
INDIRU4
EQU4 $596
ADDRLP4 20
ADDRLP4 12
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 20
INDIRP4
CVPU4 4
ADDRLP4 16
INDIRU4
EQU4 $596
ADDRLP4 20
INDIRP4
CNSTI4 1660
ADDP4
INDIRI4
ADDRLP4 8
INDIRP4
INDIRI4
NEI4 $596
line 1300
;1299:		// i am a dead corpse
;1300:		if (!(ent->enemy->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 728
ADDP4
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $598
line 1301
;1301:			G_Voice( ent, ent->enemy, SAY_TELL, VOICECHAT_DEATHINSULT, qfalse );
ADDRLP4 24
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRLP4 24
INDIRP4
CNSTI4 728
ADDP4
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $600
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1302
;1302:		}
LABELV $598
line 1303
;1303:		if (!(ent->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $601
line 1304
;1304:			G_Voice( ent, ent,        SAY_TELL, VOICECHAT_DEATHINSULT, qfalse );
ADDRLP4 24
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 24
INDIRP4
ARGP4
ADDRLP4 24
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $600
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1305
;1305:		}
LABELV $601
line 1306
;1306:		ent->enemy = NULL;
ADDRFP4 0
INDIRP4
CNSTI4 728
ADDP4
CNSTP4 0
ASGNP4
line 1307
;1307:		return;
ADDRGP4 $593
JUMPV
LABELV $596
line 1310
;1308:	}
;1309:	// insult someone you just killed
;1310:	if (ent->client->lastkilled_client >= 0 && ent->client->lastkilled_client != ent->s.number) {
ADDRLP4 24
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 28
ADDRLP4 24
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1660
ADDP4
INDIRI4
ASGNI4
ADDRLP4 28
INDIRI4
CNSTI4 0
LTI4 $603
ADDRLP4 28
INDIRI4
ADDRLP4 24
INDIRP4
INDIRI4
EQI4 $603
line 1311
;1311:		who = g_entities + ent->client->lastkilled_client;
ADDRLP4 0
CNSTI4 828
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1660
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1312
;1312:		if (who->client) {
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $605
line 1314
;1313:			// who is the person I just killed
;1314:			if (who->client->lasthurt_mod == MOD_STUN_BATON) {
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1668
ADDP4
INDIRI4
CNSTI4 1
NEI4 $607
line 1315
;1315:				if (!(who->r.svFlags & SVF_BOT)) {
ADDRLP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $609
line 1316
;1316:					G_Voice( ent, who, SAY_TELL, VOICECHAT_KILLGAUNTLET, qfalse );	// and I killed them with a gauntlet
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $611
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1317
;1317:				}
LABELV $609
line 1318
;1318:				if (!(ent->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $608
line 1319
;1319:					G_Voice( ent, ent, SAY_TELL, VOICECHAT_KILLGAUNTLET, qfalse );
ADDRLP4 32
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 32
INDIRP4
ARGP4
ADDRLP4 32
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $611
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1320
;1320:				}
line 1321
;1321:			} else {
ADDRGP4 $608
JUMPV
LABELV $607
line 1322
;1322:				if (!(who->r.svFlags & SVF_BOT)) {
ADDRLP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $614
line 1323
;1323:					G_Voice( ent, who, SAY_TELL, VOICECHAT_KILLINSULT, qfalse );	// and I killed them with something else
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $616
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1324
;1324:				}
LABELV $614
line 1325
;1325:				if (!(ent->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $617
line 1326
;1326:					G_Voice( ent, ent, SAY_TELL, VOICECHAT_KILLINSULT, qfalse );
ADDRLP4 32
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 32
INDIRP4
ARGP4
ADDRLP4 32
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $616
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1327
;1327:				}
LABELV $617
line 1328
;1328:			}
LABELV $608
line 1329
;1329:			ent->client->lastkilled_client = -1;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1660
ADDP4
CNSTI4 -1
ASGNI4
line 1330
;1330:			return;
ADDRGP4 $593
JUMPV
LABELV $605
line 1332
;1331:		}
;1332:	}
LABELV $603
line 1334
;1333:
;1334:	if (g_gametype.integer >= GT_TEAM) {
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
LTI4 $619
line 1336
;1335:		// praise a team mate who just got a reward
;1336:		for(i = 0; i < MAX_CLIENTS; i++) {
ADDRLP4 4
CNSTI4 0
ASGNI4
LABELV $622
line 1337
;1337:			who = g_entities + i;
ADDRLP4 0
CNSTI4 828
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 1338
;1338:			if (who->client && who != ent && who->client->sess.sessionTeam == ent->client->sess.sessionTeam) {
ADDRLP4 36
CNSTI4 408
ASGNI4
ADDRLP4 40
ADDRLP4 0
INDIRP4
ADDRLP4 36
INDIRI4
ADDP4
INDIRP4
ASGNP4
ADDRLP4 40
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $626
ADDRLP4 44
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRLP4 44
INDIRP4
CVPU4 4
EQU4 $626
ADDRLP4 48
CNSTI4 1520
ASGNI4
ADDRLP4 40
INDIRP4
ADDRLP4 48
INDIRI4
ADDP4
INDIRI4
ADDRLP4 44
INDIRP4
ADDRLP4 36
INDIRI4
ADDP4
INDIRP4
ADDRLP4 48
INDIRI4
ADDP4
INDIRI4
NEI4 $626
line 1339
;1339:				if (who->client->rewardTime > level.time) {
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1684
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LEI4 $628
line 1340
;1340:					if (!(who->r.svFlags & SVF_BOT)) {
ADDRLP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $631
line 1341
;1341:						G_Voice( ent, who, SAY_TELL, VOICECHAT_PRAISE, qfalse );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $633
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1342
;1342:					}
LABELV $631
line 1343
;1343:					if (!(ent->r.svFlags & SVF_BOT)) {
ADDRFP4 0
INDIRP4
CNSTI4 304
ADDP4
INDIRI4
CNSTI4 8
BANDI4
CNSTI4 0
NEI4 $593
line 1344
;1344:						G_Voice( ent, ent, SAY_TELL, VOICECHAT_PRAISE, qfalse );
ADDRLP4 52
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 52
INDIRP4
ARGP4
ADDRLP4 52
INDIRP4
ARGP4
CNSTI4 2
ARGI4
ADDRGP4 $633
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1345
;1345:					}
line 1346
;1346:					return;
ADDRGP4 $593
JUMPV
LABELV $628
line 1348
;1347:				}
;1348:			}
LABELV $626
line 1349
;1349:		}
LABELV $623
line 1336
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 4
INDIRI4
CNSTI4 32
LTI4 $622
line 1350
;1350:	}
LABELV $619
line 1353
;1351:
;1352:	// just say something
;1353:	G_Voice( ent, NULL, SAY_ALL, VOICECHAT_TAUNT, qfalse );
ADDRFP4 0
INDIRP4
ARGP4
CNSTP4 0
ARGP4
ADDRLP4 32
CNSTI4 0
ASGNI4
ADDRLP4 32
INDIRI4
ARGI4
ADDRGP4 $636
ARGP4
ADDRLP4 32
INDIRI4
ARGI4
ADDRGP4 G_Voice
CALLV
pop
line 1354
;1354:}
LABELV $593
endproc Cmd_VoiceTaunt_f 56 20
data
align 4
LABELV gc_orders
address $637
address $638
address $639
address $640
address $641
address $642
address $643
export Cmd_GameCommand_f
code
proc Cmd_GameCommand_f 1060 16
line 1368
;1355:
;1356:
;1357:
;1358:static char	*gc_orders[] = {
;1359:	"hold your position",
;1360:	"hold this position",
;1361:	"come here",
;1362:	"cover me",
;1363:	"guard location",
;1364:	"search and destroy",
;1365:	"report"
;1366:};
;1367:
;1368:void Cmd_GameCommand_f( gentity_t *ent ) {
line 1373
;1369:	int		player;
;1370:	int		order;
;1371:	char	str[MAX_TOKEN_CHARS];
;1372:
;1373:	trap_Argv( 1, str, sizeof( str ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1374
;1374:	player = atoi( str );
ADDRLP4 0
ARGP4
ADDRLP4 1032
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1028
ADDRLP4 1032
INDIRI4
ASGNI4
line 1375
;1375:	trap_Argv( 2, str, sizeof( str ) );
CNSTI4 2
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1376
;1376:	order = atoi( str );
ADDRLP4 0
ARGP4
ADDRLP4 1036
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 1024
ADDRLP4 1036
INDIRI4
ASGNI4
line 1378
;1377:
;1378:	if ( player < 0 || player >= MAX_CLIENTS ) {
ADDRLP4 1028
INDIRI4
CNSTI4 0
LTI4 $647
ADDRLP4 1028
INDIRI4
CNSTI4 32
LTI4 $645
LABELV $647
line 1379
;1379:		return;
ADDRGP4 $644
JUMPV
LABELV $645
line 1381
;1380:	}
;1381:	if ( order < 0 || order > sizeof(gc_orders)/sizeof(char *) ) {
ADDRLP4 1024
INDIRI4
CNSTI4 0
LTI4 $650
ADDRLP4 1024
INDIRI4
CVIU4 4
CNSTU4 7
LEU4 $648
LABELV $650
line 1382
;1382:		return;
ADDRGP4 $644
JUMPV
LABELV $648
line 1384
;1383:	}
;1384:	G_Say( ent, &g_entities[player], SAY_TELL, gc_orders[order] );
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 828
ADDRLP4 1028
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ARGP4
ADDRLP4 1048
CNSTI4 2
ASGNI4
ADDRLP4 1048
INDIRI4
ARGI4
ADDRLP4 1024
INDIRI4
ADDRLP4 1048
INDIRI4
LSHI4
ADDRGP4 gc_orders
ADDP4
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1385
;1385:	G_Say( ent, ent, SAY_TELL, gc_orders[order] );
ADDRLP4 1052
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1052
INDIRP4
ARGP4
ADDRLP4 1052
INDIRP4
ARGP4
ADDRLP4 1056
CNSTI4 2
ASGNI4
ADDRLP4 1056
INDIRI4
ARGI4
ADDRLP4 1024
INDIRI4
ADDRLP4 1056
INDIRI4
LSHI4
ADDRGP4 gc_orders
ADDP4
INDIRP4
ARGP4
ADDRGP4 G_Say
CALLV
pop
line 1386
;1386:}
LABELV $644
endproc Cmd_GameCommand_f 1060 16
export Cmd_Where_f
proc Cmd_Where_f 8 8
line 1393
;1387:
;1388:/*
;1389:==================
;1390:Cmd_Where_f
;1391:==================
;1392:*/
;1393:void Cmd_Where_f( gentity_t *ent ) {
line 1394
;1394:	trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", vtos( ent->s.origin ) ) );
ADDRFP4 0
INDIRP4
CNSTI4 92
ADDP4
ARGP4
ADDRLP4 0
ADDRGP4 vtos
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 0
INDIRP4
ARGP4
ADDRLP4 4
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 4
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1395
;1395:}
LABELV $651
endproc Cmd_Where_f 8 8
data
align 4
LABELV gameNames
address $652
address $653
address $654
address $655
address $656
address $657
address $658
address $659
address $660
export Cmd_CallVote_f
code
proc Cmd_CallVote_f 3144 24
line 1414
;1396:
;1397:static const char *gameNames[] = {
;1398:	"Free For All",
;1399:	"Holocron FFA",
;1400:	"Jedi Master",
;1401:	"Duel",
;1402:	"Single Player",
;1403:	"Team FFA",
;1404:	"N/A",
;1405:	"Capture the Flag",
;1406:	"Capture the Ysalamiri"
;1407:};
;1408:
;1409:/*
;1410:==================
;1411:Cmd_CallVote_f
;1412:==================
;1413:*/
;1414:void Cmd_CallVote_f( gentity_t *ent ) {
line 1419
;1415:	int		i;
;1416:	char	arg1[MAX_STRING_TOKENS];
;1417:	char	arg2[MAX_STRING_TOKENS];
;1418:
;1419:	if ( !g_allowVote.integer ) {
ADDRGP4 g_allowVote+12
INDIRI4
CNSTI4 0
NEI4 $662
line 1420
;1420:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOVOTE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $665
ARGP4
ADDRLP4 2052
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2052
INDIRP4
ARGP4
ADDRLP4 2056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1421
;1421:		return;
ADDRGP4 $661
JUMPV
LABELV $662
line 1424
;1422:	}
;1423:
;1424:	if ( level.voteTime ) {
ADDRGP4 level+2276
INDIRI4
CNSTI4 0
EQI4 $666
line 1425
;1425:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "VOTEINPROGRESS")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $669
ARGP4
ADDRLP4 2052
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2052
INDIRP4
ARGP4
ADDRLP4 2056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1426
;1426:		return;
ADDRGP4 $661
JUMPV
LABELV $666
line 1428
;1427:	}
;1428:	if ( ent->client->pers.voteCount >= MAX_VOTE_COUNT ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1508
ADDP4
INDIRI4
CNSTI4 3
LTI4 $670
line 1429
;1429:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "MAXVOTES")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $672
ARGP4
ADDRLP4 2052
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2052
INDIRP4
ARGP4
ADDRLP4 2056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1430
;1430:		return;
ADDRGP4 $661
JUMPV
LABELV $670
line 1432
;1431:	}
;1432:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 3
NEI4 $673
line 1433
;1433:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOSPECVOTE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $675
ARGP4
ADDRLP4 2052
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2052
INDIRP4
ARGP4
ADDRLP4 2056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1434
;1434:		return;
ADDRGP4 $661
JUMPV
LABELV $673
line 1438
;1435:	}
;1436:
;1437:	// make sure it is a valid command to vote on
;1438:	trap_Argv( 1, arg1, sizeof( arg1 ) );
CNSTI4 1
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1439
;1439:	trap_Argv( 2, arg2, sizeof( arg2 ) );
CNSTI4 2
ARGI4
ADDRLP4 1028
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1441
;1440:
;1441:	if( strchr( arg1, ';' ) || strchr( arg2, ';' ) ) {
ADDRLP4 4
ARGP4
CNSTI4 59
ARGI4
ADDRLP4 2052
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2052
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $678
ADDRLP4 1028
ARGP4
CNSTI4 59
ARGI4
ADDRLP4 2056
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2056
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $676
LABELV $678
line 1442
;1442:		trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRGP4 $679
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1443
;1443:		return;
ADDRGP4 $661
JUMPV
LABELV $676
line 1446
;1444:	}
;1445:
;1446:	if ( !Q_stricmp( arg1, "map_restart" ) ) {
ADDRLP4 4
ARGP4
ADDRGP4 $682
ARGP4
ADDRLP4 2060
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2060
INDIRI4
CNSTI4 0
NEI4 $680
line 1447
;1447:	} else if ( !Q_stricmp( arg1, "nextmap" ) ) {
ADDRGP4 $681
JUMPV
LABELV $680
ADDRLP4 4
ARGP4
ADDRGP4 $685
ARGP4
ADDRLP4 2064
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2064
INDIRI4
CNSTI4 0
NEI4 $683
line 1448
;1448:	} else if ( !Q_stricmp( arg1, "map" ) ) {
ADDRGP4 $684
JUMPV
LABELV $683
ADDRLP4 4
ARGP4
ADDRGP4 $688
ARGP4
ADDRLP4 2068
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2068
INDIRI4
CNSTI4 0
NEI4 $686
line 1449
;1449:	} else if ( !Q_stricmp( arg1, "g_gametype" ) ) {
ADDRGP4 $687
JUMPV
LABELV $686
ADDRLP4 4
ARGP4
ADDRGP4 $691
ARGP4
ADDRLP4 2072
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2072
INDIRI4
CNSTI4 0
NEI4 $689
line 1450
;1450:	} else if ( !Q_stricmp( arg1, "kick" ) ) {
ADDRGP4 $690
JUMPV
LABELV $689
ADDRLP4 4
ARGP4
ADDRGP4 $694
ARGP4
ADDRLP4 2076
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2076
INDIRI4
CNSTI4 0
NEI4 $692
line 1451
;1451:	} else if ( !Q_stricmp( arg1, "clientkick" ) ) {
ADDRGP4 $693
JUMPV
LABELV $692
ADDRLP4 4
ARGP4
ADDRGP4 $697
ARGP4
ADDRLP4 2080
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2080
INDIRI4
CNSTI4 0
NEI4 $695
line 1452
;1452:	} else if ( !Q_stricmp( arg1, "g_doWarmup" ) ) {
ADDRGP4 $696
JUMPV
LABELV $695
ADDRLP4 4
ARGP4
ADDRGP4 $700
ARGP4
ADDRLP4 2084
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2084
INDIRI4
CNSTI4 0
NEI4 $698
line 1453
;1453:	} else if ( !Q_stricmp( arg1, "timelimit" ) ) {
ADDRGP4 $699
JUMPV
LABELV $698
ADDRLP4 4
ARGP4
ADDRGP4 $703
ARGP4
ADDRLP4 2088
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2088
INDIRI4
CNSTI4 0
NEI4 $701
line 1454
;1454:	} else if ( !Q_stricmp( arg1, "fraglimit" ) ) {
ADDRGP4 $702
JUMPV
LABELV $701
ADDRLP4 4
ARGP4
ADDRGP4 $706
ARGP4
ADDRLP4 2092
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2092
INDIRI4
CNSTI4 0
NEI4 $704
line 1455
;1455:	} else {
ADDRGP4 $705
JUMPV
LABELV $704
line 1456
;1456:		trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRGP4 $679
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1457
;1457:		trap_SendServerCommand( ent-g_entities, "print \"Vote commands are: map_restart, nextmap, map <mapname>, g_gametype <n>, kick <player>, clientkick <clientnum>, g_doWarmup, timelimit <time>, fraglimit <frags>.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRGP4 $707
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1458
;1458:		return;
ADDRGP4 $661
JUMPV
LABELV $705
LABELV $702
LABELV $699
LABELV $696
LABELV $693
LABELV $690
LABELV $687
LABELV $684
LABELV $681
line 1462
;1459:	}
;1460:
;1461:	// if there is still a vote to be executed
;1462:	if ( level.voteExecuteTime ) {
ADDRGP4 level+2280
INDIRI4
CNSTI4 0
EQI4 $708
line 1463
;1463:		level.voteExecuteTime = 0;
ADDRGP4 level+2280
CNSTI4 0
ASGNI4
line 1464
;1464:		trap_SendConsoleCommand( EXEC_APPEND, va("%s\n", level.voteString ) );
ADDRGP4 $712
ARGP4
ADDRGP4 level+228
ARGP4
ADDRLP4 2096
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 2
ARGI4
ADDRLP4 2096
INDIRP4
ARGP4
ADDRGP4 trap_SendConsoleCommand
CALLV
pop
line 1465
;1465:	}
LABELV $708
line 1468
;1466:
;1467:	// special case for g_gametype, check for bad values
;1468:	if ( !Q_stricmp( arg1, "g_gametype" ) ) {
ADDRLP4 4
ARGP4
ADDRGP4 $691
ARGP4
ADDRLP4 2096
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2096
INDIRI4
CNSTI4 0
NEI4 $714
line 1469
;1469:		i = atoi( arg2 );
ADDRLP4 1028
ARGP4
ADDRLP4 2100
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 0
ADDRLP4 2100
INDIRI4
ASGNI4
line 1470
;1470:		if( i == GT_SINGLE_PLAYER || i < GT_FFA || i >= GT_MAX_GAME_TYPE) {
ADDRLP4 0
INDIRI4
CNSTI4 4
EQI4 $719
ADDRLP4 0
INDIRI4
CNSTI4 0
LTI4 $719
ADDRLP4 0
INDIRI4
CNSTI4 9
LTI4 $716
LABELV $719
line 1471
;1471:			trap_SendServerCommand( ent-g_entities, "print \"Invalid gametype.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRGP4 $720
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1472
;1472:			return;
ADDRGP4 $661
JUMPV
LABELV $716
line 1475
;1473:		}
;1474:
;1475:		level.votingGametype = qtrue;
ADDRGP4 level+2296
CNSTI4 1
ASGNI4
line 1476
;1476:		level.votingGametypeTo = i;
ADDRGP4 level+2300
ADDRLP4 0
INDIRI4
ASGNI4
line 1478
;1477:
;1478:		Com_sprintf( level.voteString, sizeof( level.voteString ), "%s %d", arg1, i );
ADDRGP4 level+228
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $725
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 1479
;1479:		Com_sprintf( level.voteDisplayString, sizeof( level.voteDisplayString ), "%s %s", arg1, gameNames[i] );
ADDRGP4 level+1252
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $728
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 gameNames
ADDP4
INDIRP4
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1480
;1480:	} else if ( !Q_stricmp( arg1, "map" ) ) {
ADDRGP4 $715
JUMPV
LABELV $714
ADDRLP4 4
ARGP4
ADDRGP4 $688
ARGP4
ADDRLP4 2100
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2100
INDIRI4
CNSTI4 0
NEI4 $729
line 1485
;1481:		// special case for map changes, we want to reset the nextmap setting
;1482:		// this allows a player to change maps, but not upset the map rotation
;1483:		char	s[MAX_STRING_CHARS];
;1484:
;1485:		if (!G_DoesMapSupportGametype(arg2, trap_Cvar_VariableIntegerValue("g_gametype")))
ADDRGP4 $691
ARGP4
ADDRLP4 3128
ADDRGP4 trap_Cvar_VariableIntegerValue
CALLI4
ASGNI4
ADDRLP4 1028
ARGP4
ADDRLP4 3128
INDIRI4
ARGI4
ADDRLP4 3132
ADDRGP4 G_DoesMapSupportGametype
CALLI4
ASGNI4
ADDRLP4 3132
INDIRI4
CNSTI4 0
NEI4 $731
line 1486
;1486:		{
line 1488
;1487:			//trap_SendServerCommand( ent-g_entities, "print \"You can't vote for this map, it isn't supported by the current gametype.\n\"" );
;1488:			trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOVOTE_MAPNOTSUPPORTEDBYGAME")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $733
ARGP4
ADDRLP4 3136
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 3136
INDIRP4
ARGP4
ADDRLP4 3140
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 3140
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1489
;1489:			return;
ADDRGP4 $661
JUMPV
LABELV $731
line 1492
;1490:		}
;1491:
;1492:		trap_Cvar_VariableStringBuffer( "nextmap", s, sizeof(s) );
ADDRGP4 $685
ARGP4
ADDRLP4 2104
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Cvar_VariableStringBuffer
CALLV
pop
line 1493
;1493:		if (*s) {
ADDRLP4 2104
INDIRI1
CVII4 1
CNSTI4 0
EQI4 $734
line 1494
;1494:			Com_sprintf( level.voteString, sizeof( level.voteString ), "%s %s; set nextmap \"%s\"", arg1, arg2, s );
ADDRGP4 level+228
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $738
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 1028
ARGP4
ADDRLP4 2104
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1495
;1495:		} else {
ADDRGP4 $735
JUMPV
LABELV $734
line 1496
;1496:			Com_sprintf( level.voteString, sizeof( level.voteString ), "%s %s", arg1, arg2 );
ADDRGP4 level+228
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $728
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 1028
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1497
;1497:		}
LABELV $735
line 1498
;1498:		Com_sprintf( level.voteDisplayString, sizeof( level.voteDisplayString ), "%s", level.voteString );
ADDRGP4 level+1252
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $743
ARGP4
ADDRGP4 level+228
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1499
;1499:	} else if ( !Q_stricmp( arg1, "nextmap" ) ) {
ADDRGP4 $730
JUMPV
LABELV $729
ADDRLP4 4
ARGP4
ADDRGP4 $685
ARGP4
ADDRLP4 2104
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2104
INDIRI4
CNSTI4 0
NEI4 $745
line 1502
;1500:		char	s[MAX_STRING_CHARS];
;1501:
;1502:		trap_Cvar_VariableStringBuffer( "nextmap", s, sizeof(s) );
ADDRGP4 $685
ARGP4
ADDRLP4 2108
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Cvar_VariableStringBuffer
CALLV
pop
line 1503
;1503:		if (!*s) {
ADDRLP4 2108
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $747
line 1504
;1504:			trap_SendServerCommand( ent-g_entities, "print \"nextmap not set.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRGP4 $749
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1505
;1505:			return;
ADDRGP4 $661
JUMPV
LABELV $747
line 1507
;1506:		}
;1507:		Com_sprintf( level.voteString, sizeof( level.voteString ), "vstr nextmap");
ADDRGP4 level+228
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $752
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1508
;1508:		Com_sprintf( level.voteDisplayString, sizeof( level.voteDisplayString ), "%s", level.voteString );
ADDRGP4 level+1252
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $743
ARGP4
ADDRGP4 level+228
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1509
;1509:	} else {
ADDRGP4 $746
JUMPV
LABELV $745
line 1510
;1510:		Com_sprintf( level.voteString, sizeof( level.voteString ), "%s \"%s\"", arg1, arg2 );
ADDRGP4 level+228
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $758
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 1028
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1511
;1511:		Com_sprintf( level.voteDisplayString, sizeof( level.voteDisplayString ), "%s", level.voteString );
ADDRGP4 level+1252
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $743
ARGP4
ADDRGP4 level+228
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1512
;1512:	}
LABELV $746
LABELV $730
LABELV $715
line 1514
;1513:
;1514:	trap_SendServerCommand( -1, va("print \"%s %s\n\"", ent->client->pers.netname, G_GetStripEdString("SVINGAME", "PLCALLEDVOTE") ) );
ADDRGP4 $116
ARGP4
ADDRGP4 $763
ARGP4
ADDRLP4 2108
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $762
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
ADDRLP4 2108
INDIRP4
ARGP4
ADDRLP4 2112
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 2112
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1517
;1515:
;1516:	// start the voting, the caller autoamtically votes yes
;1517:	level.voteTime = level.time;
ADDRGP4 level+2276
ADDRGP4 level+32
INDIRI4
ASGNI4
line 1518
;1518:	level.voteYes = 1;
ADDRGP4 level+2284
CNSTI4 1
ASGNI4
line 1519
;1519:	level.voteNo = 0;
ADDRGP4 level+2288
CNSTI4 0
ASGNI4
line 1521
;1520:
;1521:	for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $771
JUMPV
LABELV $768
line 1522
;1522:		level.clients[i].ps.eFlags &= ~EF_VOTED;
ADDRLP4 2116
CNSTI4 1756
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 108
ADDP4
ASGNP4
ADDRLP4 2116
INDIRP4
ADDRLP4 2116
INDIRP4
INDIRI4
CNSTI4 -16385
BANDI4
ASGNI4
line 1523
;1523:	}
LABELV $769
line 1521
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $771
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $768
line 1524
;1524:	ent->client->ps.eFlags |= EF_VOTED;
ADDRLP4 2116
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 108
ADDP4
ASGNP4
ADDRLP4 2116
INDIRP4
ADDRLP4 2116
INDIRP4
INDIRI4
CNSTI4 16384
BORI4
ASGNI4
line 1526
;1525:
;1526:	trap_SetConfigstring( CS_VOTE_TIME, va("%i", level.voteTime ) );
ADDRGP4 $773
ARGP4
ADDRGP4 level+2276
INDIRI4
ARGI4
ADDRLP4 2120
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 8
ARGI4
ADDRLP4 2120
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1527
;1527:	trap_SetConfigstring( CS_VOTE_STRING, level.voteDisplayString );	
CNSTI4 9
ARGI4
ADDRGP4 level+1252
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1528
;1528:	trap_SetConfigstring( CS_VOTE_YES, va("%i", level.voteYes ) );
ADDRGP4 $773
ARGP4
ADDRGP4 level+2284
INDIRI4
ARGI4
ADDRLP4 2124
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 10
ARGI4
ADDRLP4 2124
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1529
;1529:	trap_SetConfigstring( CS_VOTE_NO, va("%i", level.voteNo ) );	
ADDRGP4 $773
ARGP4
ADDRGP4 level+2288
INDIRI4
ARGI4
ADDRLP4 2128
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 11
ARGI4
ADDRLP4 2128
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1530
;1530:}
LABELV $661
endproc Cmd_CallVote_f 3144 24
export Cmd_Vote_f
proc Cmd_Vote_f 84 12
line 1537
;1531:
;1532:/*
;1533:==================
;1534:Cmd_Vote_f
;1535:==================
;1536:*/
;1537:void Cmd_Vote_f( gentity_t *ent ) {
line 1540
;1538:	char		msg[64];
;1539:
;1540:	if ( !level.voteTime ) {
ADDRGP4 level+2276
INDIRI4
CNSTI4 0
NEI4 $779
line 1541
;1541:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOVOTEINPROG")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $782
ARGP4
ADDRLP4 64
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 64
INDIRP4
ARGP4
ADDRLP4 68
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 68
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1542
;1542:		return;
ADDRGP4 $778
JUMPV
LABELV $779
line 1544
;1543:	}
;1544:	if ( ent->client->ps.eFlags & EF_VOTED ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 108
ADDP4
INDIRI4
CNSTI4 16384
BANDI4
CNSTI4 0
EQI4 $783
line 1545
;1545:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "VOTEALREADY")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $785
ARGP4
ADDRLP4 64
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 64
INDIRP4
ARGP4
ADDRLP4 68
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 68
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1546
;1546:		return;
ADDRGP4 $778
JUMPV
LABELV $783
line 1548
;1547:	}
;1548:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 3
NEI4 $786
line 1549
;1549:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOVOTEASSPEC")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $788
ARGP4
ADDRLP4 64
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 64
INDIRP4
ARGP4
ADDRLP4 68
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 68
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1550
;1550:		return;
ADDRGP4 $778
JUMPV
LABELV $786
line 1553
;1551:	}
;1552:
;1553:	trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "PLVOTECAST")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $789
ARGP4
ADDRLP4 64
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 64
INDIRP4
ARGP4
ADDRLP4 68
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 68
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1555
;1554:
;1555:	ent->client->ps.eFlags |= EF_VOTED;
ADDRLP4 72
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 108
ADDP4
ASGNP4
ADDRLP4 72
INDIRP4
ADDRLP4 72
INDIRP4
INDIRI4
CNSTI4 16384
BORI4
ASGNI4
line 1557
;1556:
;1557:	trap_Argv( 1, msg, sizeof( msg ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1559
;1558:
;1559:	if ( msg[0] == 'y' || msg[1] == 'Y' || msg[1] == '1' ) {
ADDRLP4 0
INDIRI1
CVII4 1
CNSTI4 121
EQI4 $795
ADDRLP4 0+1
INDIRI1
CVII4 1
CNSTI4 89
EQI4 $795
ADDRLP4 0+1
INDIRI1
CVII4 1
CNSTI4 49
NEI4 $790
LABELV $795
line 1560
;1560:		level.voteYes++;
ADDRLP4 76
ADDRGP4 level+2284
ASGNP4
ADDRLP4 76
INDIRP4
ADDRLP4 76
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1561
;1561:		trap_SetConfigstring( CS_VOTE_YES, va("%i", level.voteYes ) );
ADDRGP4 $773
ARGP4
ADDRGP4 level+2284
INDIRI4
ARGI4
ADDRLP4 80
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 10
ARGI4
ADDRLP4 80
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1562
;1562:	} else {
ADDRGP4 $791
JUMPV
LABELV $790
line 1563
;1563:		level.voteNo++;
ADDRLP4 76
ADDRGP4 level+2288
ASGNP4
ADDRLP4 76
INDIRP4
ADDRLP4 76
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1564
;1564:		trap_SetConfigstring( CS_VOTE_NO, va("%i", level.voteNo ) );	
ADDRGP4 $773
ARGP4
ADDRGP4 level+2288
INDIRI4
ARGI4
ADDRLP4 80
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 11
ARGI4
ADDRLP4 80
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1565
;1565:	}
LABELV $791
line 1569
;1566:
;1567:	// a majority will be determined in CheckVote, which will also account
;1568:	// for players entering or leaving
;1569:}
LABELV $778
endproc Cmd_Vote_f 84 12
export Cmd_CallTeamVote_f
proc Cmd_CallTeamVote_f 2164 20
line 1576
;1570:
;1571:/*
;1572:==================
;1573:Cmd_CallTeamVote_f
;1574:==================
;1575:*/
;1576:void Cmd_CallTeamVote_f( gentity_t *ent ) {
line 1581
;1577:	int		i, team, cs_offset;
;1578:	char	arg1[MAX_STRING_TOKENS];
;1579:	char	arg2[MAX_STRING_TOKENS];
;1580:
;1581:	team = ent->client->sess.sessionTeam;
ADDRLP4 1028
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
ASGNI4
line 1582
;1582:	if ( team == TEAM_RED )
ADDRLP4 1028
INDIRI4
CNSTI4 1
NEI4 $801
line 1583
;1583:		cs_offset = 0;
ADDRLP4 1032
CNSTI4 0
ASGNI4
ADDRGP4 $802
JUMPV
LABELV $801
line 1584
;1584:	else if ( team == TEAM_BLUE )
ADDRLP4 1028
INDIRI4
CNSTI4 2
NEI4 $800
line 1585
;1585:		cs_offset = 1;
ADDRLP4 1032
CNSTI4 1
ASGNI4
line 1587
;1586:	else
;1587:		return;
LABELV $804
LABELV $802
line 1589
;1588:
;1589:	if ( !g_allowVote.integer ) {
ADDRGP4 g_allowVote+12
INDIRI4
CNSTI4 0
NEI4 $805
line 1590
;1590:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOVOTE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $665
ARGP4
ADDRLP4 2060
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2060
INDIRP4
ARGP4
ADDRLP4 2064
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2064
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1591
;1591:		return;
ADDRGP4 $800
JUMPV
LABELV $805
line 1594
;1592:	}
;1593:
;1594:	if ( level.teamVoteTime[cs_offset] ) {
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4352
ADDP4
INDIRI4
CNSTI4 0
EQI4 $808
line 1595
;1595:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "TEAMVOTEALREADY")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $811
ARGP4
ADDRLP4 2060
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2060
INDIRP4
ARGP4
ADDRLP4 2064
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2064
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1596
;1596:		return;
ADDRGP4 $800
JUMPV
LABELV $808
line 1598
;1597:	}
;1598:	if ( ent->client->pers.teamVoteCount >= MAX_VOTE_COUNT ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1512
ADDP4
INDIRI4
CNSTI4 3
LTI4 $812
line 1599
;1599:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "MAXTEAMVOTES")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $814
ARGP4
ADDRLP4 2060
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2060
INDIRP4
ARGP4
ADDRLP4 2064
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2064
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1600
;1600:		return;
ADDRGP4 $800
JUMPV
LABELV $812
line 1602
;1601:	}
;1602:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 3
NEI4 $815
line 1603
;1603:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOSPECVOTE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $675
ARGP4
ADDRLP4 2060
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 2060
INDIRP4
ARGP4
ADDRLP4 2064
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2064
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1604
;1604:		return;
ADDRGP4 $800
JUMPV
LABELV $815
line 1608
;1605:	}
;1606:
;1607:	// make sure it is a valid command to vote on
;1608:	trap_Argv( 1, arg1, sizeof( arg1 ) );
CNSTI4 1
ARGI4
ADDRLP4 1036
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1609
;1609:	arg2[0] = '\0';
ADDRLP4 4
CNSTI1 0
ASGNI1
line 1610
;1610:	for ( i = 2; i < trap_Argc(); i++ ) {
ADDRLP4 0
CNSTI4 2
ASGNI4
ADDRGP4 $820
JUMPV
LABELV $817
line 1611
;1611:		if (i > 2)
ADDRLP4 0
INDIRI4
CNSTI4 2
LEI4 $821
line 1612
;1612:			strcat(arg2, " ");
ADDRLP4 4
ARGP4
ADDRGP4 $823
ARGP4
ADDRGP4 strcat
CALLP4
pop
LABELV $821
line 1613
;1613:		trap_Argv( i, &arg2[strlen(arg2)], sizeof( arg2 ) - strlen(arg2) );
ADDRLP4 4
ARGP4
ADDRLP4 2060
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 4
ARGP4
ADDRLP4 2064
ADDRGP4 strlen
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
ARGI4
ADDRLP4 2060
INDIRI4
ADDRLP4 4
ADDP4
ARGP4
CNSTU4 1024
ADDRLP4 2064
INDIRI4
CVIU4 4
SUBU4
CVUI4 4
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1614
;1614:	}
LABELV $818
line 1610
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $820
ADDRLP4 2060
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 0
INDIRI4
ADDRLP4 2060
INDIRI4
LTI4 $817
line 1616
;1615:
;1616:	if( strchr( arg1, ';' ) || strchr( arg2, ';' ) ) {
ADDRLP4 1036
ARGP4
CNSTI4 59
ARGI4
ADDRLP4 2064
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2064
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $826
ADDRLP4 4
ARGP4
CNSTI4 59
ARGI4
ADDRLP4 2068
ADDRGP4 strchr
CALLP4
ASGNP4
ADDRLP4 2068
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $824
LABELV $826
line 1617
;1617:		trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRGP4 $679
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1618
;1618:		return;
ADDRGP4 $800
JUMPV
LABELV $824
line 1621
;1619:	}
;1620:
;1621:	if ( !Q_stricmp( arg1, "leader" ) ) {
ADDRLP4 1036
ARGP4
ADDRGP4 $829
ARGP4
ADDRLP4 2072
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2072
INDIRI4
CNSTI4 0
NEI4 $827
line 1624
;1622:		char netname[MAX_NETNAME], leader[MAX_NETNAME];
;1623:
;1624:		if ( !arg2[0] ) {
ADDRLP4 4
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $830
line 1625
;1625:			i = ent->client->ps.clientNum;
ADDRLP4 0
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ASGNI4
line 1626
;1626:		}
ADDRGP4 $831
JUMPV
LABELV $830
line 1627
;1627:		else {
line 1629
;1628:			// numeric values are just slot numbers
;1629:			for (i = 0; i < 3; i++) {
ADDRLP4 0
CNSTI4 0
ASGNI4
LABELV $832
line 1630
;1630:				if ( !arg2[i] || arg2[i] < '0' || arg2[i] > '9' )
ADDRLP4 2148
ADDRLP4 0
INDIRI4
ADDRLP4 4
ADDP4
INDIRI1
CVII4 1
ASGNI4
ADDRLP4 2148
INDIRI4
CNSTI4 0
EQI4 $839
ADDRLP4 2148
INDIRI4
CNSTI4 48
LTI4 $839
ADDRLP4 2148
INDIRI4
CNSTI4 57
LEI4 $836
LABELV $839
line 1631
;1631:					break;
ADDRGP4 $834
JUMPV
LABELV $836
line 1632
;1632:			}
LABELV $833
line 1629
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 3
LTI4 $832
LABELV $834
line 1633
;1633:			if ( i >= 3 || !arg2[i]) {
ADDRLP4 0
INDIRI4
CNSTI4 3
GEI4 $842
ADDRLP4 0
INDIRI4
ADDRLP4 4
ADDP4
INDIRI1
CVII4 1
CNSTI4 0
NEI4 $840
LABELV $842
line 1634
;1634:				i = atoi( arg2 );
ADDRLP4 4
ARGP4
ADDRLP4 2152
ADDRGP4 atoi
CALLI4
ASGNI4
ADDRLP4 0
ADDRLP4 2152
INDIRI4
ASGNI4
line 1635
;1635:				if ( i < 0 || i >= level.maxclients ) {
ADDRLP4 0
INDIRI4
CNSTI4 0
LTI4 $846
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $843
LABELV $846
line 1636
;1636:					trap_SendServerCommand( ent-g_entities, va("print \"Bad client slot: %i\n\"", i) );
ADDRGP4 $146
ARGP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRLP4 2160
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2160
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1637
;1637:					return;
ADDRGP4 $800
JUMPV
LABELV $843
line 1640
;1638:				}
;1639:
;1640:				if ( !g_entities[i].inuse ) {
CNSTI4 828
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 g_entities+412
ADDP4
INDIRI4
CNSTI4 0
NEI4 $841
line 1641
;1641:					trap_SendServerCommand( ent-g_entities, va("print \"Client %i is not active\n\"", i) );
ADDRGP4 $149
ARGP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRLP4 2160
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2160
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1642
;1642:					return;
ADDRGP4 $800
JUMPV
line 1644
;1643:				}
;1644:			}
LABELV $840
line 1645
;1645:			else {
line 1646
;1646:				Q_strncpyz(leader, arg2, sizeof(leader));
ADDRLP4 2112
ARGP4
ADDRLP4 4
ARGP4
CNSTI4 36
ARGI4
ADDRGP4 Q_strncpyz
CALLV
pop
line 1647
;1647:				Q_CleanStr(leader);
ADDRLP4 2112
ARGP4
ADDRGP4 Q_CleanStr
CALLP4
pop
line 1648
;1648:				for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $853
JUMPV
LABELV $850
line 1649
;1649:					if ( level.clients[i].pers.connected == CON_DISCONNECTED )
CNSTI4 1756
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1368
ADDP4
INDIRI4
CNSTI4 0
NEI4 $855
line 1650
;1650:						continue;
ADDRGP4 $851
JUMPV
LABELV $855
line 1651
;1651:					if (level.clients[i].sess.sessionTeam != team)
CNSTI4 1756
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1520
ADDP4
INDIRI4
ADDRLP4 1028
INDIRI4
EQI4 $857
line 1652
;1652:						continue;
ADDRGP4 $851
JUMPV
LABELV $857
line 1653
;1653:					Q_strncpyz(netname, level.clients[i].pers.netname, sizeof(netname));
ADDRLP4 2076
ARGP4
CNSTI4 1756
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1416
ADDP4
ARGP4
CNSTI4 36
ARGI4
ADDRGP4 Q_strncpyz
CALLV
pop
line 1654
;1654:					Q_CleanStr(netname);
ADDRLP4 2076
ARGP4
ADDRGP4 Q_CleanStr
CALLP4
pop
line 1655
;1655:					if ( !Q_stricmp(netname, leader) ) {
ADDRLP4 2076
ARGP4
ADDRLP4 2112
ARGP4
ADDRLP4 2152
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 2152
INDIRI4
CNSTI4 0
NEI4 $859
line 1656
;1656:						break;
ADDRGP4 $852
JUMPV
LABELV $859
line 1658
;1657:					}
;1658:				}
LABELV $851
line 1648
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $853
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $850
LABELV $852
line 1659
;1659:				if ( i >= level.maxclients ) {
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $861
line 1660
;1660:					trap_SendServerCommand( ent-g_entities, va("print \"%s is not a valid player on your team.\n\"", arg2) );
ADDRGP4 $864
ARGP4
ADDRLP4 4
ARGP4
ADDRLP4 2152
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 2152
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1661
;1661:					return;
ADDRGP4 $800
JUMPV
LABELV $861
line 1663
;1662:				}
;1663:			}
LABELV $841
line 1664
;1664:		}
LABELV $831
line 1665
;1665:		Com_sprintf(arg2, sizeof(arg2), "%d", i);
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $268
ARGP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRGP4 Com_sprintf
CALLV
pop
line 1666
;1666:	} else {
ADDRGP4 $828
JUMPV
LABELV $827
line 1667
;1667:		trap_SendServerCommand( ent-g_entities, "print \"Invalid vote string.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRGP4 $679
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1668
;1668:		trap_SendServerCommand( ent-g_entities, "print \"Team vote commands are: leader <player>.\n\"" );
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRGP4 $865
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1669
;1669:		return;
ADDRGP4 $800
JUMPV
LABELV $828
line 1672
;1670:	}
;1671:
;1672:	Com_sprintf( level.teamVoteString[cs_offset], sizeof( level.teamVoteString[cs_offset] ), "%s %s", arg1, arg2 );
ADDRLP4 1032
INDIRI4
CNSTI4 10
LSHI4
ADDRGP4 level+2304
ADDP4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 $728
ARGP4
ADDRLP4 1036
ARGP4
ADDRLP4 4
ARGP4
ADDRGP4 Com_sprintf
CALLV
pop
line 1674
;1673:
;1674:	for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $871
JUMPV
LABELV $868
line 1675
;1675:		if ( level.clients[i].pers.connected == CON_DISCONNECTED )
CNSTI4 1756
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1368
ADDP4
INDIRI4
CNSTI4 0
NEI4 $873
line 1676
;1676:			continue;
ADDRGP4 $869
JUMPV
LABELV $873
line 1677
;1677:		if (level.clients[i].sess.sessionTeam == team)
CNSTI4 1756
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1520
ADDP4
INDIRI4
ADDRLP4 1028
INDIRI4
NEI4 $875
line 1678
;1678:			trap_SendServerCommand( i, va("print \"%s called a team vote.\n\"", ent->client->pers.netname ) );
ADDRGP4 $877
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
ADDRLP4 2076
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 0
INDIRI4
ARGI4
ADDRLP4 2076
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
LABELV $875
line 1679
;1679:	}
LABELV $869
line 1674
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $871
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $868
line 1682
;1680:
;1681:	// start the voting, the caller autoamtically votes yes
;1682:	level.teamVoteTime[cs_offset] = level.time;
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4352
ADDP4
ADDRGP4 level+32
INDIRI4
ASGNI4
line 1683
;1683:	level.teamVoteYes[cs_offset] = 1;
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4360
ADDP4
CNSTI4 1
ASGNI4
line 1684
;1684:	level.teamVoteNo[cs_offset] = 0;
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4368
ADDP4
CNSTI4 0
ASGNI4
line 1686
;1685:
;1686:	for ( i = 0 ; i < level.maxclients ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 $885
JUMPV
LABELV $882
line 1687
;1687:		if (level.clients[i].sess.sessionTeam == team)
CNSTI4 1756
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 1520
ADDP4
INDIRI4
ADDRLP4 1028
INDIRI4
NEI4 $887
line 1688
;1688:			level.clients[i].ps.eFlags &= ~EF_TEAMVOTED;
ADDRLP4 2076
CNSTI4 1756
ADDRLP4 0
INDIRI4
MULI4
ADDRGP4 level
INDIRP4
ADDP4
CNSTI4 108
ADDP4
ASGNP4
ADDRLP4 2076
INDIRP4
ADDRLP4 2076
INDIRP4
INDIRI4
CNSTI4 -524289
BANDI4
ASGNI4
LABELV $887
line 1689
;1689:	}
LABELV $883
line 1686
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
LABELV $885
ADDRLP4 0
INDIRI4
ADDRGP4 level+24
INDIRI4
LTI4 $882
line 1690
;1690:	ent->client->ps.eFlags |= EF_TEAMVOTED;
ADDRLP4 2076
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 108
ADDP4
ASGNP4
ADDRLP4 2076
INDIRP4
ADDRLP4 2076
INDIRP4
INDIRI4
CNSTI4 524288
BORI4
ASGNI4
line 1692
;1691:
;1692:	trap_SetConfigstring( CS_TEAMVOTE_TIME + cs_offset, va("%i", level.teamVoteTime[cs_offset] ) );
ADDRGP4 $773
ARGP4
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4352
ADDP4
INDIRI4
ARGI4
ADDRLP4 2080
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 1032
INDIRI4
CNSTI4 12
ADDI4
ARGI4
ADDRLP4 2080
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1693
;1693:	trap_SetConfigstring( CS_TEAMVOTE_STRING + cs_offset, level.teamVoteString[cs_offset] );
ADDRLP4 1032
INDIRI4
CNSTI4 14
ADDI4
ARGI4
ADDRLP4 1032
INDIRI4
CNSTI4 10
LSHI4
ADDRGP4 level+2304
ADDP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1694
;1694:	trap_SetConfigstring( CS_TEAMVOTE_YES + cs_offset, va("%i", level.teamVoteYes[cs_offset] ) );
ADDRGP4 $773
ARGP4
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4360
ADDP4
INDIRI4
ARGI4
ADDRLP4 2088
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 1032
INDIRI4
CNSTI4 16
ADDI4
ARGI4
ADDRLP4 2088
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1695
;1695:	trap_SetConfigstring( CS_TEAMVOTE_NO + cs_offset, va("%i", level.teamVoteNo[cs_offset] ) );
ADDRGP4 $773
ARGP4
ADDRLP4 1032
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4368
ADDP4
INDIRI4
ARGI4
ADDRLP4 2092
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 1032
INDIRI4
CNSTI4 18
ADDI4
ARGI4
ADDRLP4 2092
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1696
;1696:}
LABELV $800
endproc Cmd_CallTeamVote_f 2164 20
export Cmd_TeamVote_f
proc Cmd_TeamVote_f 92 12
line 1703
;1697:
;1698:/*
;1699:==================
;1700:Cmd_TeamVote_f
;1701:==================
;1702:*/
;1703:void Cmd_TeamVote_f( gentity_t *ent ) {
line 1707
;1704:	int			team, cs_offset;
;1705:	char		msg[64];
;1706:
;1707:	team = ent->client->sess.sessionTeam;
ADDRLP4 68
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
ASGNI4
line 1708
;1708:	if ( team == TEAM_RED )
ADDRLP4 68
INDIRI4
CNSTI4 1
NEI4 $894
line 1709
;1709:		cs_offset = 0;
ADDRLP4 64
CNSTI4 0
ASGNI4
ADDRGP4 $895
JUMPV
LABELV $894
line 1710
;1710:	else if ( team == TEAM_BLUE )
ADDRLP4 68
INDIRI4
CNSTI4 2
NEI4 $893
line 1711
;1711:		cs_offset = 1;
ADDRLP4 64
CNSTI4 1
ASGNI4
line 1713
;1712:	else
;1713:		return;
LABELV $897
LABELV $895
line 1715
;1714:
;1715:	if ( !level.teamVoteTime[cs_offset] ) {
ADDRLP4 64
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4352
ADDP4
INDIRI4
CNSTI4 0
NEI4 $898
line 1716
;1716:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOTEAMVOTEINPROG")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $901
ARGP4
ADDRLP4 72
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 72
INDIRP4
ARGP4
ADDRLP4 76
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 76
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1717
;1717:		return;
ADDRGP4 $893
JUMPV
LABELV $898
line 1719
;1718:	}
;1719:	if ( ent->client->ps.eFlags & EF_TEAMVOTED ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 108
ADDP4
INDIRI4
CNSTI4 524288
BANDI4
CNSTI4 0
EQI4 $902
line 1720
;1720:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "TEAMVOTEALREADYCAST")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $904
ARGP4
ADDRLP4 72
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 72
INDIRP4
ARGP4
ADDRLP4 76
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 76
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1721
;1721:		return;
ADDRGP4 $893
JUMPV
LABELV $902
line 1723
;1722:	}
;1723:	if ( ent->client->sess.sessionTeam == TEAM_SPECTATOR ) {
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1520
ADDP4
INDIRI4
CNSTI4 3
NEI4 $905
line 1724
;1724:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOVOTEASSPEC")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $788
ARGP4
ADDRLP4 72
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 72
INDIRP4
ARGP4
ADDRLP4 76
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 76
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1725
;1725:		return;
ADDRGP4 $893
JUMPV
LABELV $905
line 1728
;1726:	}
;1727:
;1728:	trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "PLTEAMVOTECAST")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $907
ARGP4
ADDRLP4 72
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 72
INDIRP4
ARGP4
ADDRLP4 76
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 76
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1730
;1729:
;1730:	ent->client->ps.eFlags |= EF_TEAMVOTED;
ADDRLP4 80
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 108
ADDP4
ASGNP4
ADDRLP4 80
INDIRP4
ADDRLP4 80
INDIRP4
INDIRI4
CNSTI4 524288
BORI4
ASGNI4
line 1732
;1731:
;1732:	trap_Argv( 1, msg, sizeof( msg ) );
CNSTI4 1
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 64
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1734
;1733:
;1734:	if ( msg[0] == 'y' || msg[1] == 'Y' || msg[1] == '1' ) {
ADDRLP4 0
INDIRI1
CVII4 1
CNSTI4 121
EQI4 $913
ADDRLP4 0+1
INDIRI1
CVII4 1
CNSTI4 89
EQI4 $913
ADDRLP4 0+1
INDIRI1
CVII4 1
CNSTI4 49
NEI4 $908
LABELV $913
line 1735
;1735:		level.teamVoteYes[cs_offset]++;
ADDRLP4 84
ADDRLP4 64
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4360
ADDP4
ASGNP4
ADDRLP4 84
INDIRP4
ADDRLP4 84
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1736
;1736:		trap_SetConfigstring( CS_TEAMVOTE_YES + cs_offset, va("%i", level.teamVoteYes[cs_offset] ) );
ADDRGP4 $773
ARGP4
ADDRLP4 64
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4360
ADDP4
INDIRI4
ARGI4
ADDRLP4 88
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 64
INDIRI4
CNSTI4 16
ADDI4
ARGI4
ADDRLP4 88
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1737
;1737:	} else {
ADDRGP4 $909
JUMPV
LABELV $908
line 1738
;1738:		level.teamVoteNo[cs_offset]++;
ADDRLP4 84
ADDRLP4 64
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4368
ADDP4
ASGNP4
ADDRLP4 84
INDIRP4
ADDRLP4 84
INDIRP4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 1739
;1739:		trap_SetConfigstring( CS_TEAMVOTE_NO + cs_offset, va("%i", level.teamVoteNo[cs_offset] ) );	
ADDRGP4 $773
ARGP4
ADDRLP4 64
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 level+4368
ADDP4
INDIRI4
ARGI4
ADDRLP4 88
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 64
INDIRI4
CNSTI4 18
ADDI4
ARGI4
ADDRLP4 88
INDIRP4
ARGP4
ADDRGP4 trap_SetConfigstring
CALLV
pop
line 1740
;1740:	}
LABELV $909
line 1744
;1741:
;1742:	// a majority will be determined in TeamCheckVote, which will also account
;1743:	// for players entering or leaving
;1744:}
LABELV $893
endproc Cmd_TeamVote_f 92 12
export Cmd_SetViewpos_f
proc Cmd_SetViewpos_f 1064 12
line 1752
;1745:
;1746:
;1747:/*
;1748:=================
;1749:Cmd_SetViewpos_f
;1750:=================
;1751:*/
;1752:void Cmd_SetViewpos_f( gentity_t *ent ) {
line 1757
;1753:	vec3_t		origin, angles;
;1754:	char		buffer[MAX_TOKEN_CHARS];
;1755:	int			i;
;1756:
;1757:	if ( !g_cheats.integer ) {
ADDRGP4 g_cheats+12
INDIRI4
CNSTI4 0
NEI4 $919
line 1758
;1758:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NOCHEATS")));
ADDRGP4 $116
ARGP4
ADDRGP4 $117
ARGP4
ADDRLP4 1052
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1052
INDIRP4
ARGP4
ADDRLP4 1056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1759
;1759:		return;
ADDRGP4 $918
JUMPV
LABELV $919
line 1761
;1760:	}
;1761:	if ( trap_Argc() != 5 ) {
ADDRLP4 1052
ADDRGP4 trap_Argc
CALLI4
ASGNI4
ADDRLP4 1052
INDIRI4
CNSTI4 5
EQI4 $922
line 1762
;1762:		trap_SendServerCommand( ent-g_entities, va("print \"usage: setviewpos x y z yaw\n\""));
ADDRGP4 $924
ARGP4
ADDRLP4 1056
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1056
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 1763
;1763:		return;
ADDRGP4 $918
JUMPV
LABELV $922
line 1766
;1764:	}
;1765:
;1766:	VectorClear( angles );
ADDRLP4 1056
CNSTF4 0
ASGNF4
ADDRLP4 1040+8
ADDRLP4 1056
INDIRF4
ASGNF4
ADDRLP4 1040+4
ADDRLP4 1056
INDIRF4
ASGNF4
ADDRLP4 1040
ADDRLP4 1056
INDIRF4
ASGNF4
line 1767
;1767:	for ( i = 0 ; i < 3 ; i++ ) {
ADDRLP4 0
CNSTI4 0
ASGNI4
LABELV $927
line 1768
;1768:		trap_Argv( i + 1, buffer, sizeof( buffer ) );
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1769
;1769:		origin[i] = atof( buffer );
ADDRLP4 4
ARGP4
ADDRLP4 1060
ADDRGP4 atof
CALLF4
ASGNF4
ADDRLP4 0
INDIRI4
CNSTI4 2
LSHI4
ADDRLP4 1028
ADDP4
ADDRLP4 1060
INDIRF4
ASGNF4
line 1770
;1770:	}
LABELV $928
line 1767
ADDRLP4 0
ADDRLP4 0
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
ADDRLP4 0
INDIRI4
CNSTI4 3
LTI4 $927
line 1772
;1771:
;1772:	trap_Argv( 4, buffer, sizeof( buffer ) );
CNSTI4 4
ARGI4
ADDRLP4 4
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 1773
;1773:	angles[YAW] = atof( buffer );
ADDRLP4 4
ARGP4
ADDRLP4 1060
ADDRGP4 atof
CALLF4
ASGNF4
ADDRLP4 1040+4
ADDRLP4 1060
INDIRF4
ASGNF4
line 1775
;1774:
;1775:	TeleportPlayer( ent, origin, angles );
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 1028
ARGP4
ADDRLP4 1040
ARGP4
ADDRGP4 TeleportPlayer
CALLV
pop
line 1776
;1776:}
LABELV $918
endproc Cmd_SetViewpos_f 1064 12
export Cmd_Stats_f
proc Cmd_Stats_f 0 0
line 1785
;1777:
;1778:
;1779:
;1780:/*
;1781:=================
;1782:Cmd_Stats_f
;1783:=================
;1784:*/
;1785:void Cmd_Stats_f( gentity_t *ent ) {
line 1800
;1786:/*
;1787:	int max, n, i;
;1788:
;1789:	max = trap_AAS_PointReachabilityAreaIndex( NULL );
;1790:
;1791:	n = 0;
;1792:	for ( i = 0; i < max; i++ ) {
;1793:		if ( ent->client->areabits[i >> 3] & (1 << (i & 7)) )
;1794:			n++;
;1795:	}
;1796:
;1797:	//trap_SendServerCommand( ent-g_entities, va("print \"visited %d of %d areas\n\"", n, max));
;1798:	trap_SendServerCommand( ent-g_entities, va("print \"%d%% level coverage\n\"", n * 100 / max));
;1799:*/
;1800:}
LABELV $932
endproc Cmd_Stats_f 0 0
export G_ItemUsable
proc G_ItemUsable 1228 28
line 1803
;1801:
;1802:int G_ItemUsable(playerState_t *ps, int forcedUse)
;1803:{
line 1810
;1804:	vec3_t fwd, fwdorg, dest, pos;
;1805:	vec3_t yawonly;
;1806:	vec3_t mins, maxs;
;1807:	vec3_t trtest;
;1808:	trace_t tr;
;1809:
;1810:	if (ps->usingATST)
ADDRFP4 0
INDIRP4
CNSTI4 1304
ADDP4
INDIRI4
CNSTI4 0
EQI4 $934
line 1811
;1811:	{
line 1812
;1812:		return 0;
CNSTI4 0
RETI4
ADDRGP4 $933
JUMPV
LABELV $934
line 1815
;1813:	}
;1814:	
;1815:	if (ps->pm_flags & PMF_USE_ITEM_HELD)
ADDRFP4 0
INDIRP4
CNSTI4 12
ADDP4
INDIRI4
CNSTI4 1024
BANDI4
CNSTI4 0
EQI4 $936
line 1816
;1816:	{ //force to let go first
line 1817
;1817:		return 0;
CNSTI4 0
RETI4
ADDRGP4 $933
JUMPV
LABELV $936
line 1820
;1818:	}
;1819:
;1820:	if (!forcedUse)
ADDRFP4 4
INDIRI4
CNSTI4 0
NEI4 $938
line 1821
;1821:	{
line 1822
;1822:		forcedUse = bg_itemlist[ps->stats[STAT_HOLDABLE_ITEM]].giTag;
ADDRFP4 4
CNSTI4 52
ADDRFP4 0
INDIRP4
CNSTI4 220
ADDP4
INDIRI4
MULI4
ADDRGP4 bg_itemlist+40
ADDP4
INDIRI4
ASGNI4
line 1823
;1823:	}
LABELV $938
line 1825
;1824:
;1825:	switch (forcedUse)
ADDRLP4 1176
ADDRFP4 4
INDIRI4
ASGNI4
ADDRLP4 1176
INDIRI4
CNSTI4 1
LTI4 $941
ADDRLP4 1176
INDIRI4
CNSTI4 6
GTI4 $941
ADDRLP4 1176
INDIRI4
CNSTI4 2
LSHI4
ADDRGP4 $1000-4
ADDP4
INDIRP4
JUMPV
lit
align 4
LABELV $1000
address $948
address $978
address $943
address $941
address $941
address $951
code
line 1826
;1826:	{
LABELV $943
line 1828
;1827:	case HI_MEDPAC:
;1828:		if (ps->stats[STAT_HEALTH] >= ps->stats[STAT_MAX_HEALTH])
ADDRLP4 1180
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1180
INDIRP4
CNSTI4 216
ADDP4
INDIRI4
ADDRLP4 1180
INDIRP4
CNSTI4 248
ADDP4
INDIRI4
LTI4 $944
line 1829
;1829:		{
line 1830
;1830:			return 0;
CNSTI4 0
RETI4
ADDRGP4 $933
JUMPV
LABELV $944
line 1833
;1831:		}
;1832:
;1833:		if (ps->stats[STAT_HEALTH] <= 0)
ADDRFP4 0
INDIRP4
CNSTI4 216
ADDP4
INDIRI4
CNSTI4 0
GTI4 $946
line 1834
;1834:		{
line 1835
;1835:			return 0;
CNSTI4 0
RETI4
ADDRGP4 $933
JUMPV
LABELV $946
line 1838
;1836:		}
;1837:
;1838:		return 1;
CNSTI4 1
RETI4
ADDRGP4 $933
JUMPV
LABELV $948
line 1840
;1839:	case HI_SEEKER:
;1840:		if (ps->eFlags & EF_SEEKERDRONE)
ADDRFP4 0
INDIRP4
CNSTI4 108
ADDP4
INDIRI4
CNSTI4 1048576
BANDI4
CNSTI4 0
EQI4 $949
line 1841
;1841:		{
line 1842
;1842:			G_AddEvent(&g_entities[ps->clientNum], EV_ITEMUSEFAIL, SEEKER_ALREADYDEPLOYED);
CNSTI4 828
ADDRFP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ARGP4
CNSTI4 56
ARGI4
CNSTI4 4
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 1843
;1843:			return 0;
CNSTI4 0
RETI4
ADDRGP4 $933
JUMPV
LABELV $949
line 1846
;1844:		}
;1845:
;1846:		return 1;
CNSTI4 1
RETI4
ADDRGP4 $933
JUMPV
LABELV $951
line 1848
;1847:	case HI_SENTRY_GUN:
;1848:		if (ps->fd.sentryDeployed)
ADDRFP4 0
INDIRP4
CNSTI4 1212
ADDP4
INDIRI4
CNSTI4 0
EQI4 $952
line 1849
;1849:		{
line 1850
;1850:			G_AddEvent(&g_entities[ps->clientNum], EV_ITEMUSEFAIL, SENTRY_ALREADYPLACED);
CNSTI4 828
ADDRFP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ARGP4
CNSTI4 56
ARGI4
CNSTI4 2
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 1851
;1851:			return 0;
CNSTI4 0
RETI4
ADDRGP4 $933
JUMPV
LABELV $952
line 1854
;1852:		}
;1853:
;1854:		yawonly[ROLL] = 0;
ADDRLP4 1140+8
CNSTF4 0
ASGNF4
line 1855
;1855:		yawonly[PITCH] = 0;
ADDRLP4 1140
CNSTF4 0
ASGNF4
line 1856
;1856:		yawonly[YAW] = ps->viewangles[YAW];
ADDRLP4 1140+4
ADDRFP4 0
INDIRP4
CNSTI4 160
ADDP4
INDIRF4
ASGNF4
line 1858
;1857:
;1858:		VectorSet( mins, -8, -8, 0 );
ADDRLP4 1184
CNSTF4 3238002688
ASGNF4
ADDRLP4 1092
ADDRLP4 1184
INDIRF4
ASGNF4
ADDRLP4 1092+4
ADDRLP4 1184
INDIRF4
ASGNF4
ADDRLP4 1092+8
CNSTF4 0
ASGNF4
line 1859
;1859:		VectorSet( maxs, 8, 8, 24 );
ADDRLP4 1188
CNSTF4 1090519040
ASGNF4
ADDRLP4 1104
ADDRLP4 1188
INDIRF4
ASGNF4
ADDRLP4 1104+4
ADDRLP4 1188
INDIRF4
ASGNF4
ADDRLP4 1104+8
CNSTF4 1103101952
ASGNF4
line 1861
;1860:
;1861:		AngleVectors(yawonly, fwd, NULL, NULL);
ADDRLP4 1140
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1192
CNSTP4 0
ASGNP4
ADDRLP4 1192
INDIRP4
ARGP4
ADDRLP4 1192
INDIRP4
ARGP4
ADDRGP4 AngleVectors
CALLV
pop
line 1863
;1862:
;1863:		fwdorg[0] = ps->origin[0] + fwd[0]*64;
ADDRLP4 1116
ADDRFP4 0
INDIRP4
CNSTI4 20
ADDP4
INDIRF4
CNSTF4 1115684864
ADDRLP4 0
INDIRF4
MULF4
ADDF4
ASGNF4
line 1864
;1864:		fwdorg[1] = ps->origin[1] + fwd[1]*64;
ADDRLP4 1116+4
ADDRFP4 0
INDIRP4
CNSTI4 24
ADDP4
INDIRF4
CNSTF4 1115684864
ADDRLP4 0+4
INDIRF4
MULF4
ADDF4
ASGNF4
line 1865
;1865:		fwdorg[2] = ps->origin[2] + fwd[2]*64;
ADDRLP4 1116+8
ADDRFP4 0
INDIRP4
CNSTI4 28
ADDP4
INDIRF4
CNSTF4 1115684864
ADDRLP4 0+8
INDIRF4
MULF4
ADDF4
ASGNF4
line 1867
;1866:
;1867:		trtest[0] = fwdorg[0] + fwd[0]*16;
ADDRLP4 1152
ADDRLP4 1116
INDIRF4
CNSTF4 1098907648
ADDRLP4 0
INDIRF4
MULF4
ADDF4
ASGNF4
line 1868
;1868:		trtest[1] = fwdorg[1] + fwd[1]*16;
ADDRLP4 1152+4
ADDRLP4 1116+4
INDIRF4
CNSTF4 1098907648
ADDRLP4 0+4
INDIRF4
MULF4
ADDF4
ASGNF4
line 1869
;1869:		trtest[2] = fwdorg[2] + fwd[2]*16;
ADDRLP4 1152+8
ADDRLP4 1116+8
INDIRF4
CNSTF4 1098907648
ADDRLP4 0+8
INDIRF4
MULF4
ADDF4
ASGNF4
line 1871
;1870:
;1871:		trap_Trace(&tr, ps->origin, mins, maxs, trtest, ps->clientNum, MASK_PLAYERSOLID);
ADDRLP4 12
ARGP4
ADDRLP4 1196
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1196
INDIRP4
CNSTI4 20
ADDP4
ARGP4
ADDRLP4 1092
ARGP4
ADDRLP4 1104
ARGP4
ADDRLP4 1152
ARGP4
ADDRLP4 1196
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
CNSTI4 273
ARGI4
ADDRGP4 trap_Trace
CALLV
pop
line 1873
;1872:
;1873:		if ((tr.fraction != 1 && tr.entityNum != ps->clientNum) || tr.startsolid || tr.allsolid)
ADDRLP4 12+8
INDIRF4
CNSTF4 1065353216
EQF4 $976
ADDRLP4 12+52
INDIRI4
ADDRFP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
NEI4 $977
LABELV $976
ADDRLP4 1200
CNSTI4 0
ASGNI4
ADDRLP4 12+4
INDIRI4
ADDRLP4 1200
INDIRI4
NEI4 $977
ADDRLP4 12
INDIRI4
ADDRLP4 1200
INDIRI4
EQI4 $970
LABELV $977
line 1874
;1874:		{
line 1875
;1875:			G_AddEvent(&g_entities[ps->clientNum], EV_ITEMUSEFAIL, SENTRY_NOROOM);
CNSTI4 828
ADDRFP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ARGP4
CNSTI4 56
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 1876
;1876:			return 0;
CNSTI4 0
RETI4
ADDRGP4 $933
JUMPV
LABELV $970
line 1879
;1877:		}
;1878:
;1879:		return 1;
CNSTI4 1
RETI4
ADDRGP4 $933
JUMPV
LABELV $978
line 1881
;1880:	case HI_SHIELD:
;1881:		mins[0] = -8;
ADDRLP4 1092
CNSTF4 3238002688
ASGNF4
line 1882
;1882:		mins[1] = -8;
ADDRLP4 1092+4
CNSTF4 3238002688
ASGNF4
line 1883
;1883:		mins[2] = 0;
ADDRLP4 1092+8
CNSTF4 0
ASGNF4
line 1885
;1884:
;1885:		maxs[0] = 8;
ADDRLP4 1104
CNSTF4 1090519040
ASGNF4
line 1886
;1886:		maxs[1] = 8;
ADDRLP4 1104+4
CNSTF4 1090519040
ASGNF4
line 1887
;1887:		maxs[2] = 8;
ADDRLP4 1104+8
CNSTF4 1090519040
ASGNF4
line 1889
;1888:
;1889:		AngleVectors (ps->viewangles, fwd, NULL, NULL);
ADDRFP4 0
INDIRP4
CNSTI4 156
ADDP4
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1204
CNSTP4 0
ASGNP4
ADDRLP4 1204
INDIRP4
ARGP4
ADDRLP4 1204
INDIRP4
ARGP4
ADDRGP4 AngleVectors
CALLV
pop
line 1890
;1890:		fwd[2] = 0;
ADDRLP4 0+8
CNSTF4 0
ASGNF4
line 1891
;1891:		VectorMA(ps->origin, 64, fwd, dest);
ADDRLP4 1208
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1212
CNSTF4 1115684864
ASGNF4
ADDRLP4 1128
ADDRLP4 1208
INDIRP4
CNSTI4 20
ADDP4
INDIRF4
ADDRLP4 1212
INDIRF4
ADDRLP4 0
INDIRF4
MULF4
ADDF4
ASGNF4
ADDRLP4 1128+4
ADDRLP4 1208
INDIRP4
CNSTI4 24
ADDP4
INDIRF4
ADDRLP4 1212
INDIRF4
ADDRLP4 0+4
INDIRF4
MULF4
ADDF4
ASGNF4
ADDRLP4 1128+8
ADDRFP4 0
INDIRP4
CNSTI4 28
ADDP4
INDIRF4
CNSTF4 1115684864
ADDRLP4 0+8
INDIRF4
MULF4
ADDF4
ASGNF4
line 1892
;1892:		trap_Trace(&tr, ps->origin, mins, maxs, dest, ps->clientNum, MASK_SHOT );
ADDRLP4 12
ARGP4
ADDRLP4 1216
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1216
INDIRP4
CNSTI4 20
ADDP4
ARGP4
ADDRLP4 1092
ARGP4
ADDRLP4 1104
ARGP4
ADDRLP4 1128
ARGP4
ADDRLP4 1216
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
CNSTI4 769
ARGI4
ADDRGP4 trap_Trace
CALLV
pop
line 1893
;1893:		if (tr.fraction > 0.9 && !tr.startsolid && !tr.allsolid)
ADDRLP4 12+8
INDIRF4
CNSTF4 1063675494
LEF4 $988
ADDRLP4 1220
CNSTI4 0
ASGNI4
ADDRLP4 12+4
INDIRI4
ADDRLP4 1220
INDIRI4
NEI4 $988
ADDRLP4 12
INDIRI4
ADDRLP4 1220
INDIRI4
NEI4 $988
line 1894
;1894:		{
line 1895
;1895:			VectorCopy(tr.endpos, pos);
ADDRLP4 1164
ADDRLP4 12+12
INDIRB
ASGNB 12
line 1896
;1896:			VectorSet( dest, pos[0], pos[1], pos[2] - 4096 );
ADDRLP4 1128
ADDRLP4 1164
INDIRF4
ASGNF4
ADDRLP4 1128+4
ADDRLP4 1164+4
INDIRF4
ASGNF4
ADDRLP4 1128+8
ADDRLP4 1164+8
INDIRF4
CNSTF4 1166016512
SUBF4
ASGNF4
line 1897
;1897:			trap_Trace( &tr, pos, mins, maxs, dest, ps->clientNum, MASK_SOLID );
ADDRLP4 12
ARGP4
ADDRLP4 1164
ARGP4
ADDRLP4 1092
ARGP4
ADDRLP4 1104
ARGP4
ADDRLP4 1128
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 trap_Trace
CALLV
pop
line 1898
;1898:			if ( !tr.startsolid && !tr.allsolid )
ADDRLP4 1224
CNSTI4 0
ASGNI4
ADDRLP4 12+4
INDIRI4
ADDRLP4 1224
INDIRI4
NEI4 $997
ADDRLP4 12
INDIRI4
ADDRLP4 1224
INDIRI4
NEI4 $997
line 1899
;1899:			{
line 1900
;1900:				return 1;
CNSTI4 1
RETI4
ADDRGP4 $933
JUMPV
LABELV $997
line 1902
;1901:			}
;1902:		}
LABELV $988
line 1903
;1903:		G_AddEvent(&g_entities[ps->clientNum], EV_ITEMUSEFAIL, SHIELD_NOROOM);
CNSTI4 828
ADDRFP4 0
INDIRP4
CNSTI4 144
ADDP4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ARGP4
CNSTI4 56
ARGI4
CNSTI4 3
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 1904
;1904:		return 0;
CNSTI4 0
RETI4
ADDRGP4 $933
JUMPV
LABELV $941
line 1906
;1905:	default:
;1906:		return 1;
CNSTI4 1
RETI4
LABELV $933
endproc G_ItemUsable 1228 28
export Cmd_ToggleSaber_f
proc Cmd_ToggleSaber_f 12 12
line 1914
;1907:	}
;1908:}
;1909:
;1910:extern int saberOffSound;
;1911:extern int saberOnSound;
;1912:
;1913:void Cmd_ToggleSaber_f(gentity_t *ent)
;1914:{
line 1915
;1915:	if (!saberOffSound || !saberOnSound)
ADDRLP4 0
CNSTI4 0
ASGNI4
ADDRGP4 saberOffSound
INDIRI4
ADDRLP4 0
INDIRI4
EQI4 $1005
ADDRGP4 saberOnSound
INDIRI4
ADDRLP4 0
INDIRI4
NEI4 $1003
LABELV $1005
line 1916
;1916:	{
line 1917
;1917:		saberOffSound = G_SoundIndex("sound/weapons/saber/saberoffquick.wav");
ADDRGP4 $1006
ARGP4
ADDRLP4 4
ADDRGP4 G_SoundIndex
CALLI4
ASGNI4
ADDRGP4 saberOffSound
ADDRLP4 4
INDIRI4
ASGNI4
line 1918
;1918:		saberOnSound = G_SoundIndex("sound/weapons/saber/saberon.wav");
ADDRGP4 $1007
ARGP4
ADDRLP4 8
ADDRGP4 G_SoundIndex
CALLI4
ASGNI4
ADDRGP4 saberOnSound
ADDRLP4 8
INDIRI4
ASGNI4
line 1919
;1919:	}
LABELV $1003
line 1921
;1920:
;1921:	if (ent->client->ps.saberInFlight)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 504
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1008
line 1922
;1922:	{
line 1923
;1923:		return;
ADDRGP4 $1002
JUMPV
LABELV $1008
line 1926
;1924:	}
;1925:
;1926:	if (ent->client->ps.forceHandExtend != HANDEXTEND_NONE)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1236
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1010
line 1927
;1927:	{
line 1928
;1928:		return;
ADDRGP4 $1002
JUMPV
LABELV $1010
line 1931
;1929:	}
;1930:
;1931:	if (ent->client->ps.weapon != WP_SABER)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 2
EQI4 $1012
line 1932
;1932:	{
line 1933
;1933:		return;
ADDRGP4 $1002
JUMPV
LABELV $1012
line 1941
;1934:	}
;1935:
;1936://	if (ent->client->ps.duelInProgress && !ent->client->ps.saberHolstered)
;1937://	{
;1938://		return;
;1939://	}
;1940:
;1941:	if (ent->client->ps.duelTime >= level.time)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1288
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LTI4 $1014
line 1942
;1942:	{
line 1943
;1943:		return;
ADDRGP4 $1002
JUMPV
LABELV $1014
line 1946
;1944:	}
;1945:
;1946:	if (ent->client && ent->client->ps.weaponTime < 1)
ADDRLP4 4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 4
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $1017
ADDRLP4 4
INDIRP4
CNSTI4 44
ADDP4
INDIRI4
CNSTI4 1
GEI4 $1017
line 1947
;1947:	{
line 1948
;1948:		if (ent->client->ps.saberHolstered)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1300
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1019
line 1949
;1949:		{
line 1950
;1950:			ent->client->ps.saberHolstered = qfalse;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1300
ADDP4
CNSTI4 0
ASGNI4
line 1951
;1951:			G_Sound(ent, CHAN_AUTO, saberOnSound);
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 saberOnSound
INDIRI4
ARGI4
ADDRGP4 G_Sound
CALLV
pop
line 1952
;1952:		}
ADDRGP4 $1020
JUMPV
LABELV $1019
line 1954
;1953:		else
;1954:		{
line 1955
;1955:			ent->client->ps.saberHolstered = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1300
ADDP4
CNSTI4 1
ASGNI4
line 1956
;1956:			G_Sound(ent, CHAN_AUTO, saberOffSound);
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 saberOffSound
INDIRI4
ARGI4
ADDRGP4 G_Sound
CALLV
pop
line 1959
;1957:
;1958:			//prevent anything from being done for 400ms after holster
;1959:			ent->client->ps.weaponTime = 400;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 44
ADDP4
CNSTI4 400
ASGNI4
line 1960
;1960:		}
LABELV $1020
line 1961
;1961:	}
LABELV $1017
line 1962
;1962:}
LABELV $1002
endproc Cmd_ToggleSaber_f 12 12
export Cmd_SaberAttackCycle_f
proc Cmd_SaberAttackCycle_f 12 0
line 1965
;1963:
;1964:void Cmd_SaberAttackCycle_f(gentity_t *ent)
;1965:{
line 1966
;1966:	int selectLevel = 0;
ADDRLP4 0
CNSTI4 0
ASGNI4
line 1968
;1967:
;1968:	if ( !ent || !ent->client )
ADDRLP4 4
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 8
CNSTU4 0
ASGNU4
ADDRLP4 4
INDIRP4
CVPU4 4
ADDRLP4 8
INDIRU4
EQU4 $1024
ADDRLP4 4
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
ADDRLP4 8
INDIRU4
NEU4 $1022
LABELV $1024
line 1969
;1969:	{
line 1970
;1970:		return;
ADDRGP4 $1021
JUMPV
LABELV $1022
line 1994
;1971:	}
;1972:	/*
;1973:	if (ent->client->ps.weaponTime > 0)
;1974:	{ //no switching attack level when busy
;1975:		return;
;1976:	}
;1977:	*/
;1978:
;1979:	//if (ent->client->saberCycleQueue)	//Boot comment
;1980:	//{ //resume off of the queue if we haven't gotten a chance to update it yet
;1981:	//	selectLevel = ent->client->saberCycleQueue;
;1982:	//}
;1983:	//else
;1984:	//{
;1985:	//	selectLevel = ent->client->ps.fd.saberAnimLevel;
;1986:	//}
;1987:
;1988:	//selectLevel++;
;1989:	//if ( selectLevel > ent->client->ps.fd.forcePowerLevel[FP_SABERATTACK] )
;1990:	//{
;1991:	//	selectLevel = FORCE_LEVEL_2;//FORCE_LEVEL_1; Boot - disable blue stance.
;1992:	//}
;1993:
;1994:	selectLevel = FORCE_LEVEL_2; //Boot - yellow only for now
ADDRLP4 0
CNSTI4 2
ASGNI4
line 2011
;1995:/*
;1996:#ifndef FINAL_BUILD
;1997:	switch ( selectLevel )
;1998:	{
;1999:	case FORCE_LEVEL_1:
;2000:		trap_SendServerCommand( ent-g_entities, va("print \"Lightsaber Combat Style: %sfast\n\"", S_COLOR_BLUE) );
;2001:		break;
;2002:	case FORCE_LEVEL_2:
;2003:		trap_SendServerCommand( ent-g_entities, va("print \"Lightsaber Combat Style: %smedium\n\"", S_COLOR_YELLOW) );
;2004:		break;
;2005:	case FORCE_LEVEL_3:
;2006:		trap_SendServerCommand( ent-g_entities, va("print \"Lightsaber Combat Style: %sstrong\n\"", S_COLOR_RED) );
;2007:		break;
;2008:	}
;2009:#endif
;2010:*/
;2011:	if (ent->client->ps.weaponTime <= 0)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 44
ADDP4
INDIRI4
CNSTI4 0
GTI4 $1025
line 2012
;2012:	{ //not busy, set it now
line 2013
;2013:		ent->client->ps.fd.saberAnimLevel = selectLevel;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1216
ADDP4
ADDRLP4 0
INDIRI4
ASGNI4
line 2014
;2014:	}
ADDRGP4 $1026
JUMPV
LABELV $1025
line 2016
;2015:	else
;2016:	{ //can't set it now or we might cause unexpected chaining, so queue it
line 2017
;2017:		ent->client->saberCycleQueue = selectLevel;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1568
ADDP4
ADDRLP4 0
INDIRI4
ASGNI4
line 2018
;2018:	}
LABELV $1026
line 2019
;2019:}
LABELV $1021
endproc Cmd_SaberAttackCycle_f 12 0
export G_OtherPlayersDueling
proc G_OtherPlayersDueling 24 0
line 2022
;2020:
;2021:qboolean G_OtherPlayersDueling(void)
;2022:{
line 2023
;2023:	int i = 0;
ADDRLP4 4
CNSTI4 0
ASGNI4
ADDRGP4 $1029
JUMPV
LABELV $1028
line 2027
;2024:	gentity_t *ent;
;2025:
;2026:	while (i < MAX_CLIENTS)
;2027:	{
line 2028
;2028:		ent = &g_entities[i];
ADDRLP4 0
CNSTI4 828
ADDRLP4 4
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 2030
;2029:
;2030:		if (ent && ent->inuse && ent->client && ent->client->ps.duelInProgress)
ADDRLP4 12
CNSTU4 0
ASGNU4
ADDRLP4 0
INDIRP4
CVPU4 4
ADDRLP4 12
INDIRU4
EQU4 $1031
ADDRLP4 16
CNSTI4 0
ASGNI4
ADDRLP4 0
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
ADDRLP4 16
INDIRI4
EQI4 $1031
ADDRLP4 20
ADDRLP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 20
INDIRP4
CVPU4 4
ADDRLP4 12
INDIRU4
EQU4 $1031
ADDRLP4 20
INDIRP4
CNSTI4 1292
ADDP4
INDIRI4
ADDRLP4 16
INDIRI4
EQI4 $1031
line 2031
;2031:		{
line 2032
;2032:			return qtrue;
CNSTI4 1
RETI4
ADDRGP4 $1027
JUMPV
LABELV $1031
line 2034
;2033:		}
;2034:		i++;
ADDRLP4 4
ADDRLP4 4
INDIRI4
CNSTI4 1
ADDI4
ASGNI4
line 2035
;2035:	}
LABELV $1029
line 2026
ADDRLP4 4
INDIRI4
CNSTI4 32
LTI4 $1028
line 2037
;2036:
;2037:	return qfalse;
CNSTI4 0
RETI4
LABELV $1027
endproc G_OtherPlayersDueling 24 0
export Cmd_EngageDuel_f
proc Cmd_EngageDuel_f 1172 28
line 2041
;2038:}
;2039:
;2040:void Cmd_EngageDuel_f(gentity_t *ent)
;2041:{
line 2045
;2042:	trace_t tr;
;2043:	vec3_t forward, fwdOrg;
;2044:
;2045:	if (!g_privateDuel.integer)
ADDRGP4 g_privateDuel+12
INDIRI4
CNSTI4 0
NEI4 $1034
line 2046
;2046:	{
line 2047
;2047:		return;
ADDRGP4 $1033
JUMPV
LABELV $1034
line 2050
;2048:	}
;2049:
;2050:	if (g_gametype.integer == GT_TOURNAMENT)
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 3
NEI4 $1037
line 2051
;2051:	{ //rather pointless in this mode..
line 2052
;2052:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NODUEL_GAMETYPE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1040
ARGP4
ADDRLP4 1104
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1104
INDIRP4
ARGP4
ADDRLP4 1108
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1108
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2053
;2053:		return;
ADDRGP4 $1033
JUMPV
LABELV $1037
line 2056
;2054:	}
;2055:
;2056:	if (g_gametype.integer >= GT_TEAM)
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
LTI4 $1041
line 2057
;2057:	{ //no private dueling in team modes
line 2058
;2058:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "NODUEL_GAMETYPE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1040
ARGP4
ADDRLP4 1104
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1104
INDIRP4
ARGP4
ADDRLP4 1108
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1108
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2059
;2059:		return;
ADDRGP4 $1033
JUMPV
LABELV $1041
line 2062
;2060:	}
;2061:
;2062:	if (ent->client->ps.duelTime >= level.time)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1288
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LTI4 $1044
line 2063
;2063:	{
line 2064
;2064:		return;
ADDRGP4 $1033
JUMPV
LABELV $1044
line 2067
;2065:	}
;2066:
;2067:	if (ent->client->ps.weapon != WP_SABER)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 2
EQI4 $1047
line 2068
;2068:	{
line 2069
;2069:		return;
ADDRGP4 $1033
JUMPV
LABELV $1047
line 2080
;2070:	}
;2071:
;2072:	/*
;2073:	if (!ent->client->ps.saberHolstered)
;2074:	{ //must have saber holstered at the start of the duel
;2075:		return;
;2076:	}
;2077:	*/
;2078:	//NOTE: No longer doing this..
;2079:
;2080:	if (ent->client->ps.saberInFlight)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 504
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1049
line 2081
;2081:	{
line 2082
;2082:		return;
ADDRGP4 $1033
JUMPV
LABELV $1049
line 2085
;2083:	}
;2084:
;2085:	if (ent->client->ps.duelInProgress)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1292
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1051
line 2086
;2086:	{
line 2087
;2087:		return;
ADDRGP4 $1033
JUMPV
LABELV $1051
line 2091
;2088:	}
;2089:
;2090:	//New: Don't let a player duel if he just did and hasn't waited 10 seconds yet (note: If someone challenges him, his duel timer will reset so he can accept)
;2091:	if (ent->client->ps.fd.privateDuelTime > level.time)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1228
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LEI4 $1053
line 2092
;2092:	{
line 2093
;2093:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "CANTDUEL_JUSTDID")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1056
ARGP4
ADDRLP4 1104
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1104
INDIRP4
ARGP4
ADDRLP4 1108
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1108
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2094
;2094:		return;
ADDRGP4 $1033
JUMPV
LABELV $1053
line 2097
;2095:	}
;2096:
;2097:	if (G_OtherPlayersDueling())
ADDRLP4 1104
ADDRGP4 G_OtherPlayersDueling
CALLI4
ASGNI4
ADDRLP4 1104
INDIRI4
CNSTI4 0
EQI4 $1057
line 2098
;2098:	{
line 2099
;2099:		trap_SendServerCommand( ent-g_entities, va("print \"%s\n\"", G_GetStripEdString("SVINGAME", "CANTDUEL_BUSY")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1059
ARGP4
ADDRLP4 1108
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $115
ARGP4
ADDRLP4 1108
INDIRP4
ARGP4
ADDRLP4 1112
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1112
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2100
;2100:		return;
ADDRGP4 $1033
JUMPV
LABELV $1057
line 2103
;2101:	}
;2102:
;2103:	AngleVectors( ent->client->ps.viewangles, forward, NULL, NULL );
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 156
ADDP4
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1108
CNSTP4 0
ASGNP4
ADDRLP4 1108
INDIRP4
ARGP4
ADDRLP4 1108
INDIRP4
ARGP4
ADDRGP4 AngleVectors
CALLV
pop
line 2105
;2104:
;2105:	fwdOrg[0] = ent->client->ps.origin[0] + forward[0]*256;
ADDRLP4 12
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 20
ADDP4
INDIRF4
CNSTF4 1132462080
ADDRLP4 0
INDIRF4
MULF4
ADDF4
ASGNF4
line 2106
;2106:	fwdOrg[1] = ent->client->ps.origin[1] + forward[1]*256;
ADDRLP4 12+4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 24
ADDP4
INDIRF4
CNSTF4 1132462080
ADDRLP4 0+4
INDIRF4
MULF4
ADDF4
ASGNF4
line 2107
;2107:	fwdOrg[2] = (ent->client->ps.origin[2]+ent->client->ps.viewheight) + forward[2]*256;
ADDRLP4 1112
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 12+8
ADDRLP4 1112
INDIRP4
CNSTI4 28
ADDP4
INDIRF4
ADDRLP4 1112
INDIRP4
CNSTI4 168
ADDP4
INDIRI4
CVIF4 4
ADDF4
CNSTF4 1132462080
ADDRLP4 0+8
INDIRF4
MULF4
ADDF4
ASGNF4
line 2109
;2108:
;2109:	trap_Trace(&tr, ent->client->ps.origin, NULL, NULL, fwdOrg, ent->s.number, MASK_PLAYERSOLID);
ADDRLP4 24
ARGP4
ADDRLP4 1116
ADDRFP4 0
INDIRP4
ASGNP4
ADDRLP4 1116
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 20
ADDP4
ARGP4
ADDRLP4 1120
CNSTP4 0
ASGNP4
ADDRLP4 1120
INDIRP4
ARGP4
ADDRLP4 1120
INDIRP4
ARGP4
ADDRLP4 12
ARGP4
ADDRLP4 1116
INDIRP4
INDIRI4
ARGI4
CNSTI4 273
ARGI4
ADDRGP4 trap_Trace
CALLV
pop
line 2111
;2110:
;2111:	if (tr.fraction != 1 && tr.entityNum < MAX_CLIENTS)
ADDRLP4 24+8
INDIRF4
CNSTF4 1065353216
EQF4 $1064
ADDRLP4 24+52
INDIRI4
CNSTI4 32
GEI4 $1064
line 2112
;2112:	{
line 2113
;2113:		gentity_t *challenged = &g_entities[tr.entityNum];
ADDRLP4 1124
CNSTI4 828
ADDRLP4 24+52
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 2115
;2114:
;2115:		if (!challenged || !challenged->client || !challenged->inuse ||
ADDRLP4 1132
CNSTU4 0
ASGNU4
ADDRLP4 1124
INDIRP4
CVPU4 4
ADDRLP4 1132
INDIRU4
EQU4 $1077
ADDRLP4 1136
ADDRLP4 1124
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 1136
INDIRP4
CVPU4 4
ADDRLP4 1132
INDIRU4
EQU4 $1077
ADDRLP4 1140
CNSTI4 0
ASGNI4
ADDRLP4 1124
INDIRP4
CNSTI4 412
ADDP4
INDIRI4
ADDRLP4 1140
INDIRI4
EQI4 $1077
ADDRLP4 1144
CNSTI4 1
ASGNI4
ADDRLP4 1124
INDIRP4
CNSTI4 676
ADDP4
INDIRI4
ADDRLP4 1144
INDIRI4
LTI4 $1077
ADDRLP4 1136
INDIRP4
CNSTI4 216
ADDP4
INDIRI4
ADDRLP4 1144
INDIRI4
LTI4 $1077
ADDRLP4 1136
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 2
NEI4 $1077
ADDRLP4 1136
INDIRP4
CNSTI4 1292
ADDP4
INDIRI4
ADDRLP4 1140
INDIRI4
NEI4 $1077
ADDRLP4 1136
INDIRP4
CNSTI4 504
ADDP4
INDIRI4
ADDRLP4 1140
INDIRI4
EQI4 $1069
LABELV $1077
line 2119
;2116:			challenged->health < 1 || challenged->client->ps.stats[STAT_HEALTH] < 1 ||
;2117:			challenged->client->ps.weapon != WP_SABER || challenged->client->ps.duelInProgress ||
;2118:			challenged->client->ps.saberInFlight)
;2119:		{
line 2120
;2120:			return;
ADDRGP4 $1033
JUMPV
LABELV $1069
line 2123
;2121:		}
;2122:
;2123:		if (g_gametype.integer >= GT_TEAM && OnSameTeam(ent, challenged))
ADDRGP4 g_gametype+12
INDIRI4
CNSTI4 5
LTI4 $1078
ADDRFP4 0
INDIRP4
ARGP4
ADDRLP4 1124
INDIRP4
ARGP4
ADDRLP4 1148
ADDRGP4 OnSameTeam
CALLI4
ASGNI4
ADDRLP4 1148
INDIRI4
CNSTI4 0
EQI4 $1078
line 2124
;2124:		{
line 2125
;2125:			return;
ADDRGP4 $1033
JUMPV
LABELV $1078
line 2128
;2126:		}
;2127:
;2128:		if (challenged->client->ps.duelIndex == ent->s.number && challenged->client->ps.duelTime >= level.time)
ADDRLP4 1152
ADDRLP4 1124
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 1152
INDIRP4
CNSTI4 1284
ADDP4
INDIRI4
ADDRFP4 0
INDIRP4
INDIRI4
NEI4 $1081
ADDRLP4 1152
INDIRP4
CNSTI4 1288
ADDP4
INDIRI4
ADDRGP4 level+32
INDIRI4
LTI4 $1081
line 2129
;2129:		{
line 2130
;2130:			trap_SendServerCommand( /*challenged-g_entities*/-1, va("print \"%s %s %s!\n\"", challenged->client->pers.netname, G_GetStripEdString("SVINGAME", "PLDUELACCEPT"), ent->client->pers.netname) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1085
ARGP4
ADDRLP4 1156
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $1084
ARGP4
ADDRLP4 1160
CNSTI4 408
ASGNI4
ADDRLP4 1164
CNSTI4 1416
ASGNI4
ADDRLP4 1124
INDIRP4
ADDRLP4 1160
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1164
INDIRI4
ADDP4
ARGP4
ADDRLP4 1156
INDIRP4
ARGP4
ADDRFP4 0
INDIRP4
ADDRLP4 1160
INDIRI4
ADDP4
INDIRP4
ADDRLP4 1164
INDIRI4
ADDP4
ARGP4
ADDRLP4 1168
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 1168
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2132
;2131:
;2132:			ent->client->ps.duelInProgress = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1292
ADDP4
CNSTI4 1
ASGNI4
line 2133
;2133:			challenged->client->ps.duelInProgress = qtrue;
ADDRLP4 1124
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1292
ADDP4
CNSTI4 1
ASGNI4
line 2135
;2134:
;2135:			ent->client->ps.duelTime = level.time + 2000;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1288
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 2000
ADDI4
ASGNI4
line 2136
;2136:			challenged->client->ps.duelTime = level.time + 2000;
ADDRLP4 1124
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1288
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 2000
ADDI4
ASGNI4
line 2138
;2137:
;2138:			G_AddEvent(ent, EV_PRIVATE_DUEL, 1);
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 13
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 2139
;2139:			G_AddEvent(challenged, EV_PRIVATE_DUEL, 1);
ADDRLP4 1124
INDIRP4
ARGP4
CNSTI4 13
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 G_AddEvent
CALLV
pop
line 2143
;2140:
;2141:			//Holster their sabers now, until the duel starts (then they'll get auto-turned on to look cool)
;2142:
;2143:			if (!ent->client->ps.saberHolstered)
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1300
ADDP4
INDIRI4
CNSTI4 0
NEI4 $1088
line 2144
;2144:			{
line 2145
;2145:				G_Sound(ent, CHAN_AUTO, saberOffSound);
ADDRFP4 0
INDIRP4
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 saberOffSound
INDIRI4
ARGI4
ADDRGP4 G_Sound
CALLV
pop
line 2146
;2146:				ent->client->ps.weaponTime = 400;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 44
ADDP4
CNSTI4 400
ASGNI4
line 2147
;2147:				ent->client->ps.saberHolstered = qtrue;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1300
ADDP4
CNSTI4 1
ASGNI4
line 2148
;2148:			}
LABELV $1088
line 2149
;2149:			if (!challenged->client->ps.saberHolstered)
ADDRLP4 1124
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1300
ADDP4
INDIRI4
CNSTI4 0
NEI4 $1082
line 2150
;2150:			{
line 2151
;2151:				G_Sound(challenged, CHAN_AUTO, saberOffSound);
ADDRLP4 1124
INDIRP4
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 saberOffSound
INDIRI4
ARGI4
ADDRGP4 G_Sound
CALLV
pop
line 2152
;2152:				challenged->client->ps.weaponTime = 400;
ADDRLP4 1124
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 44
ADDP4
CNSTI4 400
ASGNI4
line 2153
;2153:				challenged->client->ps.saberHolstered = qtrue;
ADDRLP4 1124
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1300
ADDP4
CNSTI4 1
ASGNI4
line 2154
;2154:			}
line 2155
;2155:		}
ADDRGP4 $1082
JUMPV
LABELV $1081
line 2157
;2156:		else
;2157:		{
line 2159
;2158:			//Print the message that a player has been challenged in private, only announce the actual duel initiation in private
;2159:			trap_SendServerCommand( challenged-g_entities, va("cp \"%s %s\n\"", ent->client->pers.netname, G_GetStripEdString("SVINGAME", "PLDUELCHALLENGE")) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1093
ARGP4
ADDRLP4 1156
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $1092
ARGP4
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
ADDRLP4 1156
INDIRP4
ARGP4
ADDRLP4 1160
ADDRGP4 va
CALLP4
ASGNP4
ADDRLP4 1124
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1160
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2160
;2160:			trap_SendServerCommand( ent-g_entities, va("cp \"%s %s\n\"", G_GetStripEdString("SVINGAME", "PLDUELCHALLENGED"), challenged->client->pers.netname) );
ADDRGP4 $116
ARGP4
ADDRGP4 $1094
ARGP4
ADDRLP4 1164
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $1092
ARGP4
ADDRLP4 1164
INDIRP4
ARGP4
ADDRLP4 1124
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1416
ADDP4
ARGP4
ADDRLP4 1168
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRP4
CVPU4 4
ADDRGP4 g_entities
CVPU4 4
SUBU4
CVUI4 4
CNSTI4 828
DIVI4
ARGI4
ADDRLP4 1168
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2161
;2161:		}
LABELV $1082
line 2163
;2162:
;2163:		challenged->client->ps.fd.privateDuelTime = 0; //reset the timer in case this player just got out of a duel. He should still be able to accept the challenge.
ADDRLP4 1124
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1228
ADDP4
CNSTI4 0
ASGNI4
line 2165
;2164:
;2165:		ent->client->ps.forceHandExtend = HANDEXTEND_DUELCHALLENGE;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1236
ADDP4
CNSTI4 9
ASGNI4
line 2166
;2166:		ent->client->ps.forceHandExtendTime = level.time + 1000;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1240
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 1000
ADDI4
ASGNI4
line 2168
;2167:
;2168:		ent->client->ps.duelIndex = challenged->s.number;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1284
ADDP4
ADDRLP4 1124
INDIRP4
INDIRI4
ASGNI4
line 2169
;2169:		ent->client->ps.duelTime = level.time + 5000;
ADDRFP4 0
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1288
ADDP4
ADDRGP4 level+32
INDIRI4
CNSTI4 5000
ADDI4
ASGNI4
line 2170
;2170:	}
LABELV $1064
line 2171
;2171:}
LABELV $1033
endproc Cmd_EngageDuel_f 1172 28
export ClientCommand
proc ClientCommand 1212 20
line 2178
;2172:
;2173:/*
;2174:=================
;2175:ClientCommand
;2176:=================
;2177:*/
;2178:void ClientCommand( int clientNum ) {
line 2182
;2179:	gentity_t *ent;
;2180:	char	cmd[MAX_TOKEN_CHARS];
;2181:
;2182:	ent = g_entities + clientNum;
ADDRLP4 1024
CNSTI4 828
ADDRFP4 0
INDIRI4
MULI4
ADDRGP4 g_entities
ADDP4
ASGNP4
line 2183
;2183:	if ( !ent->client ) {
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CVPU4 4
CNSTU4 0
NEU4 $1098
line 2184
;2184:		return;		// not fully in game yet
ADDRGP4 $1097
JUMPV
LABELV $1098
line 2188
;2185:	}
;2186:
;2187:
;2188:	trap_Argv( 0, cmd, sizeof( cmd ) );
CNSTI4 0
ARGI4
ADDRLP4 0
ARGP4
CNSTI4 1024
ARGI4
ADDRGP4 trap_Argv
CALLV
pop
line 2191
;2189:
;2190:	//rww - redirect bot commands
;2191:	if (strstr(cmd, "bot_") && AcceptBotCommand(cmd, ent))
ADDRLP4 0
ARGP4
ADDRGP4 $1102
ARGP4
ADDRLP4 1028
ADDRGP4 strstr
CALLP4
ASGNP4
ADDRLP4 1028
INDIRP4
CVPU4 4
CNSTU4 0
EQU4 $1100
ADDRLP4 0
ARGP4
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1032
ADDRGP4 AcceptBotCommand
CALLI4
ASGNI4
ADDRLP4 1032
INDIRI4
CNSTI4 0
EQI4 $1100
line 2192
;2192:	{
line 2193
;2193:		return;
ADDRGP4 $1097
JUMPV
LABELV $1100
line 2197
;2194:	}
;2195:	//end rww
;2196:
;2197:	if (Q_stricmp (cmd, "say") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1105
ARGP4
ADDRLP4 1036
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1036
INDIRI4
CNSTI4 0
NEI4 $1103
line 2198
;2198:		Cmd_Say_f (ent, SAY_ALL, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1040
CNSTI4 0
ASGNI4
ADDRLP4 1040
INDIRI4
ARGI4
ADDRLP4 1040
INDIRI4
ARGI4
ADDRGP4 Cmd_Say_f
CALLV
pop
line 2199
;2199:		return;
ADDRGP4 $1097
JUMPV
LABELV $1103
line 2201
;2200:	}
;2201:	if (Q_stricmp (cmd, "say_team") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1108
ARGP4
ADDRLP4 1040
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1040
INDIRI4
CNSTI4 0
NEI4 $1106
line 2202
;2202:		Cmd_Say_f (ent, SAY_TEAM, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 1
ARGI4
CNSTI4 0
ARGI4
ADDRGP4 Cmd_Say_f
CALLV
pop
line 2203
;2203:		return;
ADDRGP4 $1097
JUMPV
LABELV $1106
line 2205
;2204:	}
;2205:	if (Q_stricmp (cmd, "tell") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1111
ARGP4
ADDRLP4 1044
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1044
INDIRI4
CNSTI4 0
NEI4 $1109
line 2206
;2206:		Cmd_Tell_f ( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Tell_f
CALLV
pop
line 2207
;2207:		return;
ADDRGP4 $1097
JUMPV
LABELV $1109
line 2209
;2208:	}
;2209:	if (Q_stricmp (cmd, "vsay") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1114
ARGP4
ADDRLP4 1048
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1048
INDIRI4
CNSTI4 0
NEI4 $1112
line 2210
;2210:		Cmd_Voice_f (ent, SAY_ALL, qfalse, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1052
CNSTI4 0
ASGNI4
ADDRLP4 1052
INDIRI4
ARGI4
ADDRLP4 1052
INDIRI4
ARGI4
ADDRLP4 1052
INDIRI4
ARGI4
ADDRGP4 Cmd_Voice_f
CALLV
pop
line 2211
;2211:		return;
ADDRGP4 $1097
JUMPV
LABELV $1112
line 2213
;2212:	}
;2213:	if (Q_stricmp (cmd, "vsay_team") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1117
ARGP4
ADDRLP4 1052
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1052
INDIRI4
CNSTI4 0
NEI4 $1115
line 2214
;2214:		Cmd_Voice_f (ent, SAY_TEAM, qfalse, qfalse);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRLP4 1056
CNSTI4 0
ASGNI4
ADDRLP4 1056
INDIRI4
ARGI4
ADDRLP4 1056
INDIRI4
ARGI4
ADDRGP4 Cmd_Voice_f
CALLV
pop
line 2215
;2215:		return;
ADDRGP4 $1097
JUMPV
LABELV $1115
line 2217
;2216:	}
;2217:	if (Q_stricmp (cmd, "vtell") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $556
ARGP4
ADDRLP4 1056
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1056
INDIRI4
CNSTI4 0
NEI4 $1118
line 2218
;2218:		Cmd_VoiceTell_f ( ent, qfalse );
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 0
ARGI4
ADDRGP4 Cmd_VoiceTell_f
CALLV
pop
line 2219
;2219:		return;
ADDRGP4 $1097
JUMPV
LABELV $1118
line 2221
;2220:	}
;2221:	if (Q_stricmp (cmd, "vosay") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1122
ARGP4
ADDRLP4 1060
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1060
INDIRI4
CNSTI4 0
NEI4 $1120
line 2222
;2222:		Cmd_Voice_f (ent, SAY_ALL, qfalse, qtrue);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1064
CNSTI4 0
ASGNI4
ADDRLP4 1064
INDIRI4
ARGI4
ADDRLP4 1064
INDIRI4
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 Cmd_Voice_f
CALLV
pop
line 2223
;2223:		return;
ADDRGP4 $1097
JUMPV
LABELV $1120
line 2225
;2224:	}
;2225:	if (Q_stricmp (cmd, "vosay_team") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1125
ARGP4
ADDRLP4 1064
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1064
INDIRI4
CNSTI4 0
NEI4 $1123
line 2226
;2226:		Cmd_Voice_f (ent, SAY_TEAM, qfalse, qtrue);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1068
CNSTI4 1
ASGNI4
ADDRLP4 1068
INDIRI4
ARGI4
CNSTI4 0
ARGI4
ADDRLP4 1068
INDIRI4
ARGI4
ADDRGP4 Cmd_Voice_f
CALLV
pop
line 2227
;2227:		return;
ADDRGP4 $1097
JUMPV
LABELV $1123
line 2229
;2228:	}
;2229:	if (Q_stricmp (cmd, "votell") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1128
ARGP4
ADDRLP4 1068
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1068
INDIRI4
CNSTI4 0
NEI4 $1126
line 2230
;2230:		Cmd_VoiceTell_f ( ent, qtrue );
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRGP4 Cmd_VoiceTell_f
CALLV
pop
line 2231
;2231:		return;
ADDRGP4 $1097
JUMPV
LABELV $1126
line 2233
;2232:	}
;2233:	if (Q_stricmp (cmd, "vtaunt") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $1131
ARGP4
ADDRLP4 1072
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1072
INDIRI4
CNSTI4 0
NEI4 $1129
line 2234
;2234:		Cmd_VoiceTaunt_f ( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_VoiceTaunt_f
CALLV
pop
line 2235
;2235:		return;
ADDRGP4 $1097
JUMPV
LABELV $1129
line 2237
;2236:	}
;2237:	if (Q_stricmp (cmd, "score") == 0) {
ADDRLP4 0
ARGP4
ADDRGP4 $321
ARGP4
ADDRLP4 1076
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1076
INDIRI4
CNSTI4 0
NEI4 $1132
line 2238
;2238:		Cmd_Score_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Score_f
CALLV
pop
line 2239
;2239:		return;
ADDRGP4 $1097
JUMPV
LABELV $1132
line 2243
;2240:	}
;2241:
;2242:	// ignore all other commands when at intermission
;2243:	if (level.intermissiontime)
ADDRGP4 level+9008
INDIRI4
CNSTI4 0
EQI4 $1134
line 2244
;2244:	{
line 2245
;2245:		qboolean giveError = qfalse;
ADDRLP4 1080
CNSTI4 0
ASGNI4
line 2247
;2246:
;2247:		if (!Q_stricmp(cmd, "give"))
ADDRLP4 0
ARGP4
ADDRGP4 $1139
ARGP4
ADDRLP4 1084
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1084
INDIRI4
CNSTI4 0
NEI4 $1137
line 2248
;2248:		{
line 2249
;2249:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2250
;2250:		}
ADDRGP4 $1138
JUMPV
LABELV $1137
line 2251
;2251:		else if (!Q_stricmp(cmd, "god"))
ADDRLP4 0
ARGP4
ADDRGP4 $1142
ARGP4
ADDRLP4 1088
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1088
INDIRI4
CNSTI4 0
NEI4 $1140
line 2252
;2252:		{
line 2253
;2253:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2254
;2254:		}
ADDRGP4 $1141
JUMPV
LABELV $1140
line 2255
;2255:		else if (!Q_stricmp(cmd, "notarget"))
ADDRLP4 0
ARGP4
ADDRGP4 $1145
ARGP4
ADDRLP4 1092
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1092
INDIRI4
CNSTI4 0
NEI4 $1143
line 2256
;2256:		{
line 2257
;2257:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2258
;2258:		}
ADDRGP4 $1144
JUMPV
LABELV $1143
line 2259
;2259:		else if (!Q_stricmp(cmd, "noclip"))
ADDRLP4 0
ARGP4
ADDRGP4 $1148
ARGP4
ADDRLP4 1096
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1096
INDIRI4
CNSTI4 0
NEI4 $1146
line 2260
;2260:		{
line 2261
;2261:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2262
;2262:		}
ADDRGP4 $1147
JUMPV
LABELV $1146
line 2263
;2263:		else if (!Q_stricmp(cmd, "kill"))
ADDRLP4 0
ARGP4
ADDRGP4 $1151
ARGP4
ADDRLP4 1100
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1100
INDIRI4
CNSTI4 0
NEI4 $1149
line 2264
;2264:		{
line 2265
;2265:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2266
;2266:		}
ADDRGP4 $1150
JUMPV
LABELV $1149
line 2267
;2267:		else if (!Q_stricmp(cmd, "teamtask"))
ADDRLP4 0
ARGP4
ADDRGP4 $267
ARGP4
ADDRLP4 1104
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1104
INDIRI4
CNSTI4 0
NEI4 $1152
line 2268
;2268:		{
line 2269
;2269:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2270
;2270:		}
ADDRGP4 $1153
JUMPV
LABELV $1152
line 2271
;2271:		else if (!Q_stricmp(cmd, "levelshot"))
ADDRLP4 0
ARGP4
ADDRGP4 $1156
ARGP4
ADDRLP4 1108
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1108
INDIRI4
CNSTI4 0
NEI4 $1154
line 2272
;2272:		{
line 2273
;2273:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2274
;2274:		}
ADDRGP4 $1155
JUMPV
LABELV $1154
line 2275
;2275:		else if (!Q_stricmp(cmd, "follow"))
ADDRLP4 0
ARGP4
ADDRGP4 $1159
ARGP4
ADDRLP4 1112
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1112
INDIRI4
CNSTI4 0
NEI4 $1157
line 2276
;2276:		{
line 2277
;2277:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2278
;2278:		}
ADDRGP4 $1158
JUMPV
LABELV $1157
line 2279
;2279:		else if (!Q_stricmp(cmd, "follownext"))
ADDRLP4 0
ARGP4
ADDRGP4 $1162
ARGP4
ADDRLP4 1116
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1116
INDIRI4
CNSTI4 0
NEI4 $1160
line 2280
;2280:		{
line 2281
;2281:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2282
;2282:		}
ADDRGP4 $1161
JUMPV
LABELV $1160
line 2283
;2283:		else if (!Q_stricmp(cmd, "followprev"))
ADDRLP4 0
ARGP4
ADDRGP4 $1165
ARGP4
ADDRLP4 1120
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1120
INDIRI4
CNSTI4 0
NEI4 $1163
line 2284
;2284:		{
line 2285
;2285:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2286
;2286:		}
ADDRGP4 $1164
JUMPV
LABELV $1163
line 2287
;2287:		else if (!Q_stricmp(cmd, "team"))
ADDRLP4 0
ARGP4
ADDRGP4 $1168
ARGP4
ADDRLP4 1124
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1124
INDIRI4
CNSTI4 0
NEI4 $1166
line 2288
;2288:		{
line 2289
;2289:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2290
;2290:		}
ADDRGP4 $1167
JUMPV
LABELV $1166
line 2291
;2291:		else if (!Q_stricmp(cmd, "forcechanged"))
ADDRLP4 0
ARGP4
ADDRGP4 $1171
ARGP4
ADDRLP4 1128
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1128
INDIRI4
CNSTI4 0
NEI4 $1169
line 2292
;2292:		{ //special case: still update force change
line 2293
;2293:			Cmd_ForceChanged_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_ForceChanged_f
CALLV
pop
line 2294
;2294:			return;
ADDRGP4 $1097
JUMPV
LABELV $1169
line 2296
;2295:		}
;2296:		else if (!Q_stricmp(cmd, "where"))
ADDRLP4 0
ARGP4
ADDRGP4 $1174
ARGP4
ADDRLP4 1132
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1132
INDIRI4
CNSTI4 0
NEI4 $1172
line 2297
;2297:		{
line 2298
;2298:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2299
;2299:		}
ADDRGP4 $1173
JUMPV
LABELV $1172
line 2300
;2300:		else if (!Q_stricmp(cmd, "callvote"))
ADDRLP4 0
ARGP4
ADDRGP4 $1177
ARGP4
ADDRLP4 1136
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1136
INDIRI4
CNSTI4 0
NEI4 $1175
line 2301
;2301:		{
line 2302
;2302:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2303
;2303:		}
ADDRGP4 $1176
JUMPV
LABELV $1175
line 2304
;2304:		else if (!Q_stricmp(cmd, "vote"))
ADDRLP4 0
ARGP4
ADDRGP4 $1180
ARGP4
ADDRLP4 1140
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1140
INDIRI4
CNSTI4 0
NEI4 $1178
line 2305
;2305:		{
line 2306
;2306:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2307
;2307:		}
ADDRGP4 $1179
JUMPV
LABELV $1178
line 2308
;2308:		else if (!Q_stricmp(cmd, "callteamvote"))
ADDRLP4 0
ARGP4
ADDRGP4 $1183
ARGP4
ADDRLP4 1144
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1144
INDIRI4
CNSTI4 0
NEI4 $1181
line 2309
;2309:		{
line 2310
;2310:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2311
;2311:		}
ADDRGP4 $1182
JUMPV
LABELV $1181
line 2312
;2312:		else if (!Q_stricmp(cmd, "teamvote"))
ADDRLP4 0
ARGP4
ADDRGP4 $1186
ARGP4
ADDRLP4 1148
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1148
INDIRI4
CNSTI4 0
NEI4 $1184
line 2313
;2313:		{
line 2314
;2314:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2315
;2315:		}
ADDRGP4 $1185
JUMPV
LABELV $1184
line 2316
;2316:		else if (!Q_stricmp(cmd, "gc"))
ADDRLP4 0
ARGP4
ADDRGP4 $1189
ARGP4
ADDRLP4 1152
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1152
INDIRI4
CNSTI4 0
NEI4 $1187
line 2317
;2317:		{
line 2318
;2318:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2319
;2319:		}
ADDRGP4 $1188
JUMPV
LABELV $1187
line 2320
;2320:		else if (!Q_stricmp(cmd, "setviewpos"))
ADDRLP4 0
ARGP4
ADDRGP4 $1192
ARGP4
ADDRLP4 1156
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1156
INDIRI4
CNSTI4 0
NEI4 $1190
line 2321
;2321:		{
line 2322
;2322:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2323
;2323:		}
ADDRGP4 $1191
JUMPV
LABELV $1190
line 2324
;2324:		else if (!Q_stricmp(cmd, "stats"))
ADDRLP4 0
ARGP4
ADDRGP4 $1195
ARGP4
ADDRLP4 1160
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1160
INDIRI4
CNSTI4 0
NEI4 $1193
line 2325
;2325:		{
line 2326
;2326:			giveError = qtrue;
ADDRLP4 1080
CNSTI4 1
ASGNI4
line 2327
;2327:		}
LABELV $1193
LABELV $1191
LABELV $1188
LABELV $1185
LABELV $1182
LABELV $1179
LABELV $1176
LABELV $1173
LABELV $1167
LABELV $1164
LABELV $1161
LABELV $1158
LABELV $1155
LABELV $1153
LABELV $1150
LABELV $1147
LABELV $1144
LABELV $1141
LABELV $1138
line 2329
;2328:
;2329:		if (giveError)
ADDRLP4 1080
INDIRI4
CNSTI4 0
EQI4 $1196
line 2330
;2330:		{
line 2331
;2331:			trap_SendServerCommand( clientNum, va("print \"You cannot perform this task (%s) during the intermission.\n\"", cmd ) );
ADDRGP4 $1198
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1164
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 1164
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2332
;2332:		}
ADDRGP4 $1097
JUMPV
LABELV $1196
line 2334
;2333:		else
;2334:		{
line 2335
;2335:			Cmd_Say_f (ent, qfalse, qtrue);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 0
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 Cmd_Say_f
CALLV
pop
line 2336
;2336:		}
line 2337
;2337:		return;
ADDRGP4 $1097
JUMPV
LABELV $1134
line 2340
;2338:	}
;2339:
;2340:	if (Q_stricmp (cmd, "give") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1139
ARGP4
ADDRLP4 1080
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1080
INDIRI4
CNSTI4 0
NEI4 $1199
line 2341
;2341:	{
line 2342
;2342:		Cmd_Give_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Give_f
CALLV
pop
line 2343
;2343:	}
ADDRGP4 $1200
JUMPV
LABELV $1199
line 2344
;2344:	else if (Q_stricmp (cmd, "god") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1142
ARGP4
ADDRLP4 1084
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1084
INDIRI4
CNSTI4 0
NEI4 $1201
line 2345
;2345:		Cmd_God_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_God_f
CALLV
pop
ADDRGP4 $1202
JUMPV
LABELV $1201
line 2346
;2346:	else if (Q_stricmp (cmd, "notarget") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1145
ARGP4
ADDRLP4 1088
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1088
INDIRI4
CNSTI4 0
NEI4 $1203
line 2347
;2347:		Cmd_Notarget_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Notarget_f
CALLV
pop
ADDRGP4 $1204
JUMPV
LABELV $1203
line 2348
;2348:	else if (Q_stricmp (cmd, "noclip") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1148
ARGP4
ADDRLP4 1092
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1092
INDIRI4
CNSTI4 0
NEI4 $1205
line 2349
;2349:		Cmd_Noclip_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Noclip_f
CALLV
pop
ADDRGP4 $1206
JUMPV
LABELV $1205
line 2350
;2350:	else if (Q_stricmp (cmd, "kill") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1151
ARGP4
ADDRLP4 1096
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1096
INDIRI4
CNSTI4 0
NEI4 $1207
line 2351
;2351:		Cmd_Kill_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Kill_f
CALLV
pop
ADDRGP4 $1208
JUMPV
LABELV $1207
line 2352
;2352:	else if (Q_stricmp (cmd, "teamtask") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $267
ARGP4
ADDRLP4 1100
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1100
INDIRI4
CNSTI4 0
NEI4 $1209
line 2353
;2353:		Cmd_TeamTask_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_TeamTask_f
CALLV
pop
ADDRGP4 $1210
JUMPV
LABELV $1209
line 2354
;2354:	else if (Q_stricmp (cmd, "levelshot") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1156
ARGP4
ADDRLP4 1104
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1104
INDIRI4
CNSTI4 0
NEI4 $1211
line 2355
;2355:		Cmd_LevelShot_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_LevelShot_f
CALLV
pop
ADDRGP4 $1212
JUMPV
LABELV $1211
line 2356
;2356:	else if (Q_stricmp (cmd, "follow") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1159
ARGP4
ADDRLP4 1108
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1108
INDIRI4
CNSTI4 0
NEI4 $1213
line 2357
;2357:		Cmd_Follow_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Follow_f
CALLV
pop
ADDRGP4 $1214
JUMPV
LABELV $1213
line 2358
;2358:	else if (Q_stricmp (cmd, "follownext") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1162
ARGP4
ADDRLP4 1112
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1112
INDIRI4
CNSTI4 0
NEI4 $1215
line 2359
;2359:		Cmd_FollowCycle_f (ent, 1);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 1
ARGI4
ADDRGP4 Cmd_FollowCycle_f
CALLV
pop
ADDRGP4 $1216
JUMPV
LABELV $1215
line 2360
;2360:	else if (Q_stricmp (cmd, "followprev") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1165
ARGP4
ADDRLP4 1116
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1116
INDIRI4
CNSTI4 0
NEI4 $1217
line 2361
;2361:		Cmd_FollowCycle_f (ent, -1);
ADDRLP4 1024
INDIRP4
ARGP4
CNSTI4 -1
ARGI4
ADDRGP4 Cmd_FollowCycle_f
CALLV
pop
ADDRGP4 $1218
JUMPV
LABELV $1217
line 2362
;2362:	else if (Q_stricmp (cmd, "team") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1168
ARGP4
ADDRLP4 1120
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1120
INDIRI4
CNSTI4 0
NEI4 $1219
line 2363
;2363:		Cmd_Team_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Team_f
CALLV
pop
ADDRGP4 $1220
JUMPV
LABELV $1219
line 2364
;2364:	else if (Q_stricmp (cmd, "forcechanged") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1171
ARGP4
ADDRLP4 1124
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1124
INDIRI4
CNSTI4 0
NEI4 $1221
line 2365
;2365:		Cmd_ForceChanged_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_ForceChanged_f
CALLV
pop
ADDRGP4 $1222
JUMPV
LABELV $1221
line 2366
;2366:	else if (Q_stricmp (cmd, "where") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1174
ARGP4
ADDRLP4 1128
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1128
INDIRI4
CNSTI4 0
NEI4 $1223
line 2367
;2367:		Cmd_Where_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Where_f
CALLV
pop
ADDRGP4 $1224
JUMPV
LABELV $1223
line 2368
;2368:	else if (Q_stricmp (cmd, "callvote") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1177
ARGP4
ADDRLP4 1132
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1132
INDIRI4
CNSTI4 0
NEI4 $1225
line 2369
;2369:		Cmd_CallVote_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_CallVote_f
CALLV
pop
ADDRGP4 $1226
JUMPV
LABELV $1225
line 2370
;2370:	else if (Q_stricmp (cmd, "vote") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1180
ARGP4
ADDRLP4 1136
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1136
INDIRI4
CNSTI4 0
NEI4 $1227
line 2371
;2371:		Cmd_Vote_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Vote_f
CALLV
pop
ADDRGP4 $1228
JUMPV
LABELV $1227
line 2372
;2372:	else if (Q_stricmp (cmd, "callteamvote") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1183
ARGP4
ADDRLP4 1140
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1140
INDIRI4
CNSTI4 0
NEI4 $1229
line 2373
;2373:		Cmd_CallTeamVote_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_CallTeamVote_f
CALLV
pop
ADDRGP4 $1230
JUMPV
LABELV $1229
line 2374
;2374:	else if (Q_stricmp (cmd, "teamvote") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1186
ARGP4
ADDRLP4 1144
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1144
INDIRI4
CNSTI4 0
NEI4 $1231
line 2375
;2375:		Cmd_TeamVote_f (ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_TeamVote_f
CALLV
pop
ADDRGP4 $1232
JUMPV
LABELV $1231
line 2376
;2376:	else if (Q_stricmp (cmd, "gc") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1189
ARGP4
ADDRLP4 1148
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1148
INDIRI4
CNSTI4 0
NEI4 $1233
line 2377
;2377:		Cmd_GameCommand_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_GameCommand_f
CALLV
pop
ADDRGP4 $1234
JUMPV
LABELV $1233
line 2378
;2378:	else if (Q_stricmp (cmd, "setviewpos") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1192
ARGP4
ADDRLP4 1152
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1152
INDIRI4
CNSTI4 0
NEI4 $1235
line 2379
;2379:		Cmd_SetViewpos_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_SetViewpos_f
CALLV
pop
ADDRGP4 $1236
JUMPV
LABELV $1235
line 2380
;2380:	else if (Q_stricmp (cmd, "stats") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1195
ARGP4
ADDRLP4 1156
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1156
INDIRI4
CNSTI4 0
NEI4 $1237
line 2381
;2381:		Cmd_Stats_f( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Stats_f
CALLV
pop
ADDRGP4 $1238
JUMPV
LABELV $1237
line 2382
;2382:	else if (Q_stricmp(cmd, "#mm") == 0 && CheatsOk( ent ))
ADDRLP4 0
ARGP4
ADDRGP4 $1241
ARGP4
ADDRLP4 1160
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1160
INDIRI4
CNSTI4 0
NEI4 $1239
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1164
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 1164
INDIRI4
CNSTI4 0
EQI4 $1239
line 2383
;2383:	{
line 2384
;2384:		G_PlayerBecomeATST(ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 G_PlayerBecomeATST
CALLI4
pop
line 2385
;2385:	}
ADDRGP4 $1240
JUMPV
LABELV $1239
line 2386
;2386:	else if (Q_stricmp(cmd, "thedestroyer") == 0 && CheatsOk( ent ) && ent && ent->client && ent->client->ps.saberHolstered && ent->client->ps.weapon == WP_SABER)
ADDRLP4 0
ARGP4
ADDRGP4 $1244
ARGP4
ADDRLP4 1168
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1168
INDIRI4
CNSTI4 0
NEI4 $1242
ADDRLP4 1024
INDIRP4
ARGP4
ADDRLP4 1172
ADDRGP4 CheatsOk
CALLI4
ASGNI4
ADDRLP4 1176
CNSTI4 0
ASGNI4
ADDRLP4 1172
INDIRI4
ADDRLP4 1176
INDIRI4
EQI4 $1242
ADDRLP4 1184
CNSTU4 0
ASGNU4
ADDRLP4 1024
INDIRP4
CVPU4 4
ADDRLP4 1184
INDIRU4
EQU4 $1242
ADDRLP4 1188
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
ASGNP4
ADDRLP4 1188
INDIRP4
CVPU4 4
ADDRLP4 1184
INDIRU4
EQU4 $1242
ADDRLP4 1188
INDIRP4
CNSTI4 1300
ADDP4
INDIRI4
ADDRLP4 1176
INDIRI4
EQI4 $1242
ADDRLP4 1188
INDIRP4
CNSTI4 148
ADDP4
INDIRI4
CNSTI4 2
NEI4 $1242
line 2387
;2387:	{
line 2388
;2388:		Cmd_ToggleSaber_f(ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_ToggleSaber_f
CALLV
pop
line 2390
;2389:
;2390:		if (!ent->client->ps.saberHolstered)
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1300
ADDP4
INDIRI4
CNSTI4 0
NEI4 $1243
line 2391
;2391:		{
line 2392
;2392:			if (ent->client->ps.dualBlade)
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1352
ADDP4
INDIRI4
CNSTI4 0
EQI4 $1247
line 2393
;2393:			{
line 2394
;2394:				ent->client->ps.dualBlade = qfalse;
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1352
ADDP4
CNSTI4 0
ASGNI4
line 2396
;2395:				//ent->client->ps.fd.saberAnimLevel = FORCE_LEVEL_1;
;2396:			}
ADDRGP4 $1243
JUMPV
LABELV $1247
line 2398
;2397:			else
;2398:			{
line 2399
;2399:				ent->client->ps.dualBlade = qtrue;
ADDRLP4 1024
INDIRP4
CNSTI4 408
ADDP4
INDIRP4
CNSTI4 1352
ADDP4
CNSTI4 1
ASGNI4
line 2401
;2400:
;2401:				trap_SendServerCommand( -1, va("print \"%sTHE DESTROYER COMETH\n\"", S_COLOR_RED) );
ADDRGP4 $1249
ARGP4
ADDRGP4 $1250
ARGP4
ADDRLP4 1192
ADDRGP4 va
CALLP4
ASGNP4
CNSTI4 -1
ARGI4
ADDRLP4 1192
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2402
;2402:				G_ScreenShake(vec3_origin, NULL, 10.0f, 800, qtrue);
ADDRGP4 vec3_origin
ARGP4
CNSTP4 0
ARGP4
CNSTF4 1092616192
ARGF4
CNSTI4 800
ARGI4
CNSTI4 1
ARGI4
ADDRGP4 G_ScreenShake
CALLP4
pop
line 2404
;2403:				//ent->client->ps.fd.saberAnimLevel = FORCE_LEVEL_3;
;2404:			}
line 2405
;2405:		}
line 2406
;2406:	}
ADDRGP4 $1243
JUMPV
LABELV $1242
line 2407
;2407:	else if (Q_stricmp (cmd, "info") == 0)	//Boot
ADDRLP4 0
ARGP4
ADDRGP4 $1253
ARGP4
ADDRLP4 1192
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1192
INDIRI4
CNSTI4 0
NEI4 $1251
line 2408
;2408:		Cmd_Info_Boot( ent );
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_Info_Boot
CALLV
pop
ADDRGP4 $1252
JUMPV
LABELV $1251
line 2409
;2409:	else if (Q_stricmp(cmd, "switchBlockingMethod") == 0)	//Boot
ADDRLP4 0
ARGP4
ADDRGP4 $1256
ARGP4
ADDRLP4 1196
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1196
INDIRI4
CNSTI4 0
NEI4 $1254
line 2410
;2410:		Cmd_ToggleMouseMovementBlock_Boot(ent);
ADDRLP4 1024
INDIRP4
ARGP4
ADDRGP4 Cmd_ToggleMouseMovementBlock_Boot
CALLI4
pop
ADDRGP4 $1255
JUMPV
LABELV $1254
line 2441
;2411:#ifdef _DEBUG
;2412:	else if (Q_stricmp(cmd, "gotocoord") == 0 && CheatsOk( ent ))
;2413:	{
;2414:		char		x[64], y[64], z[64];
;2415:		vec3_t		xyz;
;2416:
;2417:		if (trap_Argc() < 3)
;2418:		{
;2419:			return;
;2420:		}
;2421:
;2422:		trap_Argv( 1, x, sizeof( x ) );
;2423:		trap_Argv( 2, y, sizeof( y ) );
;2424:		trap_Argv( 3, z, sizeof( z ) );
;2425:
;2426:		xyz[0] = atof(x);
;2427:		xyz[1] = atof(y);
;2428:		xyz[2] = atof(z);
;2429:
;2430:		VectorCopy(xyz, ent->client->ps.origin);
;2431:	}
;2432:#endif
;2433:
;2434:	/*
;2435:	else if (Q_stricmp (cmd, "offwithmyhead") == 0)
;2436:	{
;2437:		DismembermentTest(ent);
;2438:	}
;2439:	*/
;2440:	else
;2441:	{
line 2442
;2442:		if (Q_stricmp(cmd, "addbot") == 0)
ADDRLP4 0
ARGP4
ADDRGP4 $1259
ARGP4
ADDRLP4 1200
ADDRGP4 Q_stricmp
CALLI4
ASGNI4
ADDRLP4 1200
INDIRI4
CNSTI4 0
NEI4 $1257
line 2443
;2443:		{ //because addbot isn't a recognized command unless you're the server, but it is in the menus regardless
line 2445
;2444://			trap_SendServerCommand( clientNum, va("print \"You can only add bots as the server.\n\"" ) );
;2445:			trap_SendServerCommand( clientNum, va("print \"%s.\n\"", G_GetStripEdString("SVINGAME", "ONLY_ADD_BOTS_AS_SERVER")));
ADDRGP4 $116
ARGP4
ADDRGP4 $1261
ARGP4
ADDRLP4 1204
ADDRGP4 G_GetStripEdString
CALLP4
ASGNP4
ADDRGP4 $1260
ARGP4
ADDRLP4 1204
INDIRP4
ARGP4
ADDRLP4 1208
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 1208
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2446
;2446:		}
ADDRGP4 $1258
JUMPV
LABELV $1257
line 2448
;2447:		else
;2448:		{
line 2449
;2449:			trap_SendServerCommand( clientNum, va("print \"unknown cmd %s\n\"", cmd ) );
ADDRGP4 $1262
ARGP4
ADDRLP4 0
ARGP4
ADDRLP4 1204
ADDRGP4 va
CALLP4
ASGNP4
ADDRFP4 0
INDIRI4
ARGI4
ADDRLP4 1204
INDIRP4
ARGP4
ADDRGP4 trap_SendServerCommand
CALLV
pop
line 2450
;2450:		}
LABELV $1258
line 2451
;2451:	}
LABELV $1255
LABELV $1252
LABELV $1243
LABELV $1240
LABELV $1238
LABELV $1236
LABELV $1234
LABELV $1232
LABELV $1230
LABELV $1228
LABELV $1226
LABELV $1224
LABELV $1222
LABELV $1220
LABELV $1218
LABELV $1216
LABELV $1214
LABELV $1212
LABELV $1210
LABELV $1208
LABELV $1206
LABELV $1204
LABELV $1202
LABELV $1200
line 2452
;2452:}
LABELV $1097
endproc ClientCommand 1212 20
import saberOnSound
import saberOffSound
import BG_CycleForce
import BG_CycleInven
import AcceptBotCommand
import trap_ROFF_Purge_Ent
import trap_ROFF_Play
import trap_ROFF_Cache
import trap_ROFF_UpdateEntities
import trap_ROFF_Clean
import trap_SP_GetStringTextString
import trap_SP_Register
import trap_SP_RegisterServer
import trap_SnapVector
import trap_GeneticParentsAndChildSelection
import trap_BotResetWeaponState
import trap_BotFreeWeaponState
import trap_BotAllocWeaponState
import trap_BotLoadWeaponWeights
import trap_BotGetWeaponInfo
import trap_BotChooseBestFightWeapon
import trap_BotAddAvoidSpot
import trap_BotInitMoveState
import trap_BotFreeMoveState
import trap_BotAllocMoveState
import trap_BotPredictVisiblePosition
import trap_BotMovementViewTarget
import trap_BotReachabilityArea
import trap_BotResetLastAvoidReach
import trap_BotResetAvoidReach
import trap_BotMoveInDirection
import trap_BotMoveToGoal
import trap_BotResetMoveState
import trap_BotFreeGoalState
import trap_BotAllocGoalState
import trap_BotMutateGoalFuzzyLogic
import trap_BotSaveGoalFuzzyLogic
import trap_BotInterbreedGoalFuzzyLogic
import trap_BotFreeItemWeights
import trap_BotLoadItemWeights
import trap_BotUpdateEntityItems
import trap_BotInitLevelItems
import trap_BotSetAvoidGoalTime
import trap_BotAvoidGoalTime
import trap_BotGetLevelItemGoal
import trap_BotGetMapLocationGoal
import trap_BotGetNextCampSpotGoal
import trap_BotItemGoalInVisButNotVisible
import trap_BotTouchingGoal
import trap_BotChooseNBGItem
import trap_BotChooseLTGItem
import trap_BotGetSecondGoal
import trap_BotGetTopGoal
import trap_BotGoalName
import trap_BotDumpGoalStack
import trap_BotDumpAvoidGoals
import trap_BotEmptyGoalStack
import trap_BotPopGoal
import trap_BotPushGoal
import trap_BotResetAvoidGoals
import trap_BotRemoveFromAvoidGoals
import trap_BotResetGoalState
import trap_BotSetChatName
import trap_BotSetChatGender
import trap_BotLoadChatFile
import trap_BotReplaceSynonyms
import trap_UnifyWhiteSpaces
import trap_BotMatchVariable
import trap_BotFindMatch
import trap_StringContains
import trap_BotGetChatMessage
import trap_BotEnterChat
import trap_BotChatLength
import trap_BotReplyChat
import trap_BotNumInitialChats
import trap_BotInitialChat
import trap_BotNumConsoleMessages
import trap_BotNextConsoleMessage
import trap_BotRemoveConsoleMessage
import trap_BotQueueConsoleMessage
import trap_BotFreeChatState
import trap_BotAllocChatState
import trap_Characteristic_String
import trap_Characteristic_BInteger
import trap_Characteristic_Integer
import trap_Characteristic_BFloat
import trap_Characteristic_Float
import trap_BotFreeCharacter
import trap_BotLoadCharacter
import trap_EA_ResetInput
import trap_EA_GetInput
import trap_EA_EndRegular
import trap_EA_ForcePower
import trap_EA_Alt_Attack
import trap_EA_View
import trap_EA_Move
import trap_EA_DelayedJump
import trap_EA_Jump
import trap_EA_SelectWeapon
import trap_EA_MoveRight
import trap_EA_MoveLeft
import trap_EA_MoveBack
import trap_EA_MoveForward
import trap_EA_MoveDown
import trap_EA_MoveUp
import trap_EA_Crouch
import trap_EA_Respawn
import trap_EA_Use
import trap_EA_Attack
import trap_EA_Talk
import trap_EA_Gesture
import trap_EA_Action
import trap_EA_Command
import trap_EA_SayTeam
import trap_EA_Say
import trap_AAS_PredictClientMovement
import trap_AAS_Swimming
import trap_AAS_AlternativeRouteGoals
import trap_AAS_PredictRoute
import trap_AAS_EnableRoutingArea
import trap_AAS_AreaTravelTimeToGoalArea
import trap_AAS_AreaReachability
import trap_AAS_IntForBSPEpairKey
import trap_AAS_FloatForBSPEpairKey
import trap_AAS_VectorForBSPEpairKey
import trap_AAS_ValueForBSPEpairKey
import trap_AAS_NextBSPEntity
import trap_AAS_PointContents
import trap_AAS_TraceAreas
import trap_AAS_PointReachabilityAreaIndex
import trap_AAS_PointAreaNum
import trap_AAS_Time
import trap_AAS_PresenceTypeBoundingBox
import trap_AAS_Initialized
import trap_AAS_EntityInfo
import trap_AAS_AreaInfo
import trap_AAS_BBoxAreas
import trap_BotUserCommand
import trap_BotGetServerCommand
import trap_BotGetSnapshotEntity
import trap_BotLibTest
import trap_BotLibUpdateEntity
import trap_BotLibLoadMap
import trap_BotLibStartFrame
import trap_BotLibDefine
import trap_BotLibVarGet
import trap_BotLibVarSet
import trap_BotLibShutdown
import trap_BotLibSetup
import trap_DebugPolygonDelete
import trap_DebugPolygonCreate
import trap_GetEntityToken
import trap_GetUsercmd
import trap_BotFreeClient
import trap_BotAllocateClient
import trap_EntityContact
import trap_EntitiesInBox
import trap_UnlinkEntity
import trap_LinkEntity
import trap_AreasConnected
import trap_AdjustAreaPortalState
import trap_InPVSIgnorePortals
import trap_InPVS
import trap_PointContents
import trap_Trace
import trap_SetBrushModel
import trap_GetServerinfo
import trap_SetUserinfo
import trap_GetUserinfo
import trap_GetConfigstring
import trap_SetConfigstring
import trap_SendServerCommand
import trap_DropClient
import trap_LocateGameData
import trap_Cvar_VariableStringBuffer
import trap_Cvar_VariableValue
import trap_Cvar_VariableIntegerValue
import trap_Cvar_Set
import trap_Cvar_Update
import trap_Cvar_Register
import trap_SendConsoleCommand
import trap_FS_GetFileList
import trap_FS_FCloseFile
import trap_FS_Write
import trap_FS_Read
import trap_FS_FOpenFile
import trap_Args
import trap_Argv
import trap_Argc
import trap_Milliseconds
import trap_Error
import trap_Printf
import boot_noFlips
import boot_screenShakeOnHeadChop
import boot_trainingMode
import boot_feintTimer
import g_timeouttospec
import g_forceDodge
import g_dismember
import g_singlePlayer
import g_enableBreath
import g_enableDust
import g_rankings
import pmove_msec
import pmove_fixed
import g_smoothClients
import g_blueteam
import g_redteam
import g_debugUp
import g_debugRight
import g_debugForward
import g_filterBan
import g_banIPs
import g_teamForceBalance
import g_teamAutoJoin
import g_allowVote
import g_blood
import g_doWarmup
import g_warmup
import g_motd
import g_synchronousClients
import g_adaptRespawn
import g_weaponTeamRespawn
import g_weaponRespawn
import g_debugDamage
import g_debugAlloc
import g_debugMove
import g_inactivity
import g_forcerespawn
import g_quadfactor
import g_knockback
import g_speed
import g_gravity
import g_needpass
import g_password
import g_friendlySaber
import g_friendlyFire
import g_saberInterpolate
import g_capturelimit
import g_timelimit
import g_duel_fraglimit
import g_fraglimit
import g_duelWeaponDisable
import g_weaponDisable
import g_forcePowerDisable
import g_spawnInvulnerability
import g_forceRegenTime
import g_saberLocking
import g_privateDuel
import g_forceBasedTeams
import g_maxForceRank
import g_dmflags
import g_autoMapCycle
import g_restarted
import g_maxGameClients
import g_maxclients
import g_cheats
import g_dedicated
import g_gametype
import g_entities
import level
import Pickup_Team
import CheckTeamStatus
import TeamplayInfoMessage
import Team_GetLocationMsg
import Team_GetLocation
import SelectSagaSpawnPoint
import SelectCTFSpawnPoint
import Team_FreeEntity
import Team_ReturnFlag
import Team_InitGame
import Team_CheckHurtCarrier
import Team_FragBonuses
import Team_DroppedFlagThink
import AddTeamScore
import TeamColorString
import OtherTeamName
import TeamName
import OtherTeam
import BotAIStartFrame
import BotAIShutdownClient
import BotAISetupClient
import BotAILoadMap
import BotAIShutdown
import BotAISetup
import B_CleanupAlloc
import B_InitAlloc
import InFieldOfVision
import BotOrder
import OrgVisible
import InitSagaMode
import G_ClearClientLog
import G_LogExit
import G_LogWeaponOutput
import G_LogWeaponInit
import G_LogWeaponItem
import G_LogWeaponPowerup
import G_LogWeaponFrag
import G_LogWeaponDeath
import G_LogWeaponKill
import G_LogWeaponDamage
import G_LogWeaponFire
import G_LogWeaponPickup
import Boot_BlockMatchesAttack
import Boot_GetParryAnimFromMovement
import Boot_ManualBlockThink
import Jedi_DodgeEvasion
import ForceTelepathy
import ForceThrow
import ForceSeeing
import ForceTeamForceReplenish
import ForceTeamHeal
import ForceAbsorb
import ForceProtect
import ForceGrip
import ForceRage
import ForceSpeed
import ForceHeal
import ForcePowerUsableOn
import WP_ForcePowersUpdate
import WP_SpawnInitForcePowers
import WP_InitForcePowers
import WP_SaberInitBladeData
import WP_SaberCanBlock
import WP_SaberPositionUpdate
import WP_ForcePowerStop
import HasSetSaberOnly
import G_PreDefSound
import G_RefreshNextMap
import G_DoesMapSupportGametype
import BotInterbreedEndMatch
import Svcmd_BotList_f
import Svcmd_AddBot_f
import G_BotConnect
import G_RemoveQueuedBotBegin
import G_CheckBotSpawn
import G_GetBotInfoByName
import G_GetBotInfoByNumber
import G_InitBots
import UpdateTournamentInfo
import G_WriteSessionData
import G_InitWorldSession
import G_InitSessionData
import G_ReadSessionData
import Svcmd_GameMem_f
import G_InitMemory
import G_Alloc
import Team_CheckDroppedItem
import OnSameTeam
import Boot_GetDirFromMouseMovement
import BootPort_PM_SomeoneInFront
import G_RunClient
import ClientEndFrame
import ClientThink
import G_CheckClientTimeouts
import ClientBegin
import ClientDisconnect
import ClientUserinfoChanged
import ClientConnect
import G_GetStripEdString
import G_Error
import G_Printf
import SendScoreboardMessageToAllClients
import G_LogPrintf
import G_RunThink
import CheckTeamLeader
import SetLeader
import FindIntermissionPoint
import g_ff_objectives
import G_SetStats
import MoveClientToIntermission
import BlowDetpacks
import FireWeapon
import G_FilterPacket
import G_ProcessIPBans
import ConsoleCommand
import gJMSaberEnt
import SpotWouldTelefrag
import CalculateRanks
import AddScore
import player_die
import ClientSpawn
import InitBodyQue
import BeginIntermission
import respawn
import CopyToBodyQue
import SelectSpawnPoint
import SetClientViewAngle
import PickTeam
import TeamLeader
import TeamCount
import CheckGauntletAttack
import SnapVectorTowards
import CalcMuzzlePoint
import LogAccuracyHit
import WP_FireGenericBlasterMissile
import WP_FireTurretMissile
import G_PlayerBecomeATST
import ATST_ManageDamageBoxes
import TeleportPlayer
import trigger_teleporter_touch
import Touch_DoorTrigger
import G_RunMover
import WP_FireBlasterMissile
import G_ExplodeMissile
import G_BounceProjectile
import CreateMissile
import G_RunMissile
import G_ReflectMissile
import G_GetHitLocation
import ExplodeDeath
import TossClientCubes
import TossClientItems
import TossClientWeapon
import body_die
import G_RadiusDamage
import G_Damage
import CanDamage
import trap_G2API_SetBoneAnim
import trap_G2API_GetGLAName
import trap_G2API_SetBoneAngles
import trap_G2API_CleanGhoul2Models
import trap_G2API_RemoveGhoul2Model
import trap_G2API_HasGhoul2ModelOnIndex
import trap_G2API_DuplicateGhoul2Instance
import trap_G2API_CopySpecificGhoul2Model
import trap_G2API_CopyGhoul2Instance
import trap_G2API_SetBoltInfo
import trap_G2API_AddBolt
import trap_G2API_InitGhoul2Model
import trap_G2API_GetBoltMatrix_NoReconstruct
import trap_G2API_GetBoltMatrix
import trap_G2_HaveWeGhoul2Models
import trap_G2_SetGhoul2ModelIndexes
import trap_G2_ListModelBones
import trap_G2_ListModelSurfaces
import G_SkinIndex
import BuildShaderStateConfig
import AddRemap
import G_SetOrigin
import G_AddEvent
import G_AddPredictableEvent
import vtos
import tv
import G_RunObject
import G_TouchSolids
import G_TouchTriggers
import G_EntitiesFree
import G_FreeEntity
import G_KillG2Queue
import G_SendG2KillQueue
import TryUse
import G_EntitySound
import G_SoundAtLoc
import G_Sound
import G_MuteSound
import G_ScreenShake
import G_PlayEffect
import G_TempEntity
import G_Spawn
import G_InitGentity
import G_SetAngles
import G_SetMovedir
import G_UseTargets
import G_PickTarget
import G_RadiusList
import G_Find
import G_KillBox
import G_TeamCommand
import G_EffectIndex
import G_SoundIndex
import G_ModelIndex
import SaveRegisteredItems
import RegisterItem
import ClearRegisteredItems
import Touch_Item
import Add_Ammo
import ArmorIndex
import Think_Weapon
import FinishSpawningItem
import G_SpawnItem
import SetRespawn
import LaunchItem
import Drop_Item
import PrecacheItem
import UseHoldableItem
import RespawnItem
import G_RunItem
import G_CheckTeamItems
import ItemUse_MedPack
import ItemUse_Seeker
import ItemUse_Sentry
import ItemUse_Shield
import ItemUse_Binoculars
import G_NewString
import G_SpawnEntitiesFromString
import G_SpawnVector
import G_SpawnInt
import G_SpawnFloat
import G_SpawnString
import bootSession
import g2SaberInstance
import precachedKyle
import forcePowerDarkLight
import WeaponAttackAnim
import WeaponReadyAnim
import BG_OutOfMemory
import BG_StringAlloc
import BG_TempFree
import BG_TempAlloc
import BG_AllocUnaligned
import BG_Alloc
import BG_CanUseFPNow
import BG_HasYsalamiri
import BG_GetItemIndexByTag
import BG_ParseAnimationFile
import BG_PlayerTouchesItem
import BG_G2PlayerAngles
import BG_PlayerStateToEntityStateExtraPolate
import BG_PlayerStateToEntityState
import BG_TouchJumpPad
import BG_AddPredictableEventToPlayerstate
import BG_EvaluateTrajectoryDelta
import BG_EvaluateTrajectory
import BG_ForcePowerDrain
import BG_SaberStartTransAnim
import BG_InDeathAnim
import BG_InRoll
import BG_SaberInSpecialAttack
import BG_SpinningSaberAnim
import BG_FlippingAnim
import BG_SaberInIdle
import BG_SaberInSpecial
import BG_SaberInAttack
import BG_DirectFlippingAnim
import BG_InSaberStandAnim
import BG_InSpecialJump
import BG_LegalizedForcePowers
import saberMoveData
import BG_CanItemBeGrabbed
import BG_FindItemForHoldable
import BG_FindItemForPowerup
import BG_FindItemForWeapon
import BG_FindItem
import vectoyaw
import bg_numItems
import bg_itemlist
import Pmove
import PM_UpdateViewAngles
import pm
import bgForcePowerCost
import forceMasteryPoints
import forceMasteryLevels
import bgGlobalAnimations
import BGPAFtextLoaded
import forcePowerSorted
import WP_MuzzlePoint
import ammoData
import weaponData
import GetStringForID
import GetIDForString
import Q_irand
import irand
import flrand
import Rand_Init
import Com_Printf
import Com_Error
import Info_NextPair
import Info_Validate
import Info_SetValueForKey_Big
import Info_SetValueForKey
import Info_RemoveKey_big
import Info_RemoveKey
import Info_ValueForKey
import va
import Q_CleanStr
import Q_PrintStrlen
import Q_strcat
import Q_strncpyz
import Q_strrchr
import Q_strupr
import Q_strlwr
import Q_stricmpn
import Q_strncmp
import Q_stricmp
import Q_isalpha
import Q_isupper
import Q_islower
import Q_isprint
import Com_sprintf
import Parse3DMatrix
import Parse2DMatrix
import Parse1DMatrix
import SkipRestOfLine
import SkipBracedSection
import COM_MatchToken
import COM_ParseWarning
import COM_ParseError
import COM_Compress
import COM_ParseExt
import COM_Parse
import SkipWhitespace
import COM_GetCurrentParseLine
import COM_BeginParseSession
import COM_DefaultExtension
import COM_StripExtension
import COM_SkipPath
import Com_Clamp
import PerpendicularVector
import AngleVectors
import MatrixMultiply
import MakeNormalVectors
import RotateAroundDirection
import RotatePointAroundVector
import ProjectPointOnPlane
import PlaneFromPoints
import AngleDelta
import AngleNormalize180
import AngleNormalize360
import AnglesSubtract
import AngleSubtract
import LerpAngle
import AngleMod
import BoxOnPlaneSide
import SetPlaneSignbits
import AxisCopy
import AxisClear
import AnglesToAxis
import vectoangles
import Q_crandom
import Q_random
import Q_rand
import Q_acos
import Q_log2
import VectorRotate
import Vector4Scale
import VectorNormalize2
import VectorNormalize
import CrossProduct
import VectorInverse
import VectorNormalizeFast
import DistanceSquared
import Distance
import VectorLengthSquared
import VectorLength
import VectorCompare
import AddPointToBounds
import ClearBounds
import RadiusFromBounds
import NormalizeColor
import ColorBytes4
import ColorBytes3
import _VectorMA
import _VectorScale
import _VectorCopy
import _VectorAdd
import _VectorSubtract
import _DotProduct
import ByteToDir
import DirToByte
import powf
import ClampShort
import ClampChar
import Q_rsqrt
import Q_fabs
import axisDefault
import vec3_origin
import g_color_table
import colorDkBlue
import colorLtBlue
import colorDkGrey
import colorMdGrey
import colorLtGrey
import colorWhite
import colorCyan
import colorMagenta
import colorYellow
import colorBlue
import colorGreen
import colorRed
import colorBlack
import colorTable
import bytedirs
import Com_Memcpy
import Com_Memset
import Hunk_Alloc
import forceSpeedLevels
import FloatSwap
import LongSwap
import ShortSwap
import acos
import fabs
import abs
import tan
import atan2
import cos
import sin
import sqrt
import floor
import ceil
import memcpy
import memset
import memmove
import sscanf
import vsprintf
import _atoi
import atoi
import _atof
import atof
import toupper
import tolower
import strncpy
import strstr
import strchr
import strcmp
import strcpy
import strcat
import strlen
import rand
import srand
import qsort
lit
align 1
LABELV $1262
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 117
char 1 110
char 1 107
char 1 110
char 1 111
char 1 119
char 1 110
char 1 32
char 1 99
char 1 109
char 1 100
char 1 32
char 1 37
char 1 115
char 1 10
char 1 34
char 1 0
align 1
LABELV $1261
char 1 79
char 1 78
char 1 76
char 1 89
char 1 95
char 1 65
char 1 68
char 1 68
char 1 95
char 1 66
char 1 79
char 1 84
char 1 83
char 1 95
char 1 65
char 1 83
char 1 95
char 1 83
char 1 69
char 1 82
char 1 86
char 1 69
char 1 82
char 1 0
align 1
LABELV $1260
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $1259
char 1 97
char 1 100
char 1 100
char 1 98
char 1 111
char 1 116
char 1 0
align 1
LABELV $1256
char 1 115
char 1 119
char 1 105
char 1 116
char 1 99
char 1 104
char 1 66
char 1 108
char 1 111
char 1 99
char 1 107
char 1 105
char 1 110
char 1 103
char 1 77
char 1 101
char 1 116
char 1 104
char 1 111
char 1 100
char 1 0
align 1
LABELV $1253
char 1 105
char 1 110
char 1 102
char 1 111
char 1 0
align 1
LABELV $1250
char 1 94
char 1 49
char 1 0
align 1
LABELV $1249
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 84
char 1 72
char 1 69
char 1 32
char 1 68
char 1 69
char 1 83
char 1 84
char 1 82
char 1 79
char 1 89
char 1 69
char 1 82
char 1 32
char 1 67
char 1 79
char 1 77
char 1 69
char 1 84
char 1 72
char 1 10
char 1 34
char 1 0
align 1
LABELV $1244
char 1 116
char 1 104
char 1 101
char 1 100
char 1 101
char 1 115
char 1 116
char 1 114
char 1 111
char 1 121
char 1 101
char 1 114
char 1 0
align 1
LABELV $1241
char 1 35
char 1 109
char 1 109
char 1 0
align 1
LABELV $1198
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 89
char 1 111
char 1 117
char 1 32
char 1 99
char 1 97
char 1 110
char 1 110
char 1 111
char 1 116
char 1 32
char 1 112
char 1 101
char 1 114
char 1 102
char 1 111
char 1 114
char 1 109
char 1 32
char 1 116
char 1 104
char 1 105
char 1 115
char 1 32
char 1 116
char 1 97
char 1 115
char 1 107
char 1 32
char 1 40
char 1 37
char 1 115
char 1 41
char 1 32
char 1 100
char 1 117
char 1 114
char 1 105
char 1 110
char 1 103
char 1 32
char 1 116
char 1 104
char 1 101
char 1 32
char 1 105
char 1 110
char 1 116
char 1 101
char 1 114
char 1 109
char 1 105
char 1 115
char 1 115
char 1 105
char 1 111
char 1 110
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $1195
char 1 115
char 1 116
char 1 97
char 1 116
char 1 115
char 1 0
align 1
LABELV $1192
char 1 115
char 1 101
char 1 116
char 1 118
char 1 105
char 1 101
char 1 119
char 1 112
char 1 111
char 1 115
char 1 0
align 1
LABELV $1189
char 1 103
char 1 99
char 1 0
align 1
LABELV $1186
char 1 116
char 1 101
char 1 97
char 1 109
char 1 118
char 1 111
char 1 116
char 1 101
char 1 0
align 1
LABELV $1183
char 1 99
char 1 97
char 1 108
char 1 108
char 1 116
char 1 101
char 1 97
char 1 109
char 1 118
char 1 111
char 1 116
char 1 101
char 1 0
align 1
LABELV $1180
char 1 118
char 1 111
char 1 116
char 1 101
char 1 0
align 1
LABELV $1177
char 1 99
char 1 97
char 1 108
char 1 108
char 1 118
char 1 111
char 1 116
char 1 101
char 1 0
align 1
LABELV $1174
char 1 119
char 1 104
char 1 101
char 1 114
char 1 101
char 1 0
align 1
LABELV $1171
char 1 102
char 1 111
char 1 114
char 1 99
char 1 101
char 1 99
char 1 104
char 1 97
char 1 110
char 1 103
char 1 101
char 1 100
char 1 0
align 1
LABELV $1168
char 1 116
char 1 101
char 1 97
char 1 109
char 1 0
align 1
LABELV $1165
char 1 102
char 1 111
char 1 108
char 1 108
char 1 111
char 1 119
char 1 112
char 1 114
char 1 101
char 1 118
char 1 0
align 1
LABELV $1162
char 1 102
char 1 111
char 1 108
char 1 108
char 1 111
char 1 119
char 1 110
char 1 101
char 1 120
char 1 116
char 1 0
align 1
LABELV $1159
char 1 102
char 1 111
char 1 108
char 1 108
char 1 111
char 1 119
char 1 0
align 1
LABELV $1156
char 1 108
char 1 101
char 1 118
char 1 101
char 1 108
char 1 115
char 1 104
char 1 111
char 1 116
char 1 0
align 1
LABELV $1151
char 1 107
char 1 105
char 1 108
char 1 108
char 1 0
align 1
LABELV $1148
char 1 110
char 1 111
char 1 99
char 1 108
char 1 105
char 1 112
char 1 0
align 1
LABELV $1145
char 1 110
char 1 111
char 1 116
char 1 97
char 1 114
char 1 103
char 1 101
char 1 116
char 1 0
align 1
LABELV $1142
char 1 103
char 1 111
char 1 100
char 1 0
align 1
LABELV $1139
char 1 103
char 1 105
char 1 118
char 1 101
char 1 0
align 1
LABELV $1131
char 1 118
char 1 116
char 1 97
char 1 117
char 1 110
char 1 116
char 1 0
align 1
LABELV $1128
char 1 118
char 1 111
char 1 116
char 1 101
char 1 108
char 1 108
char 1 0
align 1
LABELV $1125
char 1 118
char 1 111
char 1 115
char 1 97
char 1 121
char 1 95
char 1 116
char 1 101
char 1 97
char 1 109
char 1 0
align 1
LABELV $1122
char 1 118
char 1 111
char 1 115
char 1 97
char 1 121
char 1 0
align 1
LABELV $1117
char 1 118
char 1 115
char 1 97
char 1 121
char 1 95
char 1 116
char 1 101
char 1 97
char 1 109
char 1 0
align 1
LABELV $1114
char 1 118
char 1 115
char 1 97
char 1 121
char 1 0
align 1
LABELV $1111
char 1 116
char 1 101
char 1 108
char 1 108
char 1 0
align 1
LABELV $1108
char 1 115
char 1 97
char 1 121
char 1 95
char 1 116
char 1 101
char 1 97
char 1 109
char 1 0
align 1
LABELV $1105
char 1 115
char 1 97
char 1 121
char 1 0
align 1
LABELV $1102
char 1 98
char 1 111
char 1 116
char 1 95
char 1 0
align 1
LABELV $1094
char 1 80
char 1 76
char 1 68
char 1 85
char 1 69
char 1 76
char 1 67
char 1 72
char 1 65
char 1 76
char 1 76
char 1 69
char 1 78
char 1 71
char 1 69
char 1 68
char 1 0
align 1
LABELV $1093
char 1 80
char 1 76
char 1 68
char 1 85
char 1 69
char 1 76
char 1 67
char 1 72
char 1 65
char 1 76
char 1 76
char 1 69
char 1 78
char 1 71
char 1 69
char 1 0
align 1
LABELV $1092
char 1 99
char 1 112
char 1 32
char 1 34
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 10
char 1 34
char 1 0
align 1
LABELV $1085
char 1 80
char 1 76
char 1 68
char 1 85
char 1 69
char 1 76
char 1 65
char 1 67
char 1 67
char 1 69
char 1 80
char 1 84
char 1 0
align 1
LABELV $1084
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 33
char 1 10
char 1 34
char 1 0
align 1
LABELV $1059
char 1 67
char 1 65
char 1 78
char 1 84
char 1 68
char 1 85
char 1 69
char 1 76
char 1 95
char 1 66
char 1 85
char 1 83
char 1 89
char 1 0
align 1
LABELV $1056
char 1 67
char 1 65
char 1 78
char 1 84
char 1 68
char 1 85
char 1 69
char 1 76
char 1 95
char 1 74
char 1 85
char 1 83
char 1 84
char 1 68
char 1 73
char 1 68
char 1 0
align 1
LABELV $1040
char 1 78
char 1 79
char 1 68
char 1 85
char 1 69
char 1 76
char 1 95
char 1 71
char 1 65
char 1 77
char 1 69
char 1 84
char 1 89
char 1 80
char 1 69
char 1 0
align 1
LABELV $1007
char 1 115
char 1 111
char 1 117
char 1 110
char 1 100
char 1 47
char 1 119
char 1 101
char 1 97
char 1 112
char 1 111
char 1 110
char 1 115
char 1 47
char 1 115
char 1 97
char 1 98
char 1 101
char 1 114
char 1 47
char 1 115
char 1 97
char 1 98
char 1 101
char 1 114
char 1 111
char 1 110
char 1 46
char 1 119
char 1 97
char 1 118
char 1 0
align 1
LABELV $1006
char 1 115
char 1 111
char 1 117
char 1 110
char 1 100
char 1 47
char 1 119
char 1 101
char 1 97
char 1 112
char 1 111
char 1 110
char 1 115
char 1 47
char 1 115
char 1 97
char 1 98
char 1 101
char 1 114
char 1 47
char 1 115
char 1 97
char 1 98
char 1 101
char 1 114
char 1 111
char 1 102
char 1 102
char 1 113
char 1 117
char 1 105
char 1 99
char 1 107
char 1 46
char 1 119
char 1 97
char 1 118
char 1 0
align 1
LABELV $924
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 117
char 1 115
char 1 97
char 1 103
char 1 101
char 1 58
char 1 32
char 1 115
char 1 101
char 1 116
char 1 118
char 1 105
char 1 101
char 1 119
char 1 112
char 1 111
char 1 115
char 1 32
char 1 120
char 1 32
char 1 121
char 1 32
char 1 122
char 1 32
char 1 121
char 1 97
char 1 119
char 1 10
char 1 34
char 1 0
align 1
LABELV $907
char 1 80
char 1 76
char 1 84
char 1 69
char 1 65
char 1 77
char 1 86
char 1 79
char 1 84
char 1 69
char 1 67
char 1 65
char 1 83
char 1 84
char 1 0
align 1
LABELV $904
char 1 84
char 1 69
char 1 65
char 1 77
char 1 86
char 1 79
char 1 84
char 1 69
char 1 65
char 1 76
char 1 82
char 1 69
char 1 65
char 1 68
char 1 89
char 1 67
char 1 65
char 1 83
char 1 84
char 1 0
align 1
LABELV $901
char 1 78
char 1 79
char 1 84
char 1 69
char 1 65
char 1 77
char 1 86
char 1 79
char 1 84
char 1 69
char 1 73
char 1 78
char 1 80
char 1 82
char 1 79
char 1 71
char 1 0
align 1
LABELV $877
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 32
char 1 99
char 1 97
char 1 108
char 1 108
char 1 101
char 1 100
char 1 32
char 1 97
char 1 32
char 1 116
char 1 101
char 1 97
char 1 109
char 1 32
char 1 118
char 1 111
char 1 116
char 1 101
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $865
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 84
char 1 101
char 1 97
char 1 109
char 1 32
char 1 118
char 1 111
char 1 116
char 1 101
char 1 32
char 1 99
char 1 111
char 1 109
char 1 109
char 1 97
char 1 110
char 1 100
char 1 115
char 1 32
char 1 97
char 1 114
char 1 101
char 1 58
char 1 32
char 1 108
char 1 101
char 1 97
char 1 100
char 1 101
char 1 114
char 1 32
char 1 60
char 1 112
char 1 108
char 1 97
char 1 121
char 1 101
char 1 114
char 1 62
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $864
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 32
char 1 105
char 1 115
char 1 32
char 1 110
char 1 111
char 1 116
char 1 32
char 1 97
char 1 32
char 1 118
char 1 97
char 1 108
char 1 105
char 1 100
char 1 32
char 1 112
char 1 108
char 1 97
char 1 121
char 1 101
char 1 114
char 1 32
char 1 111
char 1 110
char 1 32
char 1 121
char 1 111
char 1 117
char 1 114
char 1 32
char 1 116
char 1 101
char 1 97
char 1 109
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $829
char 1 108
char 1 101
char 1 97
char 1 100
char 1 101
char 1 114
char 1 0
align 1
LABELV $823
char 1 32
char 1 0
align 1
LABELV $814
char 1 77
char 1 65
char 1 88
char 1 84
char 1 69
char 1 65
char 1 77
char 1 86
char 1 79
char 1 84
char 1 69
char 1 83
char 1 0
align 1
LABELV $811
char 1 84
char 1 69
char 1 65
char 1 77
char 1 86
char 1 79
char 1 84
char 1 69
char 1 65
char 1 76
char 1 82
char 1 69
char 1 65
char 1 68
char 1 89
char 1 0
align 1
LABELV $789
char 1 80
char 1 76
char 1 86
char 1 79
char 1 84
char 1 69
char 1 67
char 1 65
char 1 83
char 1 84
char 1 0
align 1
LABELV $788
char 1 78
char 1 79
char 1 86
char 1 79
char 1 84
char 1 69
char 1 65
char 1 83
char 1 83
char 1 80
char 1 69
char 1 67
char 1 0
align 1
LABELV $785
char 1 86
char 1 79
char 1 84
char 1 69
char 1 65
char 1 76
char 1 82
char 1 69
char 1 65
char 1 68
char 1 89
char 1 0
align 1
LABELV $782
char 1 78
char 1 79
char 1 86
char 1 79
char 1 84
char 1 69
char 1 73
char 1 78
char 1 80
char 1 82
char 1 79
char 1 71
char 1 0
align 1
LABELV $773
char 1 37
char 1 105
char 1 0
align 1
LABELV $763
char 1 80
char 1 76
char 1 67
char 1 65
char 1 76
char 1 76
char 1 69
char 1 68
char 1 86
char 1 79
char 1 84
char 1 69
char 1 0
align 1
LABELV $762
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 10
char 1 34
char 1 0
align 1
LABELV $758
char 1 37
char 1 115
char 1 32
char 1 34
char 1 37
char 1 115
char 1 34
char 1 0
align 1
LABELV $752
char 1 118
char 1 115
char 1 116
char 1 114
char 1 32
char 1 110
char 1 101
char 1 120
char 1 116
char 1 109
char 1 97
char 1 112
char 1 0
align 1
LABELV $749
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 110
char 1 101
char 1 120
char 1 116
char 1 109
char 1 97
char 1 112
char 1 32
char 1 110
char 1 111
char 1 116
char 1 32
char 1 115
char 1 101
char 1 116
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $743
char 1 37
char 1 115
char 1 0
align 1
LABELV $738
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 59
char 1 32
char 1 115
char 1 101
char 1 116
char 1 32
char 1 110
char 1 101
char 1 120
char 1 116
char 1 109
char 1 97
char 1 112
char 1 32
char 1 34
char 1 37
char 1 115
char 1 34
char 1 0
align 1
LABELV $733
char 1 78
char 1 79
char 1 86
char 1 79
char 1 84
char 1 69
char 1 95
char 1 77
char 1 65
char 1 80
char 1 78
char 1 79
char 1 84
char 1 83
char 1 85
char 1 80
char 1 80
char 1 79
char 1 82
char 1 84
char 1 69
char 1 68
char 1 66
char 1 89
char 1 71
char 1 65
char 1 77
char 1 69
char 1 0
align 1
LABELV $728
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 0
align 1
LABELV $725
char 1 37
char 1 115
char 1 32
char 1 37
char 1 100
char 1 0
align 1
LABELV $720
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 73
char 1 110
char 1 118
char 1 97
char 1 108
char 1 105
char 1 100
char 1 32
char 1 103
char 1 97
char 1 109
char 1 101
char 1 116
char 1 121
char 1 112
char 1 101
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $712
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $707
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 86
char 1 111
char 1 116
char 1 101
char 1 32
char 1 99
char 1 111
char 1 109
char 1 109
char 1 97
char 1 110
char 1 100
char 1 115
char 1 32
char 1 97
char 1 114
char 1 101
char 1 58
char 1 32
char 1 109
char 1 97
char 1 112
char 1 95
char 1 114
char 1 101
char 1 115
char 1 116
char 1 97
char 1 114
char 1 116
char 1 44
char 1 32
char 1 110
char 1 101
char 1 120
char 1 116
char 1 109
char 1 97
char 1 112
char 1 44
char 1 32
char 1 109
char 1 97
char 1 112
char 1 32
char 1 60
char 1 109
char 1 97
char 1 112
char 1 110
char 1 97
char 1 109
char 1 101
char 1 62
char 1 44
char 1 32
char 1 103
char 1 95
char 1 103
char 1 97
char 1 109
char 1 101
char 1 116
char 1 121
char 1 112
char 1 101
char 1 32
char 1 60
char 1 110
char 1 62
char 1 44
char 1 32
char 1 107
char 1 105
char 1 99
char 1 107
char 1 32
char 1 60
char 1 112
char 1 108
char 1 97
char 1 121
char 1 101
char 1 114
char 1 62
char 1 44
char 1 32
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 107
char 1 105
char 1 99
char 1 107
char 1 32
char 1 60
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 110
char 1 117
char 1 109
char 1 62
char 1 44
char 1 32
char 1 103
char 1 95
char 1 100
char 1 111
char 1 87
char 1 97
char 1 114
char 1 109
char 1 117
char 1 112
char 1 44
char 1 32
char 1 116
char 1 105
char 1 109
char 1 101
char 1 108
char 1 105
char 1 109
char 1 105
char 1 116
char 1 32
char 1 60
char 1 116
char 1 105
char 1 109
char 1 101
char 1 62
char 1 44
char 1 32
char 1 102
char 1 114
char 1 97
char 1 103
char 1 108
char 1 105
char 1 109
char 1 105
char 1 116
char 1 32
char 1 60
char 1 102
char 1 114
char 1 97
char 1 103
char 1 115
char 1 62
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $706
char 1 102
char 1 114
char 1 97
char 1 103
char 1 108
char 1 105
char 1 109
char 1 105
char 1 116
char 1 0
align 1
LABELV $703
char 1 116
char 1 105
char 1 109
char 1 101
char 1 108
char 1 105
char 1 109
char 1 105
char 1 116
char 1 0
align 1
LABELV $700
char 1 103
char 1 95
char 1 100
char 1 111
char 1 87
char 1 97
char 1 114
char 1 109
char 1 117
char 1 112
char 1 0
align 1
LABELV $697
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 107
char 1 105
char 1 99
char 1 107
char 1 0
align 1
LABELV $694
char 1 107
char 1 105
char 1 99
char 1 107
char 1 0
align 1
LABELV $691
char 1 103
char 1 95
char 1 103
char 1 97
char 1 109
char 1 101
char 1 116
char 1 121
char 1 112
char 1 101
char 1 0
align 1
LABELV $688
char 1 109
char 1 97
char 1 112
char 1 0
align 1
LABELV $685
char 1 110
char 1 101
char 1 120
char 1 116
char 1 109
char 1 97
char 1 112
char 1 0
align 1
LABELV $682
char 1 109
char 1 97
char 1 112
char 1 95
char 1 114
char 1 101
char 1 115
char 1 116
char 1 97
char 1 114
char 1 116
char 1 0
align 1
LABELV $679
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 73
char 1 110
char 1 118
char 1 97
char 1 108
char 1 105
char 1 100
char 1 32
char 1 118
char 1 111
char 1 116
char 1 101
char 1 32
char 1 115
char 1 116
char 1 114
char 1 105
char 1 110
char 1 103
char 1 46
char 1 10
char 1 34
char 1 0
align 1
LABELV $675
char 1 78
char 1 79
char 1 83
char 1 80
char 1 69
char 1 67
char 1 86
char 1 79
char 1 84
char 1 69
char 1 0
align 1
LABELV $672
char 1 77
char 1 65
char 1 88
char 1 86
char 1 79
char 1 84
char 1 69
char 1 83
char 1 0
align 1
LABELV $669
char 1 86
char 1 79
char 1 84
char 1 69
char 1 73
char 1 78
char 1 80
char 1 82
char 1 79
char 1 71
char 1 82
char 1 69
char 1 83
char 1 83
char 1 0
align 1
LABELV $665
char 1 78
char 1 79
char 1 86
char 1 79
char 1 84
char 1 69
char 1 0
align 1
LABELV $660
char 1 67
char 1 97
char 1 112
char 1 116
char 1 117
char 1 114
char 1 101
char 1 32
char 1 116
char 1 104
char 1 101
char 1 32
char 1 89
char 1 115
char 1 97
char 1 108
char 1 97
char 1 109
char 1 105
char 1 114
char 1 105
char 1 0
align 1
LABELV $659
char 1 67
char 1 97
char 1 112
char 1 116
char 1 117
char 1 114
char 1 101
char 1 32
char 1 116
char 1 104
char 1 101
char 1 32
char 1 70
char 1 108
char 1 97
char 1 103
char 1 0
align 1
LABELV $658
char 1 78
char 1 47
char 1 65
char 1 0
align 1
LABELV $657
char 1 84
char 1 101
char 1 97
char 1 109
char 1 32
char 1 70
char 1 70
char 1 65
char 1 0
align 1
LABELV $656
char 1 83
char 1 105
char 1 110
char 1 103
char 1 108
char 1 101
char 1 32
char 1 80
char 1 108
char 1 97
char 1 121
char 1 101
char 1 114
char 1 0
align 1
LABELV $655
char 1 68
char 1 117
char 1 101
char 1 108
char 1 0
align 1
LABELV $654
char 1 74
char 1 101
char 1 100
char 1 105
char 1 32
char 1 77
char 1 97
char 1 115
char 1 116
char 1 101
char 1 114
char 1 0
align 1
LABELV $653
char 1 72
char 1 111
char 1 108
char 1 111
char 1 99
char 1 114
char 1 111
char 1 110
char 1 32
char 1 70
char 1 70
char 1 65
char 1 0
align 1
LABELV $652
char 1 70
char 1 114
char 1 101
char 1 101
char 1 32
char 1 70
char 1 111
char 1 114
char 1 32
char 1 65
char 1 108
char 1 108
char 1 0
align 1
LABELV $643
char 1 114
char 1 101
char 1 112
char 1 111
char 1 114
char 1 116
char 1 0
align 1
LABELV $642
char 1 115
char 1 101
char 1 97
char 1 114
char 1 99
char 1 104
char 1 32
char 1 97
char 1 110
char 1 100
char 1 32
char 1 100
char 1 101
char 1 115
char 1 116
char 1 114
char 1 111
char 1 121
char 1 0
align 1
LABELV $641
char 1 103
char 1 117
char 1 97
char 1 114
char 1 100
char 1 32
char 1 108
char 1 111
char 1 99
char 1 97
char 1 116
char 1 105
char 1 111
char 1 110
char 1 0
align 1
LABELV $640
char 1 99
char 1 111
char 1 118
char 1 101
char 1 114
char 1 32
char 1 109
char 1 101
char 1 0
align 1
LABELV $639
char 1 99
char 1 111
char 1 109
char 1 101
char 1 32
char 1 104
char 1 101
char 1 114
char 1 101
char 1 0
align 1
LABELV $638
char 1 104
char 1 111
char 1 108
char 1 100
char 1 32
char 1 116
char 1 104
char 1 105
char 1 115
char 1 32
char 1 112
char 1 111
char 1 115
char 1 105
char 1 116
char 1 105
char 1 111
char 1 110
char 1 0
align 1
LABELV $637
char 1 104
char 1 111
char 1 108
char 1 100
char 1 32
char 1 121
char 1 111
char 1 117
char 1 114
char 1 32
char 1 112
char 1 111
char 1 115
char 1 105
char 1 116
char 1 105
char 1 111
char 1 110
char 1 0
align 1
LABELV $636
char 1 116
char 1 97
char 1 117
char 1 110
char 1 116
char 1 0
align 1
LABELV $633
char 1 112
char 1 114
char 1 97
char 1 105
char 1 115
char 1 101
char 1 0
align 1
LABELV $616
char 1 107
char 1 105
char 1 108
char 1 108
char 1 95
char 1 105
char 1 110
char 1 115
char 1 117
char 1 108
char 1 116
char 1 0
align 1
LABELV $611
char 1 107
char 1 105
char 1 108
char 1 108
char 1 95
char 1 103
char 1 97
char 1 117
char 1 110
char 1 116
char 1 108
char 1 101
char 1 116
char 1 0
align 1
LABELV $600
char 1 100
char 1 101
char 1 97
char 1 116
char 1 104
char 1 95
char 1 105
char 1 110
char 1 115
char 1 117
char 1 108
char 1 116
char 1 0
align 1
LABELV $590
char 1 118
char 1 116
char 1 101
char 1 108
char 1 108
char 1 58
char 1 32
char 1 37
char 1 115
char 1 32
char 1 116
char 1 111
char 1 32
char 1 37
char 1 115
char 1 58
char 1 32
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $568
char 1 118
char 1 111
char 1 105
char 1 99
char 1 101
char 1 58
char 1 32
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $558
char 1 37
char 1 115
char 1 32
char 1 37
char 1 100
char 1 32
char 1 37
char 1 100
char 1 32
char 1 37
char 1 100
char 1 32
char 1 37
char 1 115
char 1 0
align 1
LABELV $557
char 1 118
char 1 99
char 1 104
char 1 97
char 1 116
char 1 0
align 1
LABELV $556
char 1 118
char 1 116
char 1 101
char 1 108
char 1 108
char 1 0
align 1
LABELV $553
char 1 118
char 1 116
char 1 99
char 1 104
char 1 97
char 1 116
char 1 0
align 1
LABELV $536
char 1 116
char 1 101
char 1 108
char 1 108
char 1 58
char 1 32
char 1 37
char 1 115
char 1 32
char 1 116
char 1 111
char 1 32
char 1 37
char 1 115
char 1 58
char 1 32
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $514
char 1 37
char 1 115
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $508
char 1 25
char 1 91
char 1 37
char 1 115
char 1 37
char 1 99
char 1 37
char 1 99
char 1 25
char 1 93
char 1 25
char 1 58
char 1 32
char 1 0
align 1
LABELV $507
char 1 25
char 1 91
char 1 37
char 1 115
char 1 37
char 1 99
char 1 37
char 1 99
char 1 25
char 1 93
char 1 32
char 1 40
char 1 37
char 1 115
char 1 41
char 1 25
char 1 58
char 1 32
char 1 0
align 1
LABELV $502
char 1 25
char 1 40
char 1 37
char 1 115
char 1 37
char 1 99
char 1 37
char 1 99
char 1 25
char 1 41
char 1 25
char 1 58
char 1 32
char 1 0
align 1
LABELV $501
char 1 25
char 1 40
char 1 37
char 1 115
char 1 37
char 1 99
char 1 37
char 1 99
char 1 25
char 1 41
char 1 32
char 1 40
char 1 37
char 1 115
char 1 41
char 1 25
char 1 58
char 1 32
char 1 0
align 1
LABELV $498
char 1 115
char 1 97
char 1 121
char 1 116
char 1 101
char 1 97
char 1 109
char 1 58
char 1 32
char 1 37
char 1 115
char 1 58
char 1 32
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $496
char 1 37
char 1 115
char 1 37
char 1 99
char 1 37
char 1 99
char 1 25
char 1 58
char 1 32
char 1 0
align 1
LABELV $495
char 1 115
char 1 97
char 1 121
char 1 58
char 1 32
char 1 37
char 1 115
char 1 58
char 1 32
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $484
char 1 99
char 1 104
char 1 97
char 1 116
char 1 0
align 1
LABELV $483
char 1 116
char 1 99
char 1 104
char 1 97
char 1 116
char 1 0
align 1
LABELV $482
char 1 37
char 1 115
char 1 32
char 1 34
char 1 37
char 1 115
char 1 37
char 1 99
char 1 37
char 1 99
char 1 37
char 1 115
char 1 34
char 1 0
align 1
LABELV $454
char 1 67
char 1 109
char 1 100
char 1 95
char 1 70
char 1 111
char 1 108
char 1 108
char 1 111
char 1 119
char 1 67
char 1 121
char 1 99
char 1 108
char 1 101
char 1 95
char 1 102
char 1 58
char 1 32
char 1 98
char 1 97
char 1 100
char 1 32
char 1 100
char 1 105
char 1 114
char 1 32
char 1 37
char 1 105
char 1 0
align 1
LABELV $425
char 1 94
char 1 50
char 1 0
align 1
LABELV $424
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 37
char 1 115
char 1 10
char 1 34
char 1 0
align 1
LABELV $423
char 1 70
char 1 79
char 1 82
char 1 67
char 1 69
char 1 80
char 1 79
char 1 87
char 1 69
char 1 82
char 1 67
char 1 72
char 1 65
char 1 78
char 1 71
char 1 69
char 1 68
char 1 0
align 1
LABELV $414
char 1 78
char 1 79
char 1 83
char 1 87
char 1 73
char 1 84
char 1 67
char 1 72
char 1 0
align 1
LABELV $409
char 1 80
char 1 82
char 1 73
char 1 78
char 1 84
char 1 83
char 1 80
char 1 69
char 1 67
char 1 84
char 1 69
char 1 65
char 1 77
char 1 0
align 1
LABELV $408
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 83
char 1 112
char 1 101
char 1 99
char 1 116
char 1 97
char 1 116
char 1 111
char 1 114
char 1 32
char 1 116
char 1 101
char 1 97
char 1 109
char 1 10
char 1 34
char 1 0
align 1
LABELV $406
char 1 80
char 1 82
char 1 73
char 1 78
char 1 84
char 1 70
char 1 82
char 1 69
char 1 69
char 1 84
char 1 69
char 1 65
char 1 77
char 1 0
align 1
LABELV $405
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 70
char 1 114
char 1 101
char 1 101
char 1 32
char 1 116
char 1 101
char 1 97
char 1 109
char 1 10
char 1 34
char 1 0
align 1
LABELV $403
char 1 80
char 1 82
char 1 73
char 1 78
char 1 84
char 1 82
char 1 69
char 1 68
char 1 84
char 1 69
char 1 65
char 1 77
char 1 0
align 1
LABELV $402
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 82
char 1 101
char 1 100
char 1 32
char 1 116
char 1 101
char 1 97
char 1 109
char 1 10
char 1 34
char 1 0
align 1
LABELV $400
char 1 80
char 1 82
char 1 73
char 1 78
char 1 84
char 1 66
char 1 76
char 1 85
char 1 69
char 1 84
char 1 69
char 1 65
char 1 77
char 1 0
align 1
LABELV $361
char 1 84
char 1 79
char 1 79
char 1 77
char 1 65
char 1 78
char 1 89
char 1 66
char 1 76
char 1 85
char 1 69
char 1 0
align 1
LABELV $356
char 1 84
char 1 79
char 1 79
char 1 77
char 1 65
char 1 78
char 1 89
char 1 82
char 1 69
char 1 68
char 1 0
align 1
LABELV $345
char 1 98
char 1 0
align 1
LABELV $344
char 1 98
char 1 108
char 1 117
char 1 101
char 1 0
align 1
LABELV $340
char 1 114
char 1 0
align 1
LABELV $339
char 1 114
char 1 101
char 1 100
char 1 0
align 1
LABELV $332
char 1 115
char 1 0
align 1
LABELV $331
char 1 115
char 1 112
char 1 101
char 1 99
char 1 116
char 1 97
char 1 116
char 1 111
char 1 114
char 1 0
align 1
LABELV $328
char 1 102
char 1 111
char 1 108
char 1 108
char 1 111
char 1 119
char 1 50
char 1 0
align 1
LABELV $325
char 1 102
char 1 111
char 1 108
char 1 108
char 1 111
char 1 119
char 1 49
char 1 0
align 1
LABELV $321
char 1 115
char 1 99
char 1 111
char 1 114
char 1 101
char 1 0
align 1
LABELV $320
char 1 115
char 1 99
char 1 111
char 1 114
char 1 101
char 1 98
char 1 111
char 1 97
char 1 114
char 1 100
char 1 0
align 1
LABELV $316
char 1 115
char 1 101
char 1 116
char 1 116
char 1 101
char 1 97
char 1 109
char 1 58
char 1 32
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 115
char 1 32
char 1 37
char 1 115
char 1 10
char 1 0
align 1
LABELV $315
char 1 74
char 1 79
char 1 73
char 1 78
char 1 69
char 1 68
char 1 84
char 1 72
char 1 69
char 1 66
char 1 65
char 1 84
char 1 84
char 1 76
char 1 69
char 1 0
align 1
LABELV $309
char 1 74
char 1 79
char 1 73
char 1 78
char 1 69
char 1 68
char 1 84
char 1 72
char 1 69
char 1 83
char 1 80
char 1 69
char 1 67
char 1 84
char 1 65
char 1 84
char 1 79
char 1 82
char 1 83
char 1 0
align 1
LABELV $306
char 1 74
char 1 79
char 1 73
char 1 78
char 1 69
char 1 68
char 1 84
char 1 72
char 1 69
char 1 66
char 1 76
char 1 85
char 1 69
char 1 84
char 1 69
char 1 65
char 1 77
char 1 0
align 1
LABELV $303
char 1 74
char 1 79
char 1 73
char 1 78
char 1 69
char 1 68
char 1 84
char 1 72
char 1 69
char 1 82
char 1 69
char 1 68
char 1 84
char 1 69
char 1 65
char 1 77
char 1 0
align 1
LABELV $302
char 1 99
char 1 112
char 1 32
char 1 34
char 1 37
char 1 115
char 1 94
char 1 55
char 1 32
char 1 37
char 1 115
char 1 10
char 1 34
char 1 0
align 1
LABELV $286
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 37
char 1 115
char 1 37
char 1 115
char 1 37
char 1 115
char 1 37
char 1 115
char 1 34
char 1 0
align 1
LABELV $285
char 1 10
char 1 10
char 1 94
char 1 55
char 1 84
char 1 111
char 1 32
char 1 118
char 1 105
char 1 101
char 1 119
char 1 32
char 1 97
char 1 108
char 1 108
char 1 32
char 1 99
char 1 111
char 1 109
char 1 109
char 1 97
char 1 110
char 1 100
char 1 115
char 1 44
char 1 32
char 1 116
char 1 121
char 1 112
char 1 101
char 1 32
char 1 94
char 1 51
char 1 47
char 1 99
char 1 111
char 1 109
char 1 109
char 1 97
char 1 110
char 1 100
char 1 115
char 1 94
char 1 55
char 1 46
char 1 32
char 1 84
char 1 111
char 1 32
char 1 118
char 1 105
char 1 101
char 1 119
char 1 32
char 1 97
char 1 108
char 1 108
char 1 32
char 1 102
char 1 101
char 1 97
char 1 116
char 1 117
char 1 114
char 1 101
char 1 115
char 1 44
char 1 32
char 1 116
char 1 121
char 1 112
char 1 101
char 1 32
char 1 94
char 1 51
char 1 47
char 1 102
char 1 101
char 1 97
char 1 116
char 1 117
char 1 114
char 1 101
char 1 115
char 1 94
char 1 55
char 1 46
char 1 10
char 1 0
align 1
LABELV $284
char 1 10
char 1 94
char 1 55
char 1 70
char 1 111
char 1 114
char 1 32
char 1 116
char 1 104
char 1 101
char 1 32
char 1 102
char 1 117
char 1 108
char 1 108
char 1 32
char 1 101
char 1 120
char 1 112
char 1 101
char 1 114
char 1 105
char 1 101
char 1 110
char 1 99
char 1 101
char 1 44
char 1 32
char 1 94
char 1 51
char 1 68
char 1 79
char 1 87
char 1 78
char 1 76
char 1 79
char 1 65
char 1 68
char 1 32
char 1 84
char 1 72
char 1 69
char 1 32
char 1 67
char 1 76
char 1 73
char 1 69
char 1 78
char 1 84
char 1 83
char 1 73
char 1 68
char 1 69
char 1 33
char 1 32
char 1 94
char 1 55
char 1 73
char 1 102
char 1 32
char 1 121
char 1 111
char 1 117
char 1 32
char 1 104
char 1 97
char 1 118
char 1 101
char 1 110
char 1 39
char 1 116
char 1 32
char 1 97
char 1 108
char 1 114
char 1 101
char 1 97
char 1 100
char 1 121
char 1 44
char 1 32
char 1 116
char 1 121
char 1 112
char 1 101
char 1 58
char 1 10
char 1 94
char 1 51
char 1 115
char 1 118
char 1 95
char 1 97
char 1 108
char 1 108
char 1 111
char 1 119
char 1 68
char 1 111
char 1 119
char 1 110
char 1 108
char 1 111
char 1 97
char 1 100
char 1 32
char 1 49
char 1 94
char 1 55
char 1 46
char 1 32
char 1 84
char 1 104
char 1 101
char 1 110
char 1 32
char 1 94
char 1 51
char 1 47
char 1 114
char 1 101
char 1 99
char 1 111
char 1 110
char 1 110
char 1 101
char 1 99
char 1 116
char 1 94
char 1 55
char 1 46
char 1 10
char 1 0
align 1
LABELV $283
char 1 10
char 1 94
char 1 55
char 1 85
char 1 115
char 1 101
char 1 32
char 1 109
char 1 111
char 1 118
char 1 101
char 1 109
char 1 101
char 1 110
char 1 116
char 1 32
char 1 100
char 1 105
char 1 114
char 1 101
char 1 99
char 1 116
char 1 105
char 1 111
char 1 110
char 1 115
char 1 32
char 1 116
char 1 111
char 1 32
char 1 112
char 1 97
char 1 114
char 1 114
char 1 121
char 1 32
char 1 117
char 1 112
char 1 44
char 1 32
char 1 115
char 1 105
char 1 100
char 1 101
char 1 115
char 1 32
char 1 97
char 1 110
char 1 100
char 1 32
char 1 108
char 1 111
char 1 119
char 1 101
char 1 114
char 1 32
char 1 115
char 1 105
char 1 100
char 1 101
char 1 115
char 1 32
char 1 40
char 1 97
char 1 32
char 1 116
char 1 111
char 1 116
char 1 97
char 1 108
char 1 32
char 1 111
char 1 102
char 1 32
char 1 53
char 1 32
char 1 100
char 1 105
char 1 114
char 1 101
char 1 99
char 1 116
char 1 105
char 1 111
char 1 110
char 1 115
char 1 41
char 1 46
char 1 10
char 1 0
align 1
LABELV $282
char 1 10
char 1 94
char 1 55
char 1 73
char 1 110
char 1 32
char 1 116
char 1 104
char 1 105
char 1 115
char 1 32
char 1 109
char 1 111
char 1 100
char 1 32
char 1 121
char 1 111
char 1 117
char 1 32
char 1 109
char 1 117
char 1 115
char 1 116
char 1 32
char 1 109
char 1 97
char 1 110
char 1 117
char 1 97
char 1 108
char 1 108
char 1 121
char 1 32
char 1 112
char 1 97
char 1 114
char 1 114
char 1 121
char 1 32
char 1 97
char 1 116
char 1 116
char 1 97
char 1 99
char 1 107
char 1 115
char 1 46
char 1 32
char 1 73
char 1 116
char 1 32
char 1 99
char 1 97
char 1 110
char 1 32
char 1 98
char 1 101
char 1 32
char 1 98
char 1 111
char 1 117
char 1 110
char 1 100
char 1 32
char 1 108
char 1 105
char 1 107
char 1 101
char 1 32
char 1 116
char 1 104
char 1 105
char 1 115
char 1 58
char 1 10
char 1 94
char 1 51
char 1 98
char 1 105
char 1 110
char 1 100
char 1 32
char 1 109
char 1 111
char 1 117
char 1 115
char 1 101
char 1 50
char 1 32
char 1 43
char 1 98
char 1 117
char 1 116
char 1 116
char 1 111
char 1 110
char 1 49
char 1 52
char 1 10
char 1 10
char 1 0
align 1
LABELV $281
char 1 10
char 1 10
char 1 32
char 1 32
char 1 32
char 1 32
char 1 32
char 1 32
char 1 32
char 1 32
char 1 32
char 1 32
char 1 32
char 1 32
char 1 32
char 1 32
char 1 32
char 1 94
char 1 49
char 1 42
char 1 42
char 1 42
char 1 42
char 1 42
char 1 42
char 1 42
char 1 42
char 1 42
char 1 32
char 1 94
char 1 55
char 1 83
char 1 97
char 1 98
char 1 101
char 1 114
char 1 32
char 1 83
char 1 104
char 1 101
char 1 110
char 1 97
char 1 110
char 1 105
char 1 103
char 1 97
char 1 110
char 1 115
char 1 46
char 1 94
char 1 49
char 1 42
char 1 42
char 1 42
char 1 42
char 1 42
char 1 42
char 1 42
char 1 42
char 1 42
char 1 32
char 1 10
char 1 10
char 1 0
align 1
LABELV $279
char 1 65
char 1 84
char 1 84
char 1 69
char 1 77
char 1 80
char 1 84
char 1 68
char 1 85
char 1 69
char 1 76
char 1 75
char 1 73
char 1 76
char 1 76
char 1 0
align 1
LABELV $268
char 1 37
char 1 100
char 1 0
align 1
LABELV $267
char 1 116
char 1 101
char 1 97
char 1 109
char 1 116
char 1 97
char 1 115
char 1 107
char 1 0
align 1
LABELV $263
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 76
char 1 101
char 1 118
char 1 101
char 1 108
char 1 83
char 1 104
char 1 111
char 1 116
char 1 0
align 1
LABELV $262
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 77
char 1 117
char 1 115
char 1 116
char 1 32
char 1 98
char 1 101
char 1 32
char 1 105
char 1 110
char 1 32
char 1 103
char 1 95
char 1 103
char 1 97
char 1 109
char 1 101
char 1 116
char 1 121
char 1 112
char 1 101
char 1 32
char 1 48
char 1 32
char 1 102
char 1 111
char 1 114
char 1 32
char 1 108
char 1 101
char 1 118
char 1 101
char 1 108
char 1 115
char 1 104
char 1 111
char 1 116
char 1 10
char 1 34
char 1 0
align 1
LABELV $252
char 1 110
char 1 111
char 1 99
char 1 108
char 1 105
char 1 112
char 1 32
char 1 79
char 1 78
char 1 10
char 1 0
align 1
LABELV $251
char 1 110
char 1 111
char 1 99
char 1 108
char 1 105
char 1 112
char 1 32
char 1 79
char 1 70
char 1 70
char 1 10
char 1 0
align 1
LABELV $245
char 1 110
char 1 111
char 1 116
char 1 97
char 1 114
char 1 103
char 1 101
char 1 116
char 1 32
char 1 79
char 1 78
char 1 10
char 1 0
align 1
LABELV $244
char 1 110
char 1 111
char 1 116
char 1 97
char 1 114
char 1 103
char 1 101
char 1 116
char 1 32
char 1 79
char 1 70
char 1 70
char 1 10
char 1 0
align 1
LABELV $238
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 34
char 1 0
align 1
LABELV $237
char 1 103
char 1 111
char 1 100
char 1 109
char 1 111
char 1 100
char 1 101
char 1 32
char 1 79
char 1 78
char 1 10
char 1 0
align 1
LABELV $236
char 1 103
char 1 111
char 1 100
char 1 109
char 1 111
char 1 100
char 1 101
char 1 32
char 1 79
char 1 70
char 1 70
char 1 10
char 1 0
align 1
LABELV $224
char 1 97
char 1 115
char 1 115
char 1 105
char 1 115
char 1 116
char 1 0
align 1
LABELV $221
char 1 100
char 1 101
char 1 102
char 1 101
char 1 110
char 1 100
char 1 0
align 1
LABELV $218
char 1 103
char 1 97
char 1 117
char 1 110
char 1 116
char 1 108
char 1 101
char 1 116
char 1 97
char 1 119
char 1 97
char 1 114
char 1 100
char 1 0
align 1
LABELV $215
char 1 105
char 1 109
char 1 112
char 1 114
char 1 101
char 1 115
char 1 115
char 1 105
char 1 118
char 1 101
char 1 0
align 1
LABELV $212
char 1 101
char 1 120
char 1 99
char 1 101
char 1 108
char 1 108
char 1 101
char 1 110
char 1 116
char 1 0
align 1
LABELV $204
char 1 97
char 1 114
char 1 109
char 1 111
char 1 114
char 1 0
align 1
LABELV $192
char 1 97
char 1 109
char 1 109
char 1 111
char 1 0
align 1
LABELV $189
char 1 119
char 1 101
char 1 97
char 1 112
char 1 111
char 1 110
char 1 110
char 1 117
char 1 109
char 1 0
align 1
LABELV $183
char 1 119
char 1 101
char 1 97
char 1 112
char 1 111
char 1 110
char 1 115
char 1 0
align 1
LABELV $173
char 1 104
char 1 101
char 1 97
char 1 108
char 1 116
char 1 104
char 1 0
align 1
LABELV $165
char 1 97
char 1 108
char 1 108
char 1 0
align 1
LABELV $159
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 85
char 1 115
char 1 101
char 1 114
char 1 32
char 1 37
char 1 115
char 1 32
char 1 105
char 1 115
char 1 32
char 1 110
char 1 111
char 1 116
char 1 32
char 1 111
char 1 110
char 1 32
char 1 116
char 1 104
char 1 101
char 1 32
char 1 115
char 1 101
char 1 114
char 1 118
char 1 101
char 1 114
char 1 10
char 1 34
char 1 0
align 1
LABELV $149
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 67
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 32
char 1 37
char 1 105
char 1 32
char 1 105
char 1 115
char 1 32
char 1 110
char 1 111
char 1 116
char 1 32
char 1 97
char 1 99
char 1 116
char 1 105
char 1 118
char 1 101
char 1 10
char 1 34
char 1 0
align 1
LABELV $146
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 66
char 1 97
char 1 100
char 1 32
char 1 99
char 1 108
char 1 105
char 1 101
char 1 110
char 1 116
char 1 32
char 1 115
char 1 108
char 1 111
char 1 116
char 1 58
char 1 32
char 1 37
char 1 105
char 1 10
char 1 34
char 1 0
align 1
LABELV $120
char 1 77
char 1 85
char 1 83
char 1 84
char 1 66
char 1 69
char 1 65
char 1 76
char 1 73
char 1 86
char 1 69
char 1 0
align 1
LABELV $117
char 1 78
char 1 79
char 1 67
char 1 72
char 1 69
char 1 65
char 1 84
char 1 83
char 1 0
align 1
LABELV $116
char 1 83
char 1 86
char 1 73
char 1 78
char 1 71
char 1 65
char 1 77
char 1 69
char 1 0
align 1
LABELV $115
char 1 112
char 1 114
char 1 105
char 1 110
char 1 116
char 1 32
char 1 34
char 1 37
char 1 115
char 1 10
char 1 34
char 1 0
align 1
LABELV $105
char 1 115
char 1 99
char 1 111
char 1 114
char 1 101
char 1 115
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 37
char 1 115
char 1 0
align 1
LABELV $97
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 32
char 1 37
char 1 105
char 1 0
